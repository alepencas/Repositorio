%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 13.0.0
%%For: (romashkin) ()
%%Title: (rerrer_46 [Converted].eps)
%%CreationDate: 9/19/2008 8:44 PM
%%BoundingBox: 72 5 532 547
%%HiResBoundingBox: 72.4805 5.43457 531.457 546.9072
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 298.5 420.3896 298.5 420.3896
%AI3_TileBox: 0.037598 0.074219 595.0576 841.9346
%AI3_DocumentPreview: Header
%AI5_ArtSize: 595.2756 841.8898
%AI5_RulerUnits: 1
%AI5_ArtFlags: 0 0 0 1 0 0 0 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -221 772.8896 0.6667 945 663 26 0 0 44 75 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI5_End_NonPrinting--
1 Bn
%AI5_BeginGradient: (Steel Radial)
(Steel Radial) 1 4 Bd
[
<
0505050504040404040303030302020202010101010000
>
<
0807070707060606050505040404030302020201010000
>
<
0A0A0A0909080808070706060505040403030202010100
>
<
1312121110100F0E0D0C0C0B0A09080706050403020100
>
1 %_Br
<
00000000000000000101010101010101010101010202020202020202020202030303030303030303
04040404040404040404050505050505050505060606060606060607070707070707070708080808
0808080809090909090909090A0A0A0A0A0A0A0A0B
>
<
00000000000000000000000101010101010101010101010101010202020202020202020202020203
03030303030303030303030404040404040404040404040505050505050505050505060606060606
060606060607070707070707070707070808080808
>
<
00000000000000000000000101010101010101010101010101010202020202020202020202020203
03030303030303030303030404040404040404040404040505050505050505050505060606060606
060606060607070707070707070707070808080808
>
<
00000101020203030405050607070809090A0B0B0C0D0E0E0F101111121314151516171819191A1B
1C1D1E1F1F20212223242525262728292A2B2C2D2E2E2F303132333435363738393A3B3C3D3D3E3F
404142434445464748494A4B4C4D4E4F5051525354
>
1 %_Br
<
0B0B0B0B0B0B0B0C0C0C0C0D0D0D0D0E0E0E0E0F0F0F101010101111111212121313131414141515
15161617171718181819191A1A1A1B1B1C1C1C1D1D1E1E1E1F1F2020212121222223232424242525
2626272728282929292A2A2B2B2C2C2D2D2E2E2F2F30303131323233333434353536363737383839
393A3A3B3B3C3C3D3D3E3E3F3F40414142424343444445
>
<
0808080808080808080809090909090909090909090A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0C
0C0C0C0C0C0C0C0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0F0F0F0F0F0F101010101010101111111111
11111212121212121313131313131414141414141515151515151616161616161717171717171818
1818181919191919191A1A1A1A1A1B1B1B1B1B1B1C1C1C
>
<
08080808080808080909090909090909090A0A0A0A0A0A0A0B0B0B0B0B0B0B0C0C0C0C0C0C0D0D0D
0D0D0D0E0E0E0E0E0F0F0F0F0F0F1010101010111111111112121212121313131313141414141415
1515151616161616171717171818181818191919191A1A1A1A1B1B1B1B1B1C1C1C1C1D1D1D1D1E1E
1E1E1F1F1F1F2020202021212121222222222323232324
>
<
5454555555555656575757585859595A5A5B5B5C5C5D5D5E5E5F5F60616162626364646566666768
68696A6A6B6C6C6D6E6E6F70717172737374757676777879797A7B7C7D7D7E7F8081818283848586
868788898A8B8B8C8D8E8F9091919293949596979898999A9B9C9D9E9FA0A1A2A3A3A4A5A6A7A8A9
AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBBBCBDBEBF
>
1 %_Br
[
0.02 0.03 0.04 0.0737 1 56.1798 0 %_BS
%_0.02 0.03 0.04 0.0737 1 56.1798 0 Bs
0 0 0 0 1 56.1798 0.005 %_BS
%_0 0 0 0 1 56.1798 0 Bs
0.0415 0.0311 0.0311 0.33 1 59.2592 52.2472 %_BS
%_0.0415 0.0311 0.0311 0.33 1 59.2592 52.2472 Bs
0.27 0.11 0.14 0.7509 1 41.8182 100 %_BS
%_0.27 0.11 0.14 0.7509 1 41.8182 100 Bs
BD
%AI5_EndGradient
%AI5_Begin_NonPrinting
Np
7 Bn
%AI5_BeginGradient: (Gold)
(Gold) 0 3 Bd
[
0
<
333435363738393A3B3C3D3E3F404142434445464748494A4B4D4E4F505152535455565758595A5B
5C
>
1
0.0034
1 %_Br
0
<
121212131313131314141414151515151516161616171717171718181818191919191A1A1A1A1A1B
1B1B1B1C1C1C1C1C1D1D1D1D1E1E1E1E1E1F1F1F1F20202020212121212122222222232323232324
242424252525252526262626272727272728282828292929292A2A2A2A2A2B2B2B2B2C2C2C2C2C2D
2D2D2D2E2E2E2E2E2F2F2F2F30303030313131313132323232333333
>
<
6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192
939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACAEAFB0B1B2B3B4B5B6B7B8B9BABB
BCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3
E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0.0034
1 %_Br
[
0 0.36 1 0.0034 1 50 100 %_BS
%_0 0.36 1 0.0034 1 50 100 Bs
0 0.2 1 0.0034 1 50 50 %_BS
%_0 0.2 1 0.0034 1 50 50 Bs
0 0.07 0.42 0.0034 1 50 0 %_BS
%_0 0.07 0.42 0.0034 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Green Pepper)
(Green Pepper) 0 5 Bd
[
<
2F3031323335363738393A3B3C3D3E3F4041424345464748494A4B4C4D4E4F505051525354555657
58595A5B5C5D5E5E5F60616263646565666768696A6B6B6C6D6E6F6F707172737374757677777879
7A7A7B7C7D7D7E7F7F80818282838484858686878888898A8A8B8C8C8D8D8E8F8F90909192929393
949595969697979899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A5A5A6A6A6A7A7A8
A8A9A9A9AAAAABABACACACADADAEAEAEAFAFAFB0B0B1B1B1B2B2B2B3B3B3B4B4B4B5B5B5B6B6B6B6
B7B7B7B8B8B8B9B9B9B9BABABABABBBBBBBBBCBCBCBCBDBDBDBDBEBEBEBEBEBFBFBFBFBFC0C0C0C0
C0C1C1C1C1C1C2C2C2C2C2C2C2C3C3C3C3C3C3C4C4C4C4C4C4C4C4C5C5C5C5C5C5C5C5C6C6C6C6C6
C6C6C6C6C6C6C7C7C7C7C7C7C7C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8C8
C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9
C9C9
>
<
00000101010202020303030304040405050506060606070707080808080909090A0A0A0A0B0B0B0B
0C0C0C0D0D0D0D0E0E0E0E0F0F0F0F10101010111111111112121212131313131414141414151515
1516161616161717171717181818181819191919191A1A1A1A1A1A1B1B1B1B1B1C1C1C1C1C1C1D1D
1D1D1D1D1E1E1E1E1E1E1E1F1F1F1F1F1F2020202020202021212121212121212222222222222223
23232323232323232424242424242424242525252525252525252626262626262626262626272727
27272727272727272728282828282828282828282828282929292929292929292929292929292929
2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B
2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C
2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C
2C2C
>
<
80818283848586868788898A8B8C8D8D8E8F9091929393949596979898999A9B9C9C9D9E9FA0A0A1
A2A3A3A4A5A6A6A7A8A9A9AAABACACADAEAEAFB0B0B1B2B2B3B4B5B5B6B6B7B8B8B9BABABBBCBCBD
BDBEBFBFC0C1C1C2C2C3C3C4C5C5C6C6C7C7C8C9C9CACACBCBCCCCCDCDCECECFCFD0D0D1D1D2D2D3
D3D4D4D5D5D6D6D7D7D8D8D8D9D9DADADBDBDBDCDCDDDDDDDEDEDFDFDFE0E0E1E1E1E2E2E3E3E3E4
E4E4E5E5E5E6E6E6E7E7E7E8E8E8E9E9E9EAEAEAEBEBEBEBECECECEDEDEDEDEEEEEEEEEFEFEFEFF0
F0F0F0F1F1F1F1F2F2F2F2F3F3F3F3F3F4F4F4F4F4F5F5F5F5F5F6F6F6F6F6F6F7F7F7F7F7F7F8F8
F8F8F8F8F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFC
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFF
>
<
00000000000000000001010101010101010101010101010101010101020202020202020202020202
02020202020202020303030303030303030303030303030303030303030303040404040404040404
04040404040404040404040404040404040505050505050505050505050505050505050505050505
05050505050505050506060606060606060606060606060606060606060606060606060606060606
06060606060606060606070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707070707070707070707070707070707070707070808080808
08080808080808080808080808080808080808080808080808080808080808080808080808080808
08080808080808080808080808080808080808080808080808080808080808080808080808080808
08080808080808080808080808080808080808080808080808080808080808080808080808080808
0808
>
1 %_Br
<
80807F7E7E7D7D7C7B7B7A79797877767675747473727171706F6E6E6D6C6B6A6A69686766666564
63626261605F5E5E5D5C5B5A5959585756555454535251504F4F4E4D4C4B4A494948474645444342
4241403F3E3D3C3B3B3A39383736353433333231302F
>
0
<
DBDADAD9D9D8D7D6D6D5D4D3D3D2D1D0CFCFCECDCCCBCACAC9C8C7C6C5C4C4C3C2C1C0BFBEBDBDBC
BBBAB9B8B7B6B5B4B3B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A2A1A09F9E9D9C9B9A99989796
9594939291908F8E8D8C8B8A89888786858483828180
>
0
1 %_Br
<
7475767778797A7B7C7D7E7F80
>
0
<
DFDFDEDEDEDDDDDDDCDCDCDBDB
>
0
1 %_Br
<
C9C8C8C7C7C6C5C4C4C3C2C1C1C0BFBEBDBCBCBBBAB9B8B7B7B6B5B4B3B2B1B0B0AFAEADACABAAA9
A8A7A7A6A5A4A3A2A1A09F9E9D9C9B9A99989797969594939291908F8E8D8C8B8A89888786858483
8281807F7E7D7C7B7A797877767574
>
<
2C2C2B2B2B2A2A2A29292828282727262626252524242323222222212120201F1F1E1E1D1D1D1C1C
1B1B1A1A19191818171716161515141413131212111110100F0F0E0E0D0D0C0C0B0B0A0A09090808
070706060505040403030202010100
>
<
FFFFFFFEFEFEFEFDFDFDFCFCFCFCFBFBFBFAFAFAF9F9F9F8F8F8F7F7F7F6F6F6F5F5F5F4F4F4F3F3
F3F2F2F2F1F1F1F0F0F0EFEFEFEEEEEDEDEDECECECEBEBEBEAEAE9E9E9E8E8E8E7E7E7E6E6E5E5E5
E4E4E4E3E3E2E2E2E1E1E1E0E0DFDF
>
<
08080808080808080707070707070707070707070707060606060606060606060606050505050505
05050505050404040404040404040404040303030303030303030303020202020202020202020201
010101010101010101000000000000
>
1 %_Br
[
0.788235 0.172549 1 0.031373 1 53.8461 98.3146 %_BS
%_0.788235 0.172549 1 0.031373 1 53.8461 98.3146 Bs
0.184314 0 0.501961 0 1 23.0769 62.3595 %_BS
%_0.184314 0 0.501961 0 1 23.0769 62.3595 Bs
0.501961 0 0.858823 0 1 53.8461 44.9438 %_BS
%_0.501961 0 0.858823 0 1 53.8461 44.9438 Bs
0.454902 0 0.87451 0 1 53.8461 28.0899 %_BS
%_0.454902 0 0.87451 0 1 53.8461 28.0899 Bs
0.788235 0.172549 1 0.031373 1 53.8461 2.2472 %_BS
%_0.788235 0.172549 1 0.031373 1 53.8461 2.2472 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (New Gradient Swatch 1)
(New Gradient Swatch 1) 1 2 Bd
[
<
2F2F30313132333334353536373738393A3A3B3C3D3E3E3F4041414243444545464748494A4A4B4C
4D4E4F4F50515253545555565758595A5B5C5C5D5E5F60616263646465666768696A6B6C6D6D6E6F
70717273747576777879797A7B7C7D7E7F80818283848586878788898A8B8C8D8E8F909192939495
969798999A9B9C9D9E9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBC
BDBEBFC0C1C2C3C4C5C6C7C8C9
>
<
00000000010101010102020202020303030303040404040505050506060606060707070708080808
090909090A0A0A0A0B0B0B0B0B0C0C0C0C0D0D0D0D0E0E0E0F0F0F0F101010101111111112121212
13131313141414141515151616161617171717181818181919191A1A1A1A1B1B1B1B1C1C1C1D1D1D
1D1E1E1E1E1F1F1F2020202021212122222222232323232424242525252526262627272727282828
292929292A2A2A2B2B2B2B2C2C
>
<
8080818182828383848585868687888889898A8B8B8C8D8D8E8F8F90919192939394959596979798
99999A9B9B9C9D9E9E9FA0A0A1A2A3A3A4A5A5A6A7A8A8A9AAABABACADAEAEAFB0B1B1B2B3B4B4B5
B6B7B7B8B9BABABBBCBDBDBEBFC0C0C1C2C3C4C4C5C6C7C7C8C9CACBCBCCCDCECECFD0D1D2D2D3D4
D5D6D6D7D8D9DADADBDCDDDEDEDFE0E1E2E2E3E4E5E6E6E7E8E9EAEAEBECEDEEEFEFF0F1F2F3F3F4
F5F6F7F8F8F9FAFBFCFDFDFEFF
>
<
00000000000000000000000000000001010101010101010101010101010101010101010101010102
02020202020202020202020202020202020202020202030303030303030303030303030303030303
03030304040404040404040404040404040404040404040405050505050505050505050505050505
05050505060606060606060606060606060606060606060707070707070707070707070707070707
07070708080808080808080808
>
1 %_Br
[
0.184314 0 0.501961 0 1 53.9326 0 %_BS
%_0.184314 0 0.501961 0 1 53.9326 0 Bs
0.788235 0.172549 1 0.031373 1 53.8461 98.3146 %_BS
%_0.788235 0.172549 1 0.031373 1 53.8461 98.3146 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (New Gradient Swatch 2)
(New Gradient Swatch 2) 0 3 Bd
[
<
02020202020303030303030304040404040404050505050505060606060607070707070708080808
080909090909090A0A0A0A0A0B0B0B0B0B0C0C0C0C0C0D0D0D0D0D0E0E0E0E0E0F0F0F0F0F101010
1010111111111212121212131313
>
<
000000010101010102020203030303040404050505050606060707070808080909090A0A0A0B0B0B
0C0C0C0D0D0D0E0E0E0F0F0F1010101111111212131313141414151515161617171718181819191A
1A1A1B1B1C1C1C1D1D1D1E1E1F1F
>
<
3E3E3F3F40414142434344454546474748494A4A4B4C4D4E4E4F5051525253545556575758595A5B
5C5D5E5E5F60616263646566666768696A6B6C6D6E6F70717273747475767778797A7B7C7D7E7F80
8182838485868788898A8B8C8D8E
>
0
1 %_Br
<
13131312121212111111111110101010100F0F0F0F0E0E0E0E0E0D0D0D0D0D0C0C0C0C0B0B0B0B0B
0A0A0A0A0A0909090908080808080707070707060606060505050505040404040403030303020202
>
<
1F1F1E1E1D1D1D1C1C1B1B1B1A1A1A19191818181717161616151514141413131212121111101010
0F0F0F0E0E0D0D0D0C0C0B0B0B0A0A09090908080707070606050505040404030302020201010000
>
<
8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867
6564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E
>
0
1 %_Br
[
0.07451 0.121569 0.556863 0 1 50 100 %_BS
%_0.07451 0.121569 0.556863 0 1 50 100 Bs
0.007843 0 0.243137 0 1 55.3571 53.2967 %_BS
%_0.007843 0 0.243137 0 1 55.3571 53.2967 Bs
0.07451 0.121569 0.556863 0 1 50 0 %_BS
%_0.07451 0.121569 0.556863 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (New Gradient Swatch 3)
(New Gradient Swatch 3) 1 2 Bd
[
<
74747575757576767777777878787979797A7A7B7B7B7C7C7D7D7D7E7E7F7F7F8080818182828283
8384848585858686878788888989898A8A8B8B8C8C8D8D8D8E8E8F8F909091919292929393949495
959696979798989999999A9A9B9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A5A5A5A6A6A7A7A8
A8A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1B2B2B3B3B4B4B5B5B6B6B7B7B8B8B9B9BABABBBBBC
BCBDBDBEBEBFBFC0C0C1C2C2C3C3C4C4C5C5C6C6C7C7C8C8C9C9CACACBCBCCCCCDCDCECECFCFD0D1
D1D2D2D3D3D4D4D5D5D6D6D7D7D8D8D9D9DADADBDCDCDDDDDEDEDFDFE0E0E1E1E2E2E3E3E4E5E5E6
E6E7E7E8E8E9E9EAEAEBECECEDEDEEEEEFEFF0F0F1F1F2F3F3F4F4F5F5F6F6F7F7F8F8F9FAFAFBFB
FCFCFDFDFEFEFF
>
<
000001020203030405050607070809090A0B0B0C0D0E0E0F101111121314141516171718191A1A1B
1C1D1E1E1F2021222223242526262728292A2B2B2C2D2E2F2F30313233343535363738393A3A3B3C
3D3E3F4040414243444546474748494A4B4C4D4E4E4F50515253545555565758595A5B5C5D5D5E5F
60616263646566676768696A6B6C6D6E6F70717172737475767778797A7B7C7C7D7E7F8081828384
85868788898A8A8B8C8D8E8F909192939495969798999A9A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AA
ABACADAEAFAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECECFD0
D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8
F9FAFBFCFDFEFF
>
<
12121212121212121212121211111111111111111111111111111111111111111010101010101010
101010101010101010100F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0E
0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B
0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A09090909090909090909090909
09090808080808080808080808080808080707070707070707070707070707070606060606060606
06060606060606050505050505050505050505050505040404040404040404040404040403030303
03030303030303030303030202020202020202020202020202010101010101010101010101010100
00000000000000
>
<
00000000000101010101010102020202020202030303030303030404040404040505050505050606
060606060707070707070808080808080909090909090A0A0A0A0A0A0B0B0B0B0B0C0C0C0C0C0C0D
0D0D0D0D0E0E0E0E0E0E0F0F0F0F0F10101010101011111111111212121212131313131313141414
141415151515151616161616161717171717181818181819191919191A1A1A1A1A1B1B1B1B1B1C1C
1C1C1C1C1D1D1D1D1D1E1E1E1E1E1F1F1F1F1F202020202021212121212222222222232323232324
242424242525252525262626262627272727272828282828292929292A2A2A2A2A2B2B2B2B2B2C2C
2C2C2C2D2D2D2D2D2E2E2E2E2E2F2F2F2F2F30303030313131313132323232323333333333343434
34353535353536
>
1 %_Br
[
0.454902 0 0.070588 0 1 53.9326 0 %_BS
%_0.454902 0 0.070588 0 1 53.9326 0 Bs
1 1 0 0.21 1 53.8461 100 %_BS
%_1 1 0 0.21 1 53.8461 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (New Gradient Swatch 4)
(New Gradient Swatch 4) 1 2 Bd
[
<
02020202030303030303040404040405050505050506060606060707070707080808080809090909
090A0A0A0A0A0B0B0B0B0B0C0C0C0C0C0D0D0D0D0E0E0E0E0E0F0F0F0F0F10101010101111111112
12121212131313
>
<
00000101010102020203030304040405050506060607070708080809090A0A0A0B0B0B0C0C0C0D0D
0E0E0E0F0F0F10101011111212121313131414151515161617171718181819191A1A1A1B1B1C1C1C
1D1D1D1E1E1F1F
>
<
3E3F3F4041424243444546474748494A4B4C4D4E4E4F50515253545556575858595A5B5C5D5E5F60
616263646566676869696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F8081828384858687
88898A8B8C8D8E
>
0
1 %_Br
[
0.007843 0 0.243137 0 1 52.7473 0 %_BS
%_0.007843 0 0.243137 0 1 52.7473 0 Bs
0.07451 0.121569 0.556863 0 1 50 100 %_BS
%_0.07451 0.121569 0.556863 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (New Gradient Swatch 5)
(New Gradient Swatch 5) 1 2 Bd
[
<
00000000000000010101010101010101010101010102020202020202
>
0
<
000102030405060708090A0B0C0E0F101112131415161718191A1B1C
>
<
000102020304050506070808090A0B0B0C0D0E0E0F10111112131414
>
1 %_Br
[
0 0 0 0 1 50 0 %_BS
%_0 0 0 0 1 50 0 Bs
0.007843 0 0.11 0.08 1 52.7473 100 %_BS
%_0.007843 0 0.11 0.08 1 52.7473 100 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration])
Pc
Bb
2 (Green Pepper) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Green Pepper)
Pc
Bb
2 (New Gradient Swatch 2) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(New Gradient Swatch 2)
Pc
Bb
0 0 0 0 Bh
2 (New Gradient Swatch 1) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(New Gradient Swatch 1)
Pc
Bb
0 0 0 0 Bh
2 (New Gradient Swatch 3) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(New Gradient Swatch 3)
Pc
Bb
0 0 0 0 Bh
2 (New Gradient Swatch 4) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(New Gradient Swatch 4)
Pc
Bb
0 0 0 0 Bh
2 (New Gradient Swatch 5) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(New Gradient Swatch 5)
Pc
Bb
0 0 0 0 Bh
2 (Steel Radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Steel Radial)
Pc
Bb
2 (Gold) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Gold)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 1 255 79 79 0 50 Lb
(Layer 2) Ln
0 A
1 Ap
0 O
0 J 0 j 1 w 4 M []0 d0 XR
531.457 5.43457 m
72.4805 5.43457 L
72.4805 546.9072 L
531.457 546.9072 L
531.457 5.43457 L
Bb
0 0 0 0 Bh
1 (Steel Radial) 309.1748 6.42773 87.0621 518.1552 1.01661 0 0 1 -139.9395 0 Bg
26.9984 517.4742 526.0694 -26.5573 305.4736 6.42773 Bm
f
0 BB
*u
0 Ap
1 D
0 0 0 0.32 k
245.1001 12.7412 m
244.1362 15.7959 246.6846 16.4189 244.2148 18.1045 c
242.3945 19.3447 240.9165 16.624 Y
239.7837 15.7021 242.5742 11.0225 v
243.4946 9.47949 244.9336 8.45898 246.4468 7.77051 C
250.2412 7.77051 L
247.7085 8.84863 246.0508 9.72559 245.1001 12.7412 c
f
369.4629 16.2461 m
367.8672 18.9014 366.1035 17.583 v
363.707 15.792 366.2813 15.2803 365.4512 12.1885 c
364.8105 9.80273 363.6797 8.7041 362.0371 7.77051 C
365.3828 7.77051 L
366.4492 8.47168 367.4043 9.38379 368.0488 10.5791 c
370.6328 15.376 369.4629 16.2461 Y
f
374.3203 16.7354 m
371.4922 17.1875 371.9336 14.5059 Y
373.0449 10.5596 369.3691 8.81348 v
368.5332 8.41699 367.709 8.08105 366.8965 7.77051 C
373.084 7.77051 L
376.8379 9.78809 377.2344 12.3721 377.2227 12.9541 c
377.2051 13.7236 377.1504 16.2852 374.3203 16.7354 c
f
381.834 12.9268 m
380.1699 12.8896 380.1875 12.123 379.8359 10.5791 c
379.6816 9.90039 378.8984 8.7998 377.4336 7.77051 C
384 7.77051 L
384.9883 8.79688 384.9785 9.69336 384.9668 10.1777 c
384.9473 11.0742 383.498 12.9639 381.834 12.9268 c
f
509.1328 26.4053 m
511.1934 27.4082 518.3984 27.249 521.5469 29.7168 c
524.6973 32.1846 527.5234 34.8096 Y
526.5527 35.2666 523.9902 35.3701 v
521.4238 35.4756 522.3691 36.2959 Y
524.8613 39.3945 523.3555 42.4023 v
521.8477 45.417 521.127 49.0791 Y
518.1152 47.7324 L
517.8652 51.8906 516.0527 54.251 v
515.3281 55.1982 513.8809 56.0254 512.4082 56.6777 C
513.4297 57.833 516.5469 61.542 516.7637 64.0225 c
517.0254 66.9873 515.0059 70.6279 Y
518.2676 71.1104 L
516.9063 74.5908 516.5605 77.9404 v
516.2129 81.2861 512.4473 82.5596 Y
511.207 82.7432 513.3164 84.208 v
515.4258 85.6748 515.9961 86.5869 Y
512.2051 87.2783 508.2207 87.6699 v
504.2383 88.0635 498.2461 84.0537 495.9707 83.7959 c
493.6953 83.5381 495.084 84.9443 496.457 85.7764 c
497.8223 86.6045 499.6328 87.3301 499.7305 89.6357 c
499.8301 91.9414 496.623 90.7471 490.8672 89.124 c
485.0781 87.4932 478.1934 86.8662 Y
482.0254 89.1924 482.041 91.6377 v
482.0566 94.0811 480.7168 92.8916 474.6348 90.8857 c
468.5488 88.8799 466.9258 84.1533 466.3594 87.5518 c
465.793 90.9521 464.3184 89.6816 462.4043 88.5205 c
461.168 87.7705 459.0625 86.2725 456.1387 85.6865 C
483.293 103.3955 L
481.4453 103.2402 L
482.8125 105.4209 L
453.5352 88.9404 L
455.3984 91.2061 457.6582 92.3564 458.875 93.0967 c
460.7969 94.2588 462.5996 94.9834 459.8457 97.0537 c
457.0898 99.127 462.0352 98.3809 466.625 102.8545 c
471.2129 107.3223 472.8867 107.96 470.7129 109.0771 c
468.5391 110.1885 464.707 107.8662 Y
468.4434 113.6826 472.5605 118.0615 v
476.6602 122.4209 479.2031 124.708 477.1074 125.6875 c
475.0215 126.665 473.541 125.3955 472.1738 124.5664 c
470.8027 123.7344 468.9141 123.1514 470.1914 125.0508 c
471.4766 126.9502 477.7969 130.4141 479.2891 134.126 c
480.7813 137.8398 481.9199 141.5244 Y
480.8496 141.4355 478.5781 140.2432 v
476.3027 139.0518 476.709 140.2354 Y
477.3203 144.1641 474.5098 146.0166 v
471.6992 147.8721 469.2441 150.6865 Y
467.3086 148.0127 L
465.0137 151.4883 462.2637 152.626 v
461.1602 153.085 459.4941 153.0771 457.8926 152.9063 C
458.2012 154.417 459.0449 159.1885 457.9941 161.4443 c
456.7363 164.1426 453.168 166.2861 Y
455.75 168.335 L
452.834 170.6689 450.8574 173.3955 v
448.8848 176.1201 444.9844 175.3389 Y
443.8203 174.8789 444.916 177.2021 v
446.0098 179.5273 446.0469 180.6025 Y
442.416 179.3047 438.7715 177.6523 v
435.125 176.0029 431.9414 169.5342 430.0977 168.1719 c
428.2559 166.8096 428.7559 168.7236 429.5293 170.1299 c
430.2969 171.5303 431.5039 173.0635 430.4355 175.1104 c
429.3691 177.1553 427.1895 174.5186 423.0156 170.2344 c
418.8164 165.9277 413.1699 161.9443 Y
415.3242 165.874 414.1172 167.998 v
412.9082 170.1221 412.3418 168.4229 408.0762 163.6436 c
403.8105 158.8643 404.7676 153.96 402.5801 156.6191 c
400.3887 159.2813 399.7461 157.4443 398.668 155.4795 c
397.9727 154.2119 396.8984 151.8633 394.6602 149.8936 C
409.3223 178.8076 L
407.7969 177.748 L
407.8926 180.3213 L
390.7754 151.4102 L
391.2578 154.3027 392.6387 156.4297 393.3223 157.6787 c
394.4043 159.6455 395.6074 161.1748 392.1875 161.5908 c
388.7617 162.0088 393.416 163.835 395.1543 170.0049 c
396.8945 176.167 398.0254 177.5576 395.584 177.4365 c
393.1484 177.3135 390.9902 173.3857 Y
391.3164 180.291 392.6934 186.1416 v
394.0625 191.9678 395.1211 195.2188 392.8184 195.0205 c
390.5215 194.8223 389.875 192.9834 389.1055 191.582 c
388.334 190.1768 386.9902 188.7266 387.1465 191.0107 c
387.3105 193.2988 391.0508 199.457 390.4883 203.4189 c
389.9238 207.3818 389.0645 211.1396 Y
388.1836 210.5283 386.8105 208.3604 v
385.4375 206.1904 385.1973 207.4199 Y
383.7637 211.127 380.4043 211.3271 v
377.041 211.5273 373.5078 212.7373 Y
373.168 209.4551 L
369.4434 211.3164 366.4941 210.9268 v
365.3086 210.7715 363.8691 209.9326 362.5684 208.9854 C
362.0781 210.4463 360.4258 215.001 358.3867 216.4287 c
355.9512 218.1377 351.7832 218.21 Y
352.998 221.2744 L
349.3047 221.8379 346.2324 223.2119 v
343.1621 224.585 340.1738 221.957 Y
339.3945 220.9795 339.1816 223.5381 v
338.9668 226.0957 338.4629 227.0459 Y
335.9648 224.1084 333.6367 220.8545 v
331.3047 217.6025 331.7813 210.4092 330.8652 208.3076 c
329.9531 206.208 329.4277 208.1162 329.3926 209.7188 c
329.3574 211.3154 329.6367 213.2471 327.6875 214.4863 c
325.7402 215.7227 325.1738 212.3486 323.6992 206.5537 c
322.2168 200.7236 319.3164 194.4492 Y
319.2207 198.9297 317.1113 200.165 v
315.002 201.4014 315.3633 199.6475 314.0566 193.376 c
312.752 187.1025 316.0332 183.333 312.8066 184.542 c
309.5801 185.7529 309.9414 183.8408 309.9902 181.6006 c
310.0215 180.1553 310.2676 177.585 309.3145 174.7588 C
307.5547 207.1289 L
306.7617 205.4482 L
305.5586 207.7256 L
305.1914 174.1299 L
304.1621 176.876 304.2939 179.4092 304.2637 180.834 c
304.2148 183.0771 304.4932 185.0029 301.3223 183.6514 c
298.1475 182.3018 301.2666 186.2109 299.6885 192.4248 c
298.1118 198.6318 298.397 200.4004 296.3418 199.0742 c
294.291 197.748 294.3882 193.2676 Y
291.2183 199.4111 289.4858 205.167 v
287.7598 210.8965 287.0493 214.2422 285.1558 212.9189 c
283.2637 211.5986 283.6245 209.6846 283.6592 208.085 c
283.6938 206.4834 283.2549 204.5537 282.249 206.6123 c
281.2461 208.6748 281.4058 215.8789 278.9375 219.0283 c
276.4678 222.1768 273.8447 225.002 Y
273.3867 224.0322 273.2837 221.4678 v
273.1777 218.9033 272.356 219.8477 Y
269.2598 222.3408 266.2505 220.835 v
263.2393 219.3271 259.5732 218.6084 Y
260.9204 215.5947 L
256.7637 215.3447 254.4028 213.5313 v
253.4546 212.8047 252.6284 211.3594 251.9751 209.8877 C
250.8213 210.9072 247.1113 214.0264 244.6318 214.2422 c
241.667 214.5039 238.0234 212.4844 Y
237.5435 215.7461 L
234.062 214.3857 230.7134 214.0391 v
227.3667 213.6943 226.0942 209.9238 Y
225.9092 208.6885 224.4448 210.7969 v
222.9785 212.9043 222.0669 213.4756 Y
221.375 209.6846 220.9839 205.7002 v
220.5898 201.7178 224.5996 195.7266 224.8569 193.4492 c
225.1167 191.1748 223.709 192.5654 222.8779 193.9355 c
222.0493 195.3018 221.3232 197.1123 219.0166 197.2119 c
216.7124 197.3086 217.9072 194.1025 219.5293 188.3467 c
221.1597 182.5576 221.7866 175.6738 Y
219.4619 179.5059 217.0161 179.5205 v
214.5732 179.5371 215.7617 178.1973 217.7671 172.1133 c
219.7739 166.0283 224.5 164.4053 221.1025 163.8389 c
217.7002 163.2744 218.9717 161.7998 220.1338 159.8828 c
220.8838 158.6475 222.3813 156.5439 222.9683 153.6191 C
205.2588 180.7744 L
205.4131 178.9229 L
203.2324 180.2939 L
219.7134 151.0146 L
217.4482 152.876 216.2969 155.1377 215.5576 156.3555 c
214.394 158.2744 213.6709 160.0801 211.6011 157.3252 c
209.5264 154.5693 210.2734 159.5146 205.7998 164.1064 c
201.3306 168.6934 200.6934 170.3682 199.5762 168.1924 c
198.4634 166.0186 200.7881 162.1865 Y
194.9712 165.9219 190.5923 170.04 v
186.2329 174.1387 183.9453 176.6816 182.9663 174.5889 c
181.9883 172.499 183.2578 171.0205 184.0874 169.6533 c
184.918 168.2842 185.5024 166.3936 183.6025 167.6729 c
181.7036 168.957 178.2388 175.2764 174.5269 176.7695 c
170.814 178.2617 167.1294 179.3965 Y
167.2173 178.3281 168.4106 176.0557 v
169.6011 173.7813 168.418 174.1895 Y
164.4893 174.7998 162.6357 171.9912 v
160.7827 169.1787 157.9673 166.7236 Y
160.6406 164.7881 L
157.166 162.4932 156.0278 159.7412 v
155.5688 158.6396 155.5767 156.9736 155.7471 155.3721 C
154.2373 155.6787 149.4648 156.5264 147.21 155.4736 c
144.5122 154.2158 142.3662 150.6465 Y
140.3193 153.2305 L
137.9844 150.3125 135.2578 148.3369 v
132.5327 146.3643 133.3154 142.4639 Y
133.7729 141.3018 131.4502 142.3955 v
129.127 143.4873 128.0522 143.5264 Y
129.3486 139.8975 131.002 136.251 v
132.6519 132.6045 139.1196 129.4209 140.4814 127.5771 c
141.8433 125.7373 139.9292 126.2373 138.5239 127.0088 c
137.124 127.7773 135.5898 128.9834 133.5425 127.916 c
131.498 126.8477 134.1362 124.6689 138.4189 120.4951 c
142.7256 116.2959 146.7095 110.6494 Y
142.7803 112.8047 140.6558 111.5947 v
138.5317 110.3877 140.2305 109.8213 145.0093 105.5557 c
149.7896 101.29 154.6938 102.2471 152.0352 100.0566 c
149.3706 97.8672 151.21 97.2256 153.1743 96.1475 c
154.4419 95.4512 156.79 94.3779 158.7607 92.1396 C
129.8472 106.8018 L
130.9058 105.2754 L
128.332 105.3721 L
157.2432 88.2568 L
154.3516 88.7354 152.2236 90.1191 150.9746 90.8037 c
149.0073 91.8838 147.478 93.085 147.063 89.665 c
146.645 86.2412 144.8193 90.8975 138.6484 92.6377 c
132.4844 94.376 131.0962 95.5068 131.2163 93.0635 c
131.3394 90.624 135.2681 88.4688 Y
128.3633 88.7949 122.5117 90.1729 v
116.6865 91.542 113.4346 92.6006 113.6328 90.2979 c
113.8311 88 115.6694 87.3545 117.0718 86.585 c
118.4766 85.8135 119.9268 84.4697 117.6421 84.6279 c
115.3555 84.79 109.1948 88.5303 105.2344 87.9678 c
101.2725 87.4033 97.5137 86.5439 Y
98.1245 85.6631 100.2944 84.291 v
102.4619 82.917 101.2334 82.6787 Y
97.5259 81.2432 97.3257 77.8838 v
97.126 74.5225 95.9165 70.9883 Y
99.1987 70.6484 L
97.3374 66.9229 97.7271 63.9717 v
97.8818 62.7861 98.7212 61.3486 99.6689 60.0479 C
98.208 59.5576 93.6514 57.9053 92.2256 55.8662 c
90.5171 53.4287 90.4434 49.2646 Y
87.3789 50.4785 L
86.8154 46.7842 85.4419 43.71 v
84.0679 40.6396 86.6963 37.6533 Y
87.6743 36.874 85.1157 36.6602 v
82.5571 36.4443 81.6069 35.9404 Y
84.5449 33.4463 87.8003 31.1143 v
91.0518 28.7822 98.2451 29.2588 100.3457 28.3428 c
102.4453 27.4307 100.5381 26.9072 98.9346 26.8721 c
97.3389 26.8369 95.4063 27.1143 94.167 25.167 c
92.9307 23.2197 96.3052 22.6514 102.1001 21.1787 c
107.9302 19.6963 114.2041 16.7959 Y
109.7231 16.6992 108.4878 14.5889 v
107.252 12.4824 109.0063 12.8408 115.2778 11.5352 c
121.5508 10.2324 125.3198 13.5127 124.1118 10.2861 c
123.5737 8.85352 123.6533 8.12988 124.1021 7.77051 C
146.417 7.77051 L
145.6973 8.47266 144.7148 9.25781 143.3223 10.3838 c
140.0537 13.0264 128.0869 19.0186 121.1489 21.4287 c
114.2114 23.8408 105.5913 30.2188 98.6636 39.3564 c
92.5034 47.4873 98.4736 57.6533 99.8589 59.7881 C
101.2266 57.9639 102.7393 56.4756 Y
100.7085 70.7354 111.0645 75.6377 v
121.4248 80.542 132.0195 82.2158 139.2886 81.1494 c
146.5513 80.085 159.9424 78.835 163.9028 80.2393 c
166.4487 81.1396 167.1997 81.1738 168.3521 81.8701 C
169.4634 82.6162 170.4106 85.4346 170.3877 84.9873 C
170.3579 86.3486 169.7905 87.7549 168.7202 90.5361 c
167.2109 94.459 159.8433 105.6318 155.04 111.1885 c
150.2378 116.7451 145.9619 126.5791 144.5313 137.9561 c
143.2583 148.1045 153.5503 153.917 155.7822 155.0518 C
156.0542 152.7881 156.6201 150.7432 Y
161.9922 164.1084 173.4121 163.1768 v
184.8359 162.2432 194.8481 158.3955 200.6094 153.8369 c
206.3677 149.2842 217.3394 141.5068 221.4707 140.7412 c
224.126 140.249 224.7944 139.9033 226.1401 139.9307 C
227.4761 140.0205 229.7051 141.9873 229.4609 141.6123 C
230.1162 142.8057 230.3286 144.3076 230.7925 147.251 c
231.4458 151.4033 230.6528 164.7627 229.27 171.9756 c
227.8896 179.1895 229.1045 189.8438 233.5532 200.4111 c
237.5249 209.8369 249.3447 209.7256 251.8442 209.5908 C
250.9487 207.4951 250.4165 205.4424 Y
261.7515 214.3311 271.1758 207.8135 v
280.6025 201.293 287.3496 192.9541 290.0591 186.126 c
292.769 179.3037 298.3833 167.083 301.5781 164.3545 c
303.6309 162.6006 304.0371 161.9668 305.2168 161.3174 C
306.418 160.7275 309.332 161.3174 308.9316 161.1133 C
310.0957 161.8193 311.0313 163.0137 312.9063 165.3311 c
315.5469 168.5996 321.541 180.5664 323.9512 187.5049 c
326.3594 194.4424 332.7402 203.0615 341.875 209.9893 c
350.0078 216.1494 360.1738 210.1797 362.3086 208.7949 C
360.4844 207.4268 358.9961 205.9141 Y
373.2559 207.9453 378.1602 197.5889 v
383.0625 187.2295 384.7383 176.6338 383.6699 169.3652 c
382.6055 162.1025 381.3555 148.7109 382.7598 144.751 c
383.6602 142.2041 383.6953 141.4531 384.3906 140.3018 C
385.1387 139.1904 387.9551 138.2432 387.5078 138.2666 C
388.8691 138.2959 390.2754 138.8623 393.0566 139.9326 c
396.9805 141.4434 408.1523 148.8096 413.709 153.6133 c
419.2656 158.415 429.0996 162.6914 440.4785 164.1221 c
450.623 165.3936 456.4355 155.1045 457.5723 152.8711 C
455.3086 152.5986 453.2637 152.0332 Y
466.6309 146.6631 465.6973 135.2412 v
464.7637 123.8184 460.918 113.8037 456.3574 108.0439 c
451.8027 102.2861 444.0254 91.3135 443.2637 87.1826 c
442.7695 84.5273 442.4219 83.8584 442.4512 82.5127 C
442.541 81.1777 444.5078 78.9482 444.1309 79.1924 C
445.3262 78.5381 446.8281 78.3252 449.7695 77.8613 c
453.9238 77.208 467.2832 78.001 474.4961 79.3838 c
481.7109 80.7637 492.3633 79.5498 502.9336 75.0996 c
512.3574 71.1279 512.2461 59.3096 512.1133 56.8076 C
510.0156 57.7051 507.9609 58.2373 Y
516.8516 46.9033 510.334 37.4785 v
503.8145 28.0518 495.4766 21.3037 488.6465 18.5928 c
482.2949 16.0713 471.2695 11.0322 467.5781 7.77051 C
486.0117 7.77051 L
485.2461 10.1826 489.0566 7.46973 494.9453 8.9668 c
501.1523 10.54 502.9219 10.2549 501.5957 12.3105 c
500.2695 14.3604 495.7891 14.2656 Y
501.9316 17.4355 507.6875 19.168 v
513.418 20.8936 516.7637 21.6025 515.4395 23.499 c
514.1191 25.3877 512.2031 25.0283 510.6055 24.9951 c
509.0039 24.959 507.0742 25.3994 509.1328 26.4053 c
f
238.522 14.7764 m
238.8481 17.4736 236.043 16.9014 v
233.2363 16.3281 233.292 13.7666 233.3086 12.998 c
233.3218 12.3896 233.8779 9.63379 238.1758 7.77051 C
245.4268 7.77051 L
244.1221 8.14355 242.7383 8.6084 241.3335 9.20215 c
237.5835 10.7842 238.522 14.7764 Y
f
u
415.4824 26.4277 m
416.9512 35.8564 420.3379 43.9502 424.2539 48.8994 c
428.8066 54.6572 436.584 65.6309 437.3496 69.7617 c
437.8418 72.417 438.1895 73.085 438.1602 74.4307 C
438.0703 75.7676 436.1055 77.9941 436.4805 77.752 C
435.2871 78.4063 433.7852 78.6201 430.8398 79.083 c
426.6875 79.7383 413.3281 78.9434 406.1133 77.5615 c
401.5293 76.6826 395.5469 76.8652 389.084 78.25 C
385.6445 87.1475 384.5234 95.8486 385.4395 102.0928 c
386.5039 109.3564 387.752 122.7471 386.3496 126.707 c
385.4453 129.2529 385.4141 130.0049 384.7188 131.1563 C
383.9707 132.2686 381.1543 133.2148 381.6016 133.1924 C
380.2383 133.1621 378.832 132.5967 376.0508 131.5254 c
372.1289 130.0166 360.9551 122.6484 355.4004 117.8447 c
351.8633 114.79 346.5957 111.9502 340.3008 109.9189 C
332.873 115.9053 327.5566 122.8848 325.2285 128.751 c
322.5176 135.5732 316.9043 147.7959 313.709 150.5244 c
311.6543 152.2783 311.25 152.9121 310.0703 153.5605 C
308.8672 154.1514 305.9551 153.5615 306.3535 153.7656 C
305.1895 153.0586 304.2539 151.8643 302.3809 149.5469 c
299.7383 146.2783 293.7466 134.3115 291.3369 127.374 c
289.8032 122.96 286.6582 117.8662 282.2241 112.96 C
272.7969 114.4297 264.7036 117.8154 259.7529 121.7334 c
253.9956 126.2861 243.0225 134.0635 238.8921 134.8291 c
236.2368 135.3213 235.5679 135.667 234.2231 135.6396 C
232.8857 135.5498 230.6582 133.583 230.9019 133.959 C
230.2471 132.7646 230.0332 131.2627 229.5703 128.3193 c
228.916 124.167 229.71 110.8076 231.0918 103.5947 c
231.9697 99.0078 231.7881 93.0254 230.4023 86.5635 C
221.5068 83.124 212.8042 82.001 206.5601 82.917 c
199.2974 83.9824 185.9063 85.2314 181.9463 83.8291 c
179.4004 82.9268 178.6479 82.8936 177.4971 82.1963 C
176.3848 81.4502 175.4385 78.6338 175.4614 79.0801 C
175.4912 77.7197 176.0571 76.3115 177.1284 73.5303 c
178.6377 69.6074 186.0049 58.4346 190.8081 52.8789 c
193.8633 49.3438 196.7021 44.0732 198.7339 37.7803 C
192.749 30.3506 185.7681 25.0361 179.9014 22.7061 c
173.0796 19.998 160.8579 14.3818 158.1294 11.1885 c
156.4941 9.27246 155.8325 8.78418 155.2246 7.77051 C
168.5083 7.77051 L
171.0166 8.57324 173.2896 8.47363 174.6099 8.50098 c
176.853 8.5498 178.7773 8.27246 177.4272 11.4443 c
176.0762 14.6182 179.9863 11.5 186.1997 13.0771 c
192.4072 14.6533 194.1743 14.3682 192.8481 16.4229 c
191.5234 18.4736 187.042 18.377 Y
193.1865 21.5459 198.9424 23.2793 v
199.8306 23.5479 200.6533 23.7881 201.4185 24.0146 C
201.1309 14.0127 189.6216 8.79688 Y
195.9404 7.33496 198.6382 8.59277 v
201.3369 9.85059 203.4819 13.4199 Y
205.5288 10.8369 L
207.8647 13.7549 210.5913 15.7295 v
213.3149 17.7021 212.5332 21.6025 Y
212.0752 22.7666 214.3989 21.6719 v
216.7207 20.5791 217.7954 20.54 Y
216.5005 24.1709 214.8472 27.8154 v
214.0679 29.5391 212.2119 31.1553 210.3281 32.5791 C
211.2749 32.9023 212.1338 33.3037 212.8022 33.8281 c
215.9521 36.2979 218.7769 38.9189 Y
217.8076 39.3789 215.2437 39.4834 v
212.6782 39.5879 213.623 40.4092 Y
216.1157 43.5068 214.6094 46.5146 v
213.1016 49.5264 212.3828 53.1924 Y
209.3706 51.8447 L
209.1196 56.0029 207.3062 58.3623 v
205.4961 60.7256 199.2173 62.3486 Y
200.7495 60.3906 202.0757 57.4307 V
201.687 57.7646 201.2808 58.1182 200.8398 58.5117 c
196.0596 62.7783 191.1543 61.8203 193.814 64.0107 c
196.4775 66.2002 194.6392 66.8428 192.6753 67.9199 c
191.4072 68.6162 189.0576 69.6885 187.0889 71.9268 C
216.0015 57.2656 L
214.9434 58.792 L
217.5161 58.6943 L
188.6045 75.8096 L
191.4971 75.3301 193.6255 73.9482 194.875 73.2627 c
196.8418 72.1826 198.3696 70.9805 198.7861 74.4014 c
199.2036 77.8252 201.0298 73.1699 207.1997 71.4297 c
213.3638 69.6914 214.7524 68.5596 214.6313 71.0029 c
214.5088 73.4424 210.5796 75.5986 Y
217.4858 75.2725 223.3364 73.8936 v
224.2461 73.6807 225.0688 73.4814 225.8501 73.2939 C
220.6001 64.7744 208.0229 66.0107 Y
212.7646 61.5859 215.731 61.3271 v
218.6958 61.0664 222.3394 63.0859 Y
222.8188 59.8252 L
226.3013 61.1846 229.6499 61.5313 v
232.9951 61.876 234.2681 65.6455 Y
234.4531 66.8828 235.918 64.7734 v
237.3833 62.666 238.2949 62.0947 Y
238.9878 65.8867 239.3789 69.8701 v
239.5654 71.752 238.7671 74.0801 237.8467 76.2549 C
238.8286 76.0605 239.7729 75.9795 240.6143 76.0986 c
244.5762 76.6631 248.3345 77.5215 Y
247.7236 78.4043 245.5547 79.7754 v
243.3867 81.1494 244.6157 81.3896 Y
248.3228 82.8232 248.5229 86.1826 v
248.7227 89.5439 249.9326 93.0791 Y
246.6504 93.4189 L
248.5117 97.1436 248.1216 100.0947 v
247.7363 103.0459 243.1089 107.5918 Y
243.4473 105.1328 243.1191 101.9189 V
242.9526 102.3984 242.7793 102.9014 242.5962 103.457 c
240.5894 109.542 235.8623 111.165 239.2607 111.7314 c
242.6621 112.2959 241.3916 113.7705 240.229 115.6875 c
239.4795 116.9229 237.981 119.0283 237.395 121.9502 C
255.1035 94.7979 L
254.9497 96.6475 L
257.1294 95.2773 L
240.6494 124.5557 L
242.9141 122.6934 244.0659 120.4326 244.8057 119.2139 c
245.9692 117.2959 246.6914 115.4912 248.7622 118.2451 c
250.8359 121.001 250.0898 116.0566 254.563 111.4639 c
259.0317 106.877 259.6685 105.2021 260.7856 107.3789 c
261.8984 109.5518 259.5742 113.3848 Y
265.3921 109.6494 269.77 105.5303 v
270.4463 104.8945 271.0674 104.3018 271.6465 103.7529 C
262.8394 98.999 252.5664 106.3604 Y
254.46 100.1572 256.8999 98.4502 v
259.3369 96.7412 263.5024 96.6689 Y
262.2871 93.6045 L
265.9824 93.041 269.0557 91.667 v
272.1265 90.2939 275.1133 92.9209 Y
275.8911 93.8994 276.1055 91.3408 v
276.3213 88.7822 276.8252 87.833 Y
279.3203 90.7705 281.6514 94.0244 v
282.7529 95.5605 283.2256 97.9756 283.5171 100.3193 C
284.2705 99.6611 285.0464 99.1182 285.8354 98.8008 c
289.5488 97.3086 293.2329 96.1729 Y
293.145 97.2432 291.9526 99.5146 v
290.7612 101.7891 291.9453 101.3818 Y
295.873 100.7705 297.7266 103.5791 v
299.5801 106.3916 302.3955 108.8467 Y
299.7227 110.7822 L
303.1973 113.0781 304.334 115.8291 v
305.4766 118.5771 303.7422 124.8271 Y
302.8057 122.5283 300.9141 119.9092 V
301.0098 120.4072 301.1113 120.9287 301.2305 121.5029 c
302.5342 127.7764 299.2529 131.5439 302.4785 130.3359 c
305.709 129.124 305.3438 131.0381 305.2949 133.2783 c
305.2637 134.7236 305.0186 137.2939 305.9746 140.1201 C
307.7324 107.749 L
308.5234 109.4297 L
309.7266 107.1514 L
310.0938 140.7471 L
311.125 138.0029 310.9902 135.4697 311.0215 134.0439 c
311.0703 131.8018 310.7949 129.876 313.9629 131.2256 c
317.1387 132.5771 314.0195 128.667 315.5996 122.4541 c
317.1758 116.2461 316.8906 114.4775 318.9434 115.8037 c
320.9941 117.1299 320.8984 121.6104 Y
324.0684 115.4668 325.8008 109.7109 v
326.0684 108.8232 326.3105 107.999 326.5371 107.2354 C
316.5332 107.5225 311.3145 119.0322 Y
309.8535 112.7139 311.1152 110.0166 v
312.3711 107.3154 315.9414 105.1719 Y
313.3555 103.124 L
316.2754 100.7881 318.252 98.0615 v
320.2246 95.3379 324.123 96.1211 Y
325.2891 96.5771 324.1934 94.2549 v
323.0996 91.9316 323.0625 90.8584 Y
326.6914 92.1514 330.3379 93.8066 v
332.0586 94.5859 333.6758 96.4414 335.0996 98.3252 C
335.4238 97.3779 335.8242 96.5186 336.3477 95.8506 c
338.8203 92.7021 341.4414 89.877 Y
341.9004 90.8467 342.002 93.4102 v
342.1094 95.9756 342.9316 95.0303 Y
346.0254 92.5381 349.0371 94.0439 v
352.0488 95.5518 355.7148 96.2705 Y
354.3672 99.2832 L
358.5234 99.5342 360.8848 101.3467 v
363.248 103.1572 364.8711 109.4365 Y
362.9121 107.9033 359.9512 106.5791 V
360.2852 106.9658 360.6387 107.3721 361.0332 107.8135 c
365.2988 112.5938 364.3398 117.5 366.5313 114.8379 c
368.7207 112.1748 369.3613 114.0146 370.4414 115.9775 c
371.1367 117.2451 372.209 119.5957 374.4473 121.5654 C
359.7871 92.6533 L
361.3125 93.7109 L
361.2148 91.1377 L
378.3301 120.0488 L
377.8516 117.1572 376.4688 115.0283 375.7813 113.7783 c
374.7051 111.8115 373.5 110.2842 376.9219 109.8682 c
380.3457 109.4492 375.6895 107.624 373.9512 101.4541 c
372.2129 95.29 371.0801 93.9004 373.5234 94.0225 c
375.9609 94.1445 378.1191 98.0742 Y
377.791 91.167 376.416 85.3174 v
376.2012 84.4072 376.002 83.584 375.8145 82.8037 C
367.2949 88.0537 368.5313 100.6309 Y
364.1055 95.8896 363.8477 92.9229 v
363.5859 89.9561 365.6074 86.3154 Y
362.3438 85.835 L
363.7051 82.3525 364.0508 79.0039 v
364.3984 75.6572 368.168 74.3867 Y
369.4043 74.1982 367.2949 72.7334 v
365.1855 71.2695 364.6152 70.3584 Y
368.4082 69.665 372.3906 69.2744 v
374.2715 69.0879 376.6016 69.8867 378.7754 70.8057 C
378.582 69.8232 378.5 68.8799 378.6191 68.0381 c
379.1836 64.0771 380.043 60.3193 Y
380.9238 60.9297 382.2969 63.0986 v
383.6699 65.2666 383.9102 64.0381 Y
385.3457 60.3301 388.7012 60.1299 v
392.0645 59.9316 395.5996 58.7207 Y
395.9414 62.0029 L
399.666 60.1416 402.6152 60.5322 v
405.5664 60.917 410.1113 65.5439 Y
407.6523 65.2061 404.4375 65.5342 V
404.918 65.7012 405.4219 65.874 405.9766 66.0576 c
412.0605 68.0645 413.6855 72.792 414.252 69.3916 c
414.8184 65.9902 416.291 67.2627 418.207 68.4238 c
419.4434 69.1729 421.5469 70.6729 424.4727 71.2588 C
397.3184 53.5498 L
399.1699 53.7041 L
397.7969 51.5244 L
427.0762 68.0049 L
425.2148 65.7402 422.9551 64.5869 421.7324 63.8477 c
419.8184 62.6846 418.0098 61.9629 420.7656 59.8916 c
423.5234 57.8174 418.5762 58.5635 413.9863 54.0908 c
409.3965 49.6221 407.7246 48.9834 409.9023 47.8691 c
412.0723 46.7539 415.9043 49.0791 Y
412.168 43.2607 408.0508 38.8838 v
407.416 38.2061 406.8223 37.5879 406.2715 37.0078 C
401.5195 45.8135 408.8809 56.0869 Y
402.6777 54.1943 400.9707 51.7549 v
399.2598 49.3154 399.1895 45.1523 Y
396.123 46.3672 L
395.5625 42.6709 394.1875 39.5967 v
392.8145 36.5264 395.4434 33.542 Y
396.4199 32.7607 393.8613 32.5479 v
391.3047 32.3311 390.3535 31.8291 Y
393.2891 29.3311 396.5449 27.001 v
398.0801 25.9004 400.4961 25.4268 402.8398 25.1377 C
402.1816 24.3838 401.6387 23.6055 401.3223 22.8184 c
399.8281 19.1045 398.6953 15.4209 Y
399.7617 15.5088 402.0352 16.7002 v
404.3105 17.8916 403.9023 16.708 Y
403.291 12.7783 406.0996 10.9277 v
407.5723 9.95801 408.9414 8.72754 409.918 7.77051 C
412.4629 7.77051 L
413.3047 8.93164 L
413.627 8.44238 414.1758 7.77051 V
449.875 7.77051 L
445.0898 10.7432 435.7266 15.292 429.8945 17.3174 c
425.4805 18.8506 420.3867 21.9951 415.4824 26.4277 C
f
0 D
200.3862 30.5166 m
200.4458 30.5459 200.5229 30.5693 200.5898 30.5967 C
200.6851 30.1182 200.77 29.6338 200.8545 29.1494 C
199.6279 29.2803 198.7583 29.7207 200.3862 30.5166 c
f
203.7319 52.1104 m
203.9863 50.6104 204.0576 49.0303 203.8452 47.4287 C
201.145 50.5781 199.1387 53.418 Y
201.6406 52.0488 203.7319 52.1104 V
f
227.9111 78.0322 m
226.9258 78.7578 226.4077 79.5635 228.2061 79.4385 c
228.27 79.4346 228.3477 79.417 228.418 79.4072 C
228.2612 78.9492 228.0796 78.4912 227.9111 78.0322 C
f
241.8955 96.4697 m
241.3672 95.0479 240.6343 93.6533 239.6538 92.375 C
238.8921 96.4443 238.5762 99.8965 Y
240.0562 97.4629 241.8955 96.4697 V
f
275.813 106.8115 m
275.3159 107.9385 275.2578 108.9092 276.7598 107.8975 c
276.814 107.8604 276.874 107.8066 276.9307 107.7607 C
276.5649 107.4414 276.1895 107.126 275.813 106.8115 C
f
293.1421 113.376 m
294.5166 117.2803 295.9688 120.4287 Y
296.0342 117.582 297.1304 115.8018 V
295.9624 114.835 294.6304 113.9932 293.1421 113.376 C
f
331.6699 107.7988 m
331.8027 109.0254 332.2422 109.8955 333.0391 108.2666 c
333.0664 108.207 333.0918 108.1299 333.1172 108.0635 C
332.6387 107.9678 332.1543 107.8838 331.6699 107.7988 C
f
354.6309 104.9209 m
353.1328 104.667 351.5527 104.5947 349.9512 104.8076 C
353.0996 107.5088 355.9395 109.5127 Y
354.5684 107.0137 354.6309 104.9209 V
f
381.959 80.4482 m
381.9551 80.3838 381.9395 80.3057 381.9277 80.2354 C
381.4707 80.3916 381.0137 80.5732 380.5527 80.7412 C
381.2793 81.7275 382.084 82.2451 381.959 80.4482 c
f
398.9902 66.7578 m
397.5684 67.2852 396.1738 68.0186 394.8965 68.999 C
398.9648 69.7607 402.418 70.0762 Y
399.9844 68.5977 398.9902 66.7578 V
f
410.418 31.8945 m
410.3809 31.8389 410.3262 31.7803 410.2813 31.7227 C
409.9609 32.0889 409.6465 32.4639 409.332 32.8408 C
410.459 33.3389 411.4297 33.3945 410.418 31.8945 c
f
418.3203 11.5225 m
417.3555 12.6904 416.5137 14.0225 415.8965 15.5127 C
419.8027 14.1377 422.9512 12.6826 Y
420.1035 12.6191 418.3203 11.5225 V
f
U
1 D
230.8003 10.5098 m
230.3828 12.0371 230.3652 12.8057 228.7017 12.7705 c
227.0366 12.7334 225.6699 10.7832 225.6895 9.88672 c
225.6987 9.44238 225.7188 8.6543 226.5132 7.77051 C
233.3799 7.77051 L
231.8315 8.74512 230.9858 9.83008 230.8003 10.5098 c
f
355.7715 26.6543 m
358.5586 26.9971 360.4473 27.0947 362.8066 24.9316 c
365.1699 22.7686 363.2734 20.9561 366.2539 20.7305 c
368.4531 20.5654 368.3711 23.6611 Y
368.8926 25.0264 364.1328 27.6836 v
361.8145 28.9775 359.0781 28.7373 356.8809 28.1494 C
358.873 28.8203 361.4551 29.5283 364.2988 29.8818 c
368.3379 30.3828 369.5234 26.458 Y
370.5879 23.96 372.7305 25.8584 v
374.875 27.7578 373.5469 29.9482 373.1465 30.6055 c
372.75 31.2617 369.8984 34.4775 362.0293 31.6484 c
356.3184 29.5986 353.5742 28.2432 352.5 27.6533 c
354.6152 28.8818 362.0508 33.1357 365.7715 34.3682 c
370.1348 35.8193 373.2168 34.8643 374.0762 34.0146 c
375.2012 32.8994 375.6016 32.2412 377.0234 33.1055 c
378.4473 33.9697 378.6543 36.3418 378.1895 37.1094 c
377.7266 37.877 376.5293 39.8467 370.125 38.0586 c
363.7188 36.2705 351.6953 28.6777 Y
364.0254 36.7549 372.5098 39.8057 v
380.9961 42.8555 382.4199 47.917 Y
382.082 47.708 L
373.7969 47.6279 370.5449 42.6318 Y
363.9199 36.5146 351.0625 29.3154 Y
363.3477 36.4678 367.8926 41.3232 v
372.4375 46.1787 371.2422 48.1475 370.7773 48.915 c
370.3125 49.6816 368.1113 50.5938 366.6875 49.7295 c
365.2637 48.8662 365.6641 48.21 366.1328 46.6953 c
366.4883 45.54 365.9102 42.3682 362.6094 39.165 c
359.7969 36.4365 352.5879 31.8057 350.5234 30.501 c
351.543 31.1787 354.0098 32.9863 358.4688 37.1045 c
364.6133 42.7793 363.0781 46.792 362.6797 47.4473 c
362.2813 48.1045 360.9512 50.2959 358.2773 49.2725 c
355.6016 48.2471 357.3262 46.1455 Y
360.2617 43.2852 357.9492 39.9346 v
356.3203 37.5752 354.502 35.6094 352.9863 34.1533 C
354.5215 35.833 356.002 38.1484 355.9238 40.8037 c
355.7656 46.251 354.3164 46.4189 Y
351.6055 47.9209 350.7383 45.8955 v
349.5586 43.1475 352.043 43.9932 352.8711 40.8994 c
353.6973 37.8037 352.7383 36.1758 351.1465 33.8604 c
349.5566 31.5479 348.4336 31.9141 Y
346.6152 35.1572 344.8789 36.0479 343.3359 36.6123 c
342.5059 36.917 341.209 36.7646 340.1895 36.5576 C
340.3926 37.4229 340.8438 39.6924 340.3418 40.9014 c
339.7129 42.415 338.7441 44.1143 335.4258 45.79 C
335.0117 46.8955 337.2559 48.5869 v
339.4961 50.2764 341.084 51.3047 344.209 50.6123 c
347.334 49.9199 346.5996 47.4004 349.2949 48.6982 c
351.2813 49.6533 349.6621 52.2949 Y
349.4316 53.7373 343.9824 53.6592 v
341.3242 53.6201 339.0762 52.043 337.4668 50.4355 C
338.8555 52.0127 340.7402 53.917 343.0254 55.6445 c
346.2715 58.0996 349.2598 55.291 Y
351.4336 53.6611 352.3398 56.3779 v
353.2461 59.0928 351 60.3262 350.3262 60.6963 c
349.6523 61.0654 345.5781 62.4248 340.1758 56.04 c
336.2559 51.4082 334.5566 48.8652 333.9219 47.8164 c
335.1406 49.9385 339.4512 57.3389 342.0566 60.2666 c
345.1113 63.7041 348.2578 64.4189 349.4277 64.1123 c
350.959 63.71 351.6328 63.3398 352.4336 64.7998 c
353.2344 66.2588 352.2285 68.4189 351.4414 68.8506 c
350.6563 69.2813 348.6367 70.3916 343.9824 65.6396 c
339.3301 60.8877 332.7148 48.3018 Y
339.3516 61.46 345.1738 68.3447 v
350.998 75.2295 349.7031 80.3232 Y
349.5117 79.9746 L
342.377 75.7607 342.0605 69.8115 Y
339.3789 61.2002 331.8457 48.5342 Y
338.9082 60.874 340.418 67.3506 v
341.9258 73.8271 339.9063 74.9355 339.1191 75.3682 c
338.332 75.7988 335.9727 75.4883 335.1699 74.0283 c
334.3691 72.5693 335.043 72.2002 336.207 71.124 c
337.0918 70.3018 338.1777 67.2637 336.9199 62.8408 c
335.8477 59.0713 331.9219 51.4561 330.7852 49.293 c
331.3281 50.3916 332.5625 53.1895 334.3652 58.9854 c
336.8496 66.9717 333.5137 69.6787 332.8398 70.0479 c
332.166 70.418 329.9199 71.6494 328.1152 69.4268 c
326.3105 67.2021 328.8535 66.2451 Y
332.8281 65.2334 332.5 61.1768 v
332.2695 58.3193 331.6777 55.7061 331.0918 53.6885 C
331.584 55.9102 331.707 58.6553 330.3105 60.917 c
327.4512 65.5537 326.1113 64.9756 Y
323.0137 64.9209 323.2754 62.7344 v
323.627 59.7637 325.3574 61.7373 327.6191 59.4717 c
329.8828 57.2061 329.8672 55.3174 329.6465 52.5156 c
329.4238 49.7158 328.2715 49.4736 Y
325.0742 51.3721 323.123 51.2754 321.5059 50.9932 c
320.6328 50.8408 319.5879 50.0596 318.8105 49.373 C
318.5527 50.2217 317.8086 52.4131 316.7676 53.21 c
315.4648 54.2061 313.7773 55.1943 310.0684 54.9854 C
309.1543 55.7354 310.25 58.3213 v
311.3477 60.9072 312.207 62.5908 315.2637 63.5537 c
318.3164 64.5166 318.9375 61.9678 320.623 64.4385 c
321.8652 66.2598 319.1426 67.7373 Y
318.2207 68.8701 313.541 66.0791 v
311.2598 64.7178 310.1016 62.2256 309.5117 60.0283 C
309.9258 62.0898 310.6074 64.6816 311.7207 67.3193 c
313.3047 71.0693 317.2969 70.1318 Y
319.9941 69.8057 319.4219 72.6113 v
318.8477 75.417 316.2871 75.3613 315.5176 75.3447 c
314.752 75.3281 310.541 74.4678 309.0547 66.2373 c
307.9766 60.2666 307.7793 57.2139 307.75 55.9893 c
307.7441 58.4346 307.7773 66.999 308.5703 70.8389 c
309.4961 75.3428 311.8652 77.5352 313.0313 77.8545 c
314.5586 78.2705 315.3281 78.2881 315.291 79.9521 c
315.2559 81.6162 313.3047 82.9834 312.4063 82.9639 c
311.5098 82.9443 309.2051 82.8945 307.5508 76.4541 c
305.8984 70.0127 306.4629 55.8047 Y
305.6309 70.5186 307.2305 79.3936 v
308.832 88.2676 305.1641 92.0313 Y
305.1729 91.6338 L
301.1016 84.417 303.8008 79.1045 Y
305.7842 70.3076 305.5928 55.5723 Y
305.541 69.79 303.6084 76.1533 v
301.6777 82.5166 299.373 82.4658 298.4771 82.4463 c
297.5801 82.4268 295.6904 80.9775 295.7266 79.3135 c
295.7627 77.6494 296.5308 77.667 298.0752 77.3154 c
299.2529 77.0459 301.7129 74.96 302.835 70.5 c
303.792 66.6982 304.1992 58.1406 304.2988 55.6982 c
304.2178 56.9209 303.8887 59.9619 302.5508 65.8818 c
300.709 74.041 296.4663 74.7178 295.6982 74.7012 c
294.9297 74.6846 292.3677 74.6289 291.9175 71.8008 c
291.4658 68.9717 294.1475 69.415 Y
298.0938 70.5264 299.8398 66.8477 v
301.0684 64.2588 301.8613 61.7002 302.3633 59.6582 C
301.6797 61.8291 300.4131 64.2686 298.0737 65.5283 c
293.2773 68.1143 292.4072 66.9424 Y
289.7524 65.3486 291.0713 63.584 v
292.8618 61.1885 293.3735 63.7617 296.4663 62.9326 c
299.5586 62.1016 300.4902 60.457 301.6992 57.9209 c
302.9063 55.3857 302.0264 54.5977 Y
298.3096 54.6445 296.6689 53.585 295.4106 52.5322 c
294.731 51.9639 294.2163 50.7646 293.8843 49.7803 C
293.2378 50.3857 291.498 51.9131 290.1978 52.082 c
288.5723 52.2939 286.6167 52.3057 283.5083 50.2705 C
282.3418 50.4619 281.999 53.251 v
281.6558 56.0381 281.5596 57.9268 283.7217 60.2881 c
285.8853 62.6484 287.6992 60.7529 287.9233 63.7354 c
288.0879 65.9326 284.9912 65.8506 Y
283.627 66.3721 280.9697 61.6143 v
279.6758 59.2949 279.9175 56.5576 280.5039 54.3604 C
279.8325 56.3516 279.126 58.9355 278.7734 61.7783 c
278.269 65.8184 282.1963 67.002 Y
284.6948 68.0684 282.7959 70.2119 v
280.8965 72.3545 278.7061 71.0254 278.0488 70.6279 c
277.3921 70.2285 274.1758 67.3799 277.0054 59.5088 c
279.0557 53.7969 280.4097 51.0557 280.9995 49.9795 c
279.771 52.0947 275.519 59.5303 274.2842 63.25 c
272.8354 67.6143 273.79 70.6973 274.6401 71.5557 c
275.7544 72.6807 276.4116 73.0801 275.5483 74.5029 c
274.6841 75.9268 272.311 76.1357 271.5439 75.6699 c
270.7778 75.2041 268.8071 74.0088 270.5952 67.6045 c
272.3843 61.1992 279.9756 49.1768 Y
271.8984 61.5049 268.8472 69.9893 v
265.7974 78.4756 260.7383 79.9004 Y
260.9443 79.5605 L
261.0269 71.2764 266.021 68.0244 Y
272.1382 61.3975 279.3398 48.541 Y
272.1851 60.8271 267.3306 65.3721 v
262.4761 69.917 260.5059 68.7217 259.7388 68.2578 c
258.9717 67.792 258.0596 65.5908 258.9238 64.168 c
259.7871 62.7451 260.4438 63.1436 261.9575 63.6123 c
263.1118 63.9678 266.2852 63.3906 269.4873 60.0889 c
272.2163 57.2764 276.8481 50.0684 278.1548 48.0029 c
277.4736 49.0215 275.667 51.4893 271.5498 55.9482 c
265.875 62.0928 261.8633 60.5576 261.2051 60.1592 c
260.5488 59.7607 258.3579 58.4326 259.3813 55.7578 c
260.4058 53.082 262.5063 54.8057 Y
265.3687 57.7412 268.7192 55.4287 v
271.0776 53.8008 273.0439 51.9824 274.499 50.4658 C
272.8208 52.001 270.5049 53.4814 267.8501 53.4033 c
262.4023 53.2451 262.2349 51.7959 Y
260.7329 49.0859 262.7573 48.2178 v
265.5059 47.0381 264.6616 49.5225 267.7554 50.3506 c
270.8481 51.1768 272.478 50.2197 274.7925 48.6279 c
277.106 47.0361 276.7388 45.9131 Y
273.4966 44.0967 272.605 42.3584 272.0415 40.8174 c
271.7378 39.9834 271.8906 38.6885 272.0957 37.6709 C
271.2329 37.8721 268.9634 38.3252 267.752 37.8213 c
266.2378 37.1904 264.5381 36.2246 262.8643 32.9053 C
261.7583 32.4902 260.0669 34.7324 v
258.376 36.9766 257.3481 38.5615 258.041 41.6885 c
258.7334 44.8164 261.2524 44.0801 259.9556 46.7744 c
259 48.7607 256.3589 47.1416 Y
254.917 46.9111 254.9946 41.4619 v
255.0322 38.8057 256.6113 36.5566 258.2183 34.9463 C
256.6401 36.3369 254.7373 38.2197 253.0098 40.5068 c
250.5532 43.7529 253.3628 46.7412 Y
254.9932 48.9131 252.2769 49.8193 v
249.5605 50.7266 248.3276 48.4795 247.9575 47.8066 c
247.5884 47.1338 246.228 43.0566 252.6138 37.6553 c
257.2451 33.7354 259.7886 32.0381 260.8369 31.3994 c
258.7158 32.6182 251.3154 36.9307 248.3867 39.5352 c
244.9492 42.5918 244.2354 45.7383 244.5415 46.9063 c
244.9438 48.4385 245.3135 49.1123 243.854 49.9131 c
242.395 50.7139 240.2349 49.708 239.8037 48.9219 c
239.3721 48.1357 238.2632 46.1143 243.0142 41.4619 c
247.7666 36.8096 260.3521 30.1943 Y
247.1929 36.8301 240.3081 42.6543 v
233.4238 48.4775 228.3301 47.1826 Y
228.6787 46.9912 L
232.8921 39.8574 238.8433 39.5381 Y
247.4541 36.8584 260.1191 29.3252 Y
247.7803 36.3877 241.3032 37.8965 v
234.8267 39.4043 233.7178 37.3857 233.2861 36.5986 c
232.8545 35.8135 233.165 33.4502 234.625 32.6504 c
236.084 31.8506 236.4536 32.5225 237.5298 33.6855 c
238.3516 34.5713 241.3887 35.6592 245.812 34.4004 c
249.5825 33.3291 257.1973 29.4014 259.3613 28.2666 c
258.2632 28.8086 255.4648 30.042 249.6694 31.8447 c
241.6821 34.3281 238.9751 30.9932 238.6055 30.3213 c
238.2354 29.6455 237.0024 27.3994 239.2271 25.5947 c
241.4502 23.791 242.4082 26.335 Y
243.4194 30.3066 247.4771 29.9795 v
250.3335 29.749 252.9468 29.1572 254.9658 28.5693 C
252.7437 29.0635 249.9976 29.1865 247.7373 27.791 c
243.0991 24.9307 243.6782 23.5918 Y
243.7329 20.4941 245.9194 20.7539 v
248.8896 21.1064 246.917 22.8369 249.1821 25.1006 c
251.4473 27.3633 253.3369 27.3486 256.1377 27.127 c
258.937 26.9053 259.1802 25.749 Y
257.2813 22.5527 257.3779 20.6025 257.6606 18.9863 c
257.813 18.1143 258.5942 17.0674 259.2808 16.2881 C
258.4331 16.0322 256.2407 15.2881 255.4434 14.2471 c
254.4692 12.9717 253.5093 11.3174 253.6636 7.77051 C
258.3804 7.77051 L
258.4893 7.93262 258.5825 8.10645 258.647 8.2959 c
259.1294 9.71582 259.7446 10.8799 Y
257.8237 10.8389 L
257.9219 12.252 258.1631 12.8965 v
258.4058 13.542 258.1328 14.3057 258.5024 14.9541 c
258.748 15.3818 259.1548 15.8652 259.4058 16.1475 C
259.936 15.5605 260.3794 15.1553 Y
260.0762 16.2002 260.0474 16.9453 v
260.0186 17.6934 260.6128 18.2412 260.6953 18.9268 c
260.7793 19.6113 261.3447 20.9082 Y
263.0298 19.9834 L
263.0225 21.3027 263.2515 22.7842 v
263.4805 24.2666 262.0415 25.6387 262.0234 26.6729 c
262.0068 27.7061 263.5889 27.1279 263.8438 26.2588 c
264.0962 25.3896 265.3164 22.8213 Y
267.5737 21.873 267.6563 22.5596 v
267.7397 23.2432 266.9648 23.96 Y
266.9648 23.96 268.313 23.2207 v
269.6597 22.4805 271.2573 23.7969 Y
271.0088 23.9307 L
271.0356 24.4297 271.019 25.9463 269.9004 26.5605 c
268.5532 27.2998 268.5532 27.2998 Y
269.5747 27.0313 270.1069 27.4717 v
270.6396 27.9072 268.6299 29.3037 Y
265.8081 28.9531 264.9385 28.7002 v
264.0688 28.4463 262.7319 29.4717 263.6123 30.0127 c
264.4932 30.5498 266.4233 30.0762 267.5503 31.0654 c
268.6782 32.0537 269.7935 32.7568 Y
268.1089 33.6797 L
268.8999 34.8545 269.4321 35.291 v
269.9644 35.7295 270.1099 36.5264 270.7544 36.9043 c
271.1807 37.1523 271.7754 37.3662 272.1338 37.4844 C
272.2993 36.7119 272.4814 36.1406 Y
272.7393 37.1943 273.0879 37.8545 v
273.436 38.5186 274.2266 38.6953 274.6401 39.2471 c
275.0542 39.7998 276.1934 40.6396 Y
277.1899 38.9951 L
277.8442 40.1426 278.7817 41.3105 v
279.7207 42.4785 279.1626 44.3887 279.6626 45.291 c
280.165 46.1943 281.2461 44.9033 281.0322 44.0244 c
280.8159 43.1436 280.5879 40.3096 Y
282.0703 38.3613 282.4839 38.9121 v
282.8979 39.4639 282.5854 40.4727 Y
282.5854 40.4727 283.3838 39.1592 v
284.1807 37.8438 286.2212 38.1836 Y
286.0742 38.4248 L
286.3467 38.8447 287.0903 40.165 286.4287 41.2568 c
285.6318 42.5703 285.6318 42.5703 Y
286.3823 41.8271 287.0625 41.9424 v
287.7427 42.0518 286.6997 44.2666 Y
284.0806 45.375 283.2007 45.5908 v
282.3208 45.8057 281.6763 47.3604 282.7085 47.3896 c
283.7407 47.416 285.1758 46.04 286.6455 46.332 c
288.1167 46.624 289.4336 46.6748 Y
288.437 48.3174 L
289.7095 48.9385 290.3892 49.0518 v
291.0684 49.165 291.5928 49.7822 292.3394 49.7861 c
292.833 49.7881 293.4556 49.6768 293.8247 49.6016 C
293.5815 48.8486 293.4531 48.2617 Y
294.2046 49.0459 294.8364 49.4453 v
295.4688 49.8428 296.2427 49.6035 296.876 49.874 c
297.5112 50.1436 298.9175 50.3018 Y
298.9595 48.3809 L
300.0977 49.0459 301.4941 49.5898 v
302.8926 50.1318 303.3633 52.0645 304.248 52.5957 c
305.1348 53.127 305.4258 51.4688 304.7998 50.8135 c
304.1719 50.1592 302.5586 47.8193 Y
302.8672 45.3926 303.502 45.6631 v
304.1367 45.9326 304.3701 46.9619 Y
304.3701 46.9619 304.4043 45.4258 v
304.4375 43.8887 306.373 43.1611 Y
306.3672 43.4443 L
306.8145 43.6719 308.1191 44.4424 308.0898 45.7178 c
308.0566 47.2549 308.0566 47.2549 Y
308.3359 46.2363 308.9805 45.9932 v
309.627 45.751 309.8301 48.1904 Y
308.1152 50.46 307.4629 51.0869 v
306.8066 51.7119 307.0254 53.3818 307.9355 52.8906 c
308.8418 52.3975 309.3965 50.4873 310.8164 50.0068 c
312.2363 49.5244 313.4023 48.9092 Y
313.3613 50.8291 L
314.7715 50.7324 315.418 50.4902 v
316.0625 50.249 316.8262 50.5205 317.4746 50.1514 c
317.9023 49.9063 318.3867 49.499 318.668 49.2471 C
318.0801 48.7178 317.6777 48.2744 Y
318.7188 48.5771 319.4648 48.6064 v
320.2109 48.6357 320.7617 48.041 321.4473 47.958 c
322.1328 47.875 323.4297 47.3086 Y
322.5059 45.623 L
323.8223 45.6318 325.3027 45.4014 v
326.7871 45.1729 328.1602 46.6104 329.1934 46.6299 c
330.2246 46.6475 329.6484 45.0645 328.7793 44.8096 c
327.9082 44.5576 325.3398 43.3369 Y
324.3945 41.0801 325.0801 40.999 v
325.7617 40.915 326.4824 41.6885 Y
326.4824 41.6885 325.7402 40.3408 v
325.002 38.9932 326.3145 37.3955 Y
326.4531 37.6436 L
326.9512 37.6172 328.4688 37.6357 329.082 38.7529 c
329.8203 40.0986 329.8203 40.0986 Y
329.5527 39.0791 329.9902 38.5479 v
330.4277 38.0146 331.8242 40.0234 Y
331.4727 42.8467 331.2207 43.7158 v
330.9648 44.585 331.9902 45.9229 332.5313 45.042 c
333.0723 44.1602 332.5977 42.2305 333.584 41.1025 c
334.5742 39.9756 335.2754 38.8604 Y
336.1992 40.5439 L
337.373 39.7539 337.8125 39.2217 v
338.25 38.6885 339.0469 38.5439 339.4219 37.8994 c
339.6719 37.4736 339.8887 36.8779 340.0059 36.5195 C
339.2324 36.3545 338.6602 36.1729 Y
339.7148 35.9131 340.377 35.5664 v
341.0371 35.2158 341.2168 34.4287 341.7676 34.0137 c
342.3184 33.5986 343.1582 32.46 Y
341.5176 31.4639 L
342.6621 30.8096 343.832 29.8721 v
344.998 28.9326 346.9082 29.4912 347.8105 28.9912 c
348.7148 28.4893 347.4238 27.4072 346.543 27.6201 c
345.6641 27.8369 342.8301 28.0645 Y
340.8809 26.583 341.4336 26.1709 v
341.9844 25.7568 342.9922 26.0674 Y
342.9922 26.0674 341.6777 25.2695 v
340.3633 24.4717 340.7051 22.4326 Y
340.9473 22.5791 L
341.3633 22.3066 342.6875 21.5635 343.7773 22.2256 c
345.0898 23.0225 345.0898 23.0225 Y
344.3477 22.2725 344.4609 21.5918 v
344.5742 20.9111 346.7891 21.9561 Y
347.8926 24.5742 348.1113 25.4521 v
348.3242 26.333 349.8809 26.9775 349.9082 25.9463 c
349.9375 24.9131 348.5605 23.4775 348.8535 22.0088 c
349.1445 20.5361 349.1953 19.2197 Y
350.8379 20.2178 L
351.459 18.9463 351.5723 18.2637 v
351.6875 17.585 352.3008 17.0615 352.3066 16.3135 c
352.3086 15.8213 352.1992 15.1992 352.1211 14.8291 C
351.3672 15.0732 350.7832 15.2002 Y
351.5684 14.4482 351.9648 13.8174 v
352.3652 13.1846 352.123 12.4111 352.3945 11.7783 c
352.6641 11.1436 352.8223 9.7373 Y
350.9023 9.69434 L
351.3809 8.87207 351.8574 7.77051 V
357.0879 7.77051 L
356.9258 10.6904 355.9883 12.1221 355.0508 13.2422 c
354.4844 13.9229 353.2832 14.4385 352.3008 14.7705 C
352.9063 15.415 354.4336 17.1553 354.6035 18.4561 c
354.8164 20.0811 354.8262 22.0361 352.7891 25.1455 C
352.9824 26.3115 355.7715 26.6543 v
f
*U
u
u
*u
0 D
0 0 0 0.37 k
113.3892 511.6377 m
118.4536 497.9751 L
118.9785 496.4463 119.5518 494.6309 119.9341 493.2456 c
120.0298 493.2456 L
120.4595 494.6309 120.937 496.3984 121.5112 498.0703 c
126.0972 511.6377 L
130.54 511.6377 L
124.2334 495.1567 L
121.2236 487.2261 119.1699 483.166 116.3037 480.6816 c
114.249 478.8662 112.1958 478.1499 111.144 477.9585 c
110.0928 481.4937 L
111.144 481.8281 112.5298 482.4971 113.772 483.5483 c
114.918 484.4561 116.3511 486.0801 117.3066 488.2295 c
117.498 488.6597 117.6416 488.9941 117.6416 489.2329 c
117.6416 489.4717 117.5454 489.8062 117.355 490.3315 c
108.8032 511.6377 L
113.3892 511.6377 l
f
*U
U
u
*u
154.8071 500.2681 m
154.8071 491.7168 148.8833 487.9907 143.2944 487.9907 c
137.0361 487.9907 132.2109 492.5767 132.2109 499.8862 c
132.2109 507.625 137.2744 512.1631 143.6768 512.1631 c
150.3164 512.1631 154.8071 507.3384 154.8071 500.2681 c
f
1 D
136.4629 500.0293 m
136.4629 494.9653 139.377 491.1436 143.4849 491.1436 c
147.498 491.1436 150.5078 494.9175 150.5078 500.1245 c
150.5078 504.042 148.5493 509.0103 143.5811 509.0103 c
138.6123 509.0103 136.4629 504.4243 136.4629 500.0293 c
f
*U
*u
0 D
179.457 494.8223 m
179.457 492.4336 179.5049 490.3315 179.6479 488.5161 c
175.9224 488.5161 L
175.6836 492.29 L
175.5874 492.29 L
174.4888 490.4268 172.0527 487.9907 167.9443 487.9907 c
164.3135 487.9907 159.9668 489.9971 159.9668 498.1182 c
159.9668 511.6377 L
164.1704 511.6377 L
164.1704 498.835 L
164.1704 494.4399 165.5083 491.478 169.3296 491.478 c
172.1479 491.478 174.1064 493.437 174.8711 495.2998 c
175.1104 495.9209 175.2534 496.6855 175.2534 497.4497 c
175.2534 511.6377 L
179.457 511.6377 L
179.457 494.8223 l
f
*U
*u
186.4316 504.4243 m
186.4316 507.147 186.3843 509.4883 186.2407 511.6377 c
189.9189 511.6377 L
190.0625 507.0991 L
190.2529 507.0991 L
191.3042 510.2046 193.8359 512.1631 196.6553 512.1631 c
197.1328 512.1631 197.4668 512.1157 197.8491 512.0195 c
197.8491 508.0547 L
197.4189 508.1504 196.9893 508.1982 196.416 508.1982 c
193.4536 508.1982 191.3521 505.9531 190.7788 502.8003 c
190.6836 502.2266 190.5879 501.5581 190.5879 500.8413 c
190.5879 488.5161 L
186.4316 488.5161 L
186.4316 504.4243 l
f
*U
U
u
*u
217.2441 517.1797 m
217.2441 511.6377 L
223.2622 511.6377 L
223.2622 508.437 L
217.2441 508.437 L
217.2441 495.9688 L
217.2441 493.1025 218.0557 491.478 220.3965 491.478 c
221.543 491.478 222.2109 491.5737 222.8325 491.7646 c
223.0239 488.6118 L
222.2109 488.2773 220.9214 487.9907 219.2969 487.9907 c
217.3394 487.9907 215.7632 488.6597 214.7603 489.8062 c
213.5654 491.0479 213.1357 493.1025 213.1357 495.8252 c
213.1357 508.437 L
209.5518 508.437 L
209.5518 511.6377 L
213.1357 511.6377 L
213.1357 515.8896 L
217.2441 517.1797 l
f
*U
U
u
*u
230.0454 499.3125 m
230.1421 493.6279 233.7725 491.2871 237.9761 491.2871 c
240.9854 491.2871 242.8013 491.8125 244.3774 492.4814 c
245.0938 489.4717 L
243.6128 488.8027 241.0801 487.9907 237.4028 487.9907 c
230.2852 487.9907 226.0332 492.7202 226.0332 499.6948 c
226.0332 506.6694 230.1421 512.1631 236.8765 512.1631 c
244.4243 512.1631 246.4316 505.5229 246.4316 501.2715 c
246.4316 500.4111 246.3354 499.7427 246.2886 499.3125 C
230.0454 499.3125 l
f
1 D
242.3716 502.3223 m
242.418 504.9976 241.272 509.1538 236.5435 509.1538 c
232.291 509.1538 230.4287 505.2363 230.0938 502.3223 C
242.3716 502.3223 l
f
*U
U
u
*u
0 D
253.4546 511.6377 m
256.7505 506.6694 L
257.6099 505.3799 258.3267 504.1851 259.0913 502.8955 c
259.2344 502.8955 L
259.9995 504.2808 260.7642 505.4751 261.5273 506.7173 c
264.7764 511.6377 L
269.3149 511.6377 L
261.4321 500.459 L
269.5532 488.5161 L
264.7764 488.5161 L
261.3838 493.7236 L
260.4775 495.061 259.7129 496.3511 258.8994 497.7363 c
258.8047 497.7363 L
258.04 496.3032 257.2285 495.1089 256.3687 493.7236 c
253.0249 488.5161 L
248.3911 488.5161 L
256.6069 500.3159 L
248.7729 511.6377 L
253.4546 511.6377 l
f
*U
U
u
*u
279.2988 517.1797 m
279.2988 511.6377 L
285.3169 511.6377 L
285.3169 508.437 L
279.2988 508.437 L
279.2988 495.9688 L
279.2988 493.1025 280.1104 491.478 282.4512 491.478 c
283.5977 491.478 284.2656 491.5737 284.8872 491.7646 c
285.0786 488.6118 L
284.2656 488.2773 282.9761 487.9907 281.3516 487.9907 c
279.3936 487.9907 277.8174 488.6597 276.8145 489.8062 c
275.6201 491.0479 275.1899 493.1025 275.1899 495.8252 c
275.1899 508.437 L
271.606 508.437 L
271.606 511.6377 L
275.1899 511.6377 L
275.1899 515.8896 L
279.2988 517.1797 l
f
*U
*u
300.1738 522.4341 m
304.3779 522.4341 L
304.3779 508.0073 L
304.4727 508.0073 L
305.1426 509.2017 306.1924 510.2524 307.4834 510.9688 c
308.7246 511.6855 310.2061 512.1631 311.7822 512.1631 c
314.8877 512.1631 319.8564 510.2524 319.8564 502.2744 c
319.8564 488.5161 L
315.6504 488.5161 L
315.6504 501.7969 L
315.6504 505.5229 314.2666 508.6758 310.3008 508.6758 c
307.5781 508.6758 305.4287 506.7651 304.6641 504.4722 c
304.4258 503.8984 304.3779 503.2773 304.3779 502.4658 c
304.3779 488.5161 L
300.1738 488.5161 L
300.1738 522.4341 l
f
*U
*u
329.0264 499.3125 m
329.123 493.6279 332.7539 491.2871 336.958 491.2871 c
339.9668 491.2871 341.7832 491.8125 343.3594 492.4814 c
344.0752 489.4717 L
342.5938 488.8027 340.0635 487.9907 336.3848 487.9907 c
329.2666 487.9907 325.0146 492.7202 325.0146 499.6948 c
325.0146 506.6694 329.123 512.1631 335.8574 512.1631 c
343.4072 512.1631 345.4131 505.5229 345.4131 501.2715 c
345.4131 500.4111 345.3184 499.7427 345.2695 499.3125 C
329.0264 499.3125 l
f
1 D
341.3525 502.3223 m
341.3994 504.9976 340.2529 509.1538 335.5244 509.1538 c
331.2725 509.1538 329.4102 505.2363 329.0752 502.3223 C
341.3525 502.3223 l
f
*U
U
u
*u
0 D
350.6201 504.4243 m
350.6201 507.147 350.5732 509.4883 350.4297 511.6377 c
354.1074 511.6377 L
354.251 507.0991 L
354.4424 507.0991 L
355.4932 510.2046 358.0244 512.1631 360.8438 512.1631 c
361.3213 512.1631 361.6553 512.1157 362.0381 512.0195 c
362.0381 508.0547 L
361.6084 508.1504 361.1787 508.1982 360.6055 508.1982 c
357.6426 508.1982 355.54 505.9531 354.9668 502.8003 c
354.8721 502.2266 354.7773 501.5581 354.7773 500.8413 c
354.7773 488.5161 L
350.6201 488.5161 L
350.6201 504.4243 l
f
*U
U
u
*u
368.1045 499.3125 m
368.2012 493.6279 371.832 491.2871 376.0352 491.2871 c
379.0449 491.2871 380.8604 491.8125 382.4365 492.4814 c
383.1533 489.4717 L
381.6719 488.8027 379.1396 487.9907 375.4619 487.9907 c
368.3447 487.9907 364.0928 492.7202 364.0928 499.6948 c
364.0928 506.6694 368.2012 512.1631 374.9355 512.1631 c
382.4834 512.1631 384.4912 505.5229 384.4912 501.2715 c
384.4912 500.4111 384.3945 499.7427 384.3477 499.3125 C
368.1045 499.3125 l
f
1 D
380.4307 502.3223 m
380.4775 504.9976 379.3311 509.1538 374.6025 509.1538 c
370.3506 509.1538 368.4873 505.2363 368.1533 502.3223 C
380.4307 502.3223 l
f
*U
U
u
*u
0 D
109.9863 465.2407 m
111.6143 460.8467 L
111.7832 460.3555 111.9673 459.7725 112.0908 459.3271 c
112.1216 459.3271 L
112.2598 459.7725 112.4131 460.3403 112.5972 460.8784 c
114.0718 465.2407 L
115.5005 465.2407 L
113.4727 459.9404 L
112.5054 457.3911 111.8447 456.085 110.9233 455.2871 c
110.2627 454.7036 109.6021 454.4722 109.2642 454.4121 c
108.9268 455.5483 L
109.2642 455.6553 109.7095 455.8701 110.1089 456.2085 c
110.4775 456.5 110.9385 457.0229 111.2461 457.7144 c
111.3076 457.853 111.3535 457.9595 111.3535 458.0361 c
111.3535 458.1128 111.3228 458.2212 111.2607 458.3892 c
108.5117 465.2407 L
109.9863 465.2407 l
f
*U
U
u
*u
123.3013 461.585 m
123.3013 458.8359 121.396 457.6362 119.5991 457.6362 c
117.5874 457.6362 116.0361 459.1108 116.0361 461.4619 c
116.0361 463.9492 117.6641 465.4087 119.7227 465.4087 c
121.8569 465.4087 123.3013 463.8574 123.3013 461.585 c
f
1 D
117.4033 461.5083 m
117.4033 459.8789 118.3394 458.6509 119.6606 458.6509 c
120.9512 458.6509 121.9185 459.8638 121.9185 461.5386 c
121.9185 462.7979 121.2886 464.396 119.6914 464.396 c
118.0938 464.396 117.4033 462.9214 117.4033 461.5083 c
f
*U
*u
0 D
131.2236 459.834 m
131.2236 459.0659 131.2397 458.3892 131.2856 457.8062 c
130.0874 457.8062 L
130.0107 459.019 L
129.98 459.019 L
129.627 458.4209 128.8428 457.6362 127.5225 457.6362 c
126.3555 457.6362 124.9575 458.2827 124.9575 460.8936 c
124.9575 465.2407 L
126.3086 465.2407 L
126.3086 461.1235 L
126.3086 459.7104 126.7388 458.7578 127.9673 458.7578 c
128.8735 458.7578 129.5034 459.3872 129.7495 459.9873 c
129.8262 460.187 129.8726 460.4321 129.8726 460.6787 c
129.8726 465.2407 L
131.2236 465.2407 L
131.2236 459.834 l
f
*U
*u
133.4639 462.9214 m
133.4639 463.7959 133.4492 464.5493 133.4023 465.2407 c
134.5854 465.2407 L
134.6313 463.7813 L
134.6929 463.7813 L
135.0308 464.7788 135.8447 465.4087 136.7515 465.4087 c
136.9048 465.4087 137.0122 465.394 137.1353 465.3638 c
137.1353 464.0874 L
136.9971 464.1191 136.8589 464.1343 136.6738 464.1343 c
135.7217 464.1343 135.0459 463.4126 134.8618 462.3979 c
134.8311 462.2148 134.8003 462 134.8003 461.7686 c
134.8003 457.8062 L
133.4639 457.8062 L
133.4639 462.9214 l
f
*U
U
u
*u
143.3677 467.0215 m
143.3677 465.2407 L
145.3027 465.2407 L
145.3027 464.2109 L
143.3677 464.2109 L
143.3677 460.2021 L
143.3677 459.2808 143.6294 458.7578 144.3813 458.7578 c
144.7505 458.7578 144.9653 458.7891 145.1655 458.8511 c
145.2261 457.8359 L
144.9653 457.7295 144.5508 457.6362 144.0283 457.6362 c
143.3984 457.6362 142.8921 457.853 142.5693 458.2212 c
142.1855 458.6191 142.0474 459.2808 142.0474 460.1553 c
142.0474 464.2109 L
140.895 464.2109 L
140.895 465.2407 L
142.0474 465.2407 L
142.0474 466.6064 L
143.3677 467.0215 l
f
*U
U
u
*u
147.4819 461.2769 m
147.5132 459.4492 148.6812 458.6978 150.0322 458.6978 c
151 458.6978 151.5835 458.8657 152.0908 459.0811 c
152.3208 458.1128 L
151.8447 457.8979 151.0303 457.6362 149.8481 457.6362 c
147.5596 457.6362 146.1924 459.1572 146.1924 461.3999 c
146.1924 463.6426 147.5132 465.4087 149.6787 465.4087 c
152.1055 465.4087 152.7505 463.2744 152.7505 461.9067 c
152.7505 461.6299 152.7207 461.415 152.7046 461.2769 C
147.4819 461.2769 l
f
1 D
151.4453 462.2446 m
151.4609 463.1045 151.0918 464.4409 149.5713 464.4409 c
148.2046 464.4409 147.6055 463.1812 147.498 462.2446 C
151.4453 462.2446 l
f
*U
U
u
*u
0 D
155.0073 465.2407 m
156.0669 463.6426 L
156.3438 463.228 156.5732 462.8447 156.8203 462.4297 c
156.8657 462.4297 L
157.1118 462.8745 157.3574 463.2593 157.603 463.6577 c
158.6479 465.2407 L
160.1064 465.2407 L
157.5723 461.6465 L
160.1831 457.8062 L
158.6479 457.8062 L
157.5566 459.4805 L
157.2651 459.9106 157.019 460.3252 156.7583 460.7705 c
156.7275 460.7705 L
156.4819 460.3105 156.2202 459.9258 155.9443 459.4805 c
154.8691 457.8062 L
153.3794 457.8062 L
156.021 461.6001 L
153.502 465.2407 L
155.0073 465.2407 l
f
*U
U
u
*u
163.3149 467.0215 m
163.3149 465.2407 L
165.25 465.2407 L
165.25 464.2109 L
163.3149 464.2109 L
163.3149 460.2021 L
163.3149 459.2808 163.5762 458.7578 164.3286 458.7578 c
164.6978 458.7578 164.9126 458.7891 165.1123 458.8511 c
165.1733 457.8359 L
164.9126 457.7295 164.4976 457.6362 163.9756 457.6362 c
163.3457 457.6362 162.8389 457.853 162.5166 458.2212 c
162.1328 458.6191 161.9941 459.2808 161.9941 460.1553 c
161.9941 464.2109 L
160.8423 464.2109 L
160.8423 465.2407 L
161.9941 465.2407 L
161.9941 466.6064 L
163.3149 467.0215 l
f
*U
*u
170.0244 468.7109 m
171.3765 468.7109 L
171.3765 464.0728 L
171.4072 464.0728 L
171.6221 464.4575 171.9595 464.7939 172.3745 465.0254 c
172.7744 465.2554 173.25 465.4087 173.7573 465.4087 c
174.7554 465.4087 176.3525 464.7939 176.3525 462.23 c
176.3525 457.8062 L
175.001 457.8062 L
175.001 462.0767 L
175.001 463.2744 174.5552 464.2876 173.2808 464.2876 c
172.4053 464.2876 171.7139 463.6729 171.4683 462.9365 c
171.3916 462.7515 171.3765 462.5513 171.3765 462.2915 c
171.3765 457.8062 L
170.0244 457.8062 L
170.0244 468.7109 l
f
*U
*u
179.2988 461.2769 m
179.3296 459.4492 180.4971 458.6978 181.8491 458.6978 c
182.8164 458.6978 183.4004 458.8657 183.9077 459.0811 c
184.1372 458.1128 L
183.6616 457.8979 182.8472 457.6362 181.665 457.6362 c
179.3755 457.6362 178.0093 459.1572 178.0093 461.3999 c
178.0093 463.6426 179.3296 465.4087 181.4956 465.4087 c
183.9224 465.4087 184.5674 463.2744 184.5674 461.9067 c
184.5674 461.6299 184.5366 461.415 184.5215 461.2769 C
179.2988 461.2769 l
f
1 D
183.2617 462.2446 m
183.2778 463.1045 182.9087 464.4409 181.3882 464.4409 c
180.021 464.4409 179.4224 463.1812 179.3149 462.2446 C
183.2617 462.2446 l
f
*U
U
u
*u
0 D
186.2393 462.9214 m
186.2393 463.7959 186.2241 464.5493 186.1777 465.2407 c
187.3604 465.2407 L
187.4063 463.7813 L
187.4683 463.7813 L
187.8062 464.7788 188.6201 465.4087 189.5264 465.4087 c
189.6797 465.4087 189.7871 465.394 189.9097 465.3638 c
189.9097 464.0874 L
189.7725 464.1191 189.6343 464.1343 189.4492 464.1343 c
188.4971 464.1343 187.8213 463.4126 187.6372 462.3979 c
187.6064 462.2148 187.5757 462 187.5757 461.7686 c
187.5757 457.8062 L
186.2393 457.8062 L
186.2393 462.9214 l
f
*U
U
u
*u
191.8584 461.2769 m
191.8892 459.4492 193.0571 458.6978 194.4082 458.6978 c
195.3765 458.6978 195.9595 458.8657 196.4668 459.0811 c
196.6968 458.1128 L
196.2212 457.8979 195.4063 457.6362 194.2241 457.6362 c
191.936 457.6362 190.5688 459.1572 190.5688 461.3999 c
190.5688 463.6426 191.8892 465.4087 194.0552 465.4087 c
196.4819 465.4087 197.127 463.2744 197.127 461.9067 c
197.127 461.6299 197.0967 461.415 197.0811 461.2769 C
191.8584 461.2769 l
f
1 D
195.8213 462.2446 m
195.8369 463.1045 195.4683 464.4409 193.9478 464.4409 c
192.5806 464.4409 191.9814 463.1812 191.874 462.2446 C
195.8213 462.2446 l
f
*U
U
u
*u
0 D
202.5459 465.2407 m
204.1733 460.8467 L
204.3433 460.3555 204.5264 459.7725 204.6499 459.3271 c
204.6816 459.3271 L
204.8198 459.7725 204.9731 460.3403 205.1563 460.8784 c
206.6309 465.2407 L
208.0605 465.2407 L
206.0327 459.9404 L
205.0645 457.3911 204.4048 456.085 203.4829 455.2871 c
202.8223 454.7036 202.1616 454.4722 201.8237 454.4121 c
201.4863 455.5483 L
201.8237 455.6553 202.2695 455.8701 202.6685 456.2085 c
203.0376 456.5 203.498 457.0229 203.8057 457.7144 c
203.8672 457.853 203.9131 457.9595 203.9131 458.0361 c
203.9131 458.1128 203.8823 458.2212 203.8203 458.3892 c
201.0713 465.2407 L
202.5459 465.2407 l
f
*U
U
u
*u
215.8613 461.585 m
215.8613 458.8359 213.957 457.6362 212.1592 457.6362 c
210.1479 457.6362 208.5972 459.1108 208.5972 461.4619 c
208.5972 463.9492 210.2246 465.4087 212.2822 465.4087 c
214.417 465.4087 215.8613 463.8574 215.8613 461.585 c
f
1 D
209.9634 461.5083 m
209.9634 459.8789 210.8994 458.6509 212.2207 458.6509 c
213.5122 458.6509 214.4785 459.8638 214.4785 461.5386 c
214.4785 462.7979 213.8486 464.396 212.2524 464.396 c
210.6548 464.396 209.9634 462.9214 209.9634 461.5083 c
f
*U
*u
0 D
223.7837 459.834 m
223.7837 459.0659 223.8008 458.3892 223.8457 457.8062 c
222.6475 457.8062 L
222.5708 459.019 L
222.541 459.019 L
222.1875 458.4209 221.4028 457.6362 220.0835 457.6362 c
218.9155 457.6362 217.5176 458.2827 217.5176 460.8936 c
217.5176 465.2407 L
218.8687 465.2407 L
218.8687 461.1235 L
218.8687 459.7104 219.2988 458.7578 220.5283 458.7578 c
221.4346 458.7578 222.0645 459.3872 222.3096 459.9873 c
222.3857 460.187 222.4326 460.4321 222.4326 460.6787 c
222.4326 465.2407 L
223.7837 465.2407 L
223.7837 459.834 l
f
*U
*u
226.0249 462.9214 m
226.0249 463.7959 226.0098 464.5493 225.9634 465.2407 c
227.146 465.2407 L
227.1914 463.7813 L
227.2529 463.7813 L
227.5908 464.7788 228.4058 465.4087 229.312 465.4087 c
229.4653 465.4087 229.5723 465.394 229.6953 465.3638 c
229.6953 464.0874 L
229.5571 464.1191 229.4189 464.1343 229.2339 464.1343 c
228.2827 464.1343 227.606 463.4126 227.4229 462.3979 c
227.3911 462.2148 227.3613 462 227.3613 461.7686 c
227.3613 457.8062 L
226.0249 457.8062 L
226.0249 462.9214 l
f
*U
U
u
*u
235.9282 467.0215 m
235.9282 465.2407 L
237.8647 465.2407 L
237.8647 464.2109 L
235.9282 464.2109 L
235.9282 460.2021 L
235.9282 459.2808 236.1899 458.7578 236.9434 458.7578 c
237.3115 458.7578 237.5264 458.7891 237.7261 458.8511 c
237.7881 457.8359 L
237.5264 457.7295 237.1113 457.6362 236.5898 457.6362 c
235.96 457.6362 235.4536 457.853 235.1304 458.2212 c
234.7471 458.6191 234.6089 459.2808 234.6089 460.1553 c
234.6089 464.2109 L
233.4561 464.2109 L
233.4561 465.2407 L
234.6089 465.2407 L
234.6089 466.6064 L
235.9282 467.0215 l
f
*U
U
u
*u
240.0439 461.2769 m
240.0737 459.4492 241.2417 458.6978 242.5933 458.6978 c
243.561 458.6978 244.144 458.8657 244.6523 459.0811 c
244.8823 458.1128 L
244.4058 457.8979 243.5913 457.6362 242.4097 457.6362 c
240.1206 457.6362 238.7544 459.1572 238.7544 461.3999 c
238.7544 463.6426 240.0737 465.4087 242.2397 465.4087 c
244.6675 465.4087 245.312 463.2744 245.312 461.9067 c
245.312 461.6299 245.2822 461.415 245.2656 461.2769 C
240.0439 461.2769 l
f
1 D
244.0059 462.2446 m
244.0225 463.1045 243.6528 464.4409 242.1333 464.4409 c
240.7651 464.4409 240.167 463.1812 240.0586 462.2446 C
244.0059 462.2446 l
f
*U
U
u
*u
0 D
247.5684 465.2407 m
248.6279 463.6426 L
248.9043 463.228 249.1343 462.8447 249.3809 462.4297 c
249.4277 462.4297 L
249.6724 462.8745 249.9189 463.2593 250.1641 463.6577 c
251.2085 465.2407 L
252.6685 465.2407 L
250.1343 461.6465 L
252.7451 457.8062 L
251.2085 457.8062 L
250.1172 459.4805 L
249.8257 459.9106 249.5811 460.3252 249.3193 460.7705 c
249.2891 460.7705 L
249.043 460.3105 248.7813 459.9258 248.5063 459.4805 c
247.4297 457.8062 L
245.9404 457.8062 L
248.583 461.6001 L
246.0635 465.2407 L
247.5684 465.2407 l
f
*U
U
u
*u
255.874 467.0215 m
255.874 465.2407 L
257.8101 465.2407 L
257.8101 464.2109 L
255.874 464.2109 L
255.874 460.2021 L
255.874 459.2808 256.1357 458.7578 256.8887 458.7578 c
257.2568 458.7578 257.4717 458.7891 257.6719 458.8511 c
257.7334 457.8359 L
257.4717 457.7295 257.0571 457.6362 256.5352 457.6362 c
255.9058 457.6362 255.3989 457.853 255.0757 458.2212 c
254.6929 458.6191 254.5542 459.2808 254.5542 460.1553 c
254.5542 464.2109 L
253.4014 464.2109 L
253.4014 465.2407 L
254.5542 465.2407 L
254.5542 466.6064 L
255.874 467.0215 l
f
*U
*u
262.5835 468.7109 m
263.9365 468.7109 L
263.9365 464.0728 L
263.9663 464.0728 L
264.1812 464.4575 264.5195 464.7939 264.9346 465.0254 c
265.3345 465.2554 265.8091 465.4087 266.3174 465.4087 c
267.3154 465.4087 268.9116 464.7939 268.9116 462.23 c
268.9116 457.8062 L
267.5605 457.8062 L
267.5605 462.0767 L
267.5605 463.2744 267.1152 464.2876 265.8408 464.2876 c
264.9644 464.2876 264.2729 463.6729 264.0283 462.9365 c
263.9517 462.7515 263.9365 462.5513 263.9365 462.2915 c
263.9365 457.8062 L
262.5835 457.8062 L
262.5835 468.7109 l
f
*U
*u
271.8594 461.2769 m
271.8892 459.4492 273.0571 458.6978 274.4087 458.6978 c
275.3765 458.6978 275.96 458.8657 276.4678 459.0811 c
276.6978 458.1128 L
276.2212 457.8979 275.4067 457.6362 274.2256 457.6362 c
271.936 457.6362 270.5693 459.1572 270.5693 461.3999 c
270.5693 463.6426 271.8892 465.4087 274.0552 465.4087 c
276.4829 465.4087 277.1279 463.2744 277.1279 461.9067 c
277.1279 461.6299 277.0962 461.415 277.0811 461.2769 C
271.8594 461.2769 l
f
1 D
275.8213 462.2446 m
275.8384 463.1045 275.4683 464.4409 273.9487 464.4409 c
272.5811 464.4409 271.9829 463.1812 271.8745 462.2446 C
275.8213 462.2446 l
f
*U
U
u
*u
0 D
278.8008 462.9214 m
278.8008 463.7959 278.7837 464.5493 278.7388 465.2407 c
279.9219 465.2407 L
279.9668 463.7813 L
280.0283 463.7813 L
280.3667 464.7788 281.1816 465.4087 282.0879 465.4087 c
282.2412 465.4087 282.3477 465.394 282.4712 465.3638 c
282.4712 464.0874 L
282.333 464.1191 282.1943 464.1343 282.0098 464.1343 c
281.0581 464.1343 280.3818 463.4126 280.1982 462.3979 c
280.167 462.2148 280.1367 462 280.1367 461.7686 c
280.1367 457.8062 L
278.8008 457.8062 L
278.8008 462.9214 l
f
*U
U
u
*u
284.4204 461.2769 m
284.4507 459.4492 285.6187 458.6978 286.9697 458.6978 c
287.9375 458.6978 288.521 458.8657 289.0293 459.0811 c
289.2588 458.1128 L
288.7822 457.8979 287.9678 457.6362 286.7866 457.6362 c
284.4971 457.6362 283.1309 459.1572 283.1309 461.3999 c
283.1309 463.6426 284.4507 465.4087 286.6167 465.4087 c
289.0439 465.4087 289.689 463.2744 289.689 461.9067 c
289.689 461.6299 289.6587 461.415 289.6421 461.2769 C
284.4204 461.2769 l
f
1 D
288.3828 462.2446 m
288.3994 463.1045 288.0293 464.4409 286.5098 464.4409 c
285.1421 464.4409 284.5439 463.1812 284.4355 462.2446 C
288.3828 462.2446 l
f
*U
U
u
*u
0 D
295.1074 465.2407 m
296.7349 460.8467 L
296.9048 460.3555 297.0884 459.7725 297.2114 459.3271 c
297.2432 459.3271 L
297.3813 459.7725 297.5347 460.3403 297.7183 460.8784 c
299.1924 465.2407 L
300.6221 465.2407 L
298.5942 459.9404 L
297.6265 457.3911 296.9668 456.085 296.0454 455.2871 c
295.3838 454.7036 294.7241 454.4722 294.3857 454.4121 c
294.0474 455.5483 L
294.3857 455.6553 294.8306 455.8701 295.2305 456.2085 c
295.5986 456.5 296.0601 457.0229 296.3667 457.7144 c
296.4282 457.853 296.4751 457.9595 296.4751 458.0361 c
296.4751 458.1128 296.4434 458.2212 296.3818 458.3892 c
293.6328 465.2407 L
295.1074 465.2407 l
f
*U
U
u
*u
308.4229 461.585 m
308.4229 458.8359 306.5186 457.6362 304.7207 457.6362 c
302.71 457.6362 301.1582 459.1108 301.1582 461.4619 c
301.1582 463.9492 302.7861 465.4087 304.8438 465.4087 c
306.9785 465.4087 308.4229 463.8574 308.4229 461.585 c
f
1 D
302.5244 461.5083 m
302.5244 459.8789 303.4609 458.6509 304.7822 458.6509 c
306.0742 458.6509 307.04 459.8638 307.04 461.5386 c
307.04 462.7979 306.4102 464.396 304.8145 464.396 c
303.2168 464.396 302.5244 462.9214 302.5244 461.5083 c
f
*U
*u
0 D
316.3457 459.834 m
316.3457 459.0659 316.3623 458.3892 316.4072 457.8062 c
315.209 457.8062 L
315.1328 459.019 L
315.1025 459.019 L
314.749 458.4209 313.9648 457.6362 312.6455 457.6362 c
311.4775 457.6362 310.0791 458.2827 310.0791 460.8936 c
310.0791 465.2407 L
311.4307 465.2407 L
311.4307 461.1235 L
311.4307 459.7104 311.8604 458.7578 313.0898 458.7578 c
313.9961 458.7578 314.626 459.3872 314.8711 459.9873 c
314.9473 460.187 314.9941 460.4321 314.9941 460.6787 c
314.9941 465.2407 L
316.3457 465.2407 L
316.3457 459.834 l
f
*U
*u
318.5869 462.9214 m
318.5869 463.7959 318.5713 464.5493 318.5254 465.2407 c
319.708 465.2407 L
319.7529 463.7813 L
319.8145 463.7813 L
320.1523 464.7788 320.9678 465.4087 321.874 465.4087 c
322.0273 465.4087 322.1338 465.394 322.2568 465.3638 c
322.2568 464.0874 L
322.1191 464.1191 321.9805 464.1343 321.7959 464.1343 c
320.8438 464.1343 320.168 463.4126 319.9844 462.3979 c
319.9531 462.2148 319.9229 462 319.9229 461.7686 c
319.9229 457.8062 L
318.5869 457.8062 L
318.5869 462.9214 l
f
*U
U
u
*u
328.4902 467.0215 m
328.4902 465.2407 L
330.4248 465.2407 L
330.4248 464.2109 L
328.4902 464.2109 L
328.4902 460.2021 L
328.4902 459.2808 328.752 458.7578 329.5029 458.7578 c
329.873 458.7578 330.0879 458.7891 330.2861 458.8511 c
330.3477 457.8359 L
330.0879 457.7295 329.6729 457.6362 329.1504 457.6362 c
328.5205 457.6362 328.0137 457.853 327.6924 458.2212 c
327.3076 458.6191 327.1689 459.2808 327.1689 460.1553 c
327.1689 464.2109 L
326.0176 464.2109 L
326.0176 465.2407 L
327.1689 465.2407 L
327.1689 466.6064 L
328.4902 467.0215 l
f
*U
U
u
*u
332.6055 461.2769 m
332.6357 459.4492 333.8037 458.6978 335.1543 458.6978 c
336.123 458.6978 336.7061 458.8657 337.2139 459.0811 c
337.4443 458.1128 L
336.9678 457.8979 336.1523 457.6362 334.9717 457.6362 c
332.6826 457.6362 331.3164 459.1572 331.3164 461.3999 c
331.3164 463.6426 332.6357 465.4087 334.8018 465.4087 c
337.2295 465.4087 337.874 463.2744 337.874 461.9067 c
337.874 461.6299 337.8438 461.415 337.8271 461.2769 C
332.6055 461.2769 l
f
1 D
336.5674 462.2446 m
336.584 463.1045 336.2148 464.4409 334.6953 464.4409 c
333.3271 464.4409 332.7285 463.1812 332.6201 462.2446 C
336.5674 462.2446 l
f
*U
U
u
*u
0 D
340.1279 465.2407 m
341.1875 463.6426 L
341.4648 463.228 341.6943 462.8447 341.9414 462.4297 c
341.9873 462.4297 L
342.2324 462.8745 342.4795 463.2593 342.7236 463.6577 c
343.7686 465.2407 L
345.2285 465.2407 L
342.6943 461.6465 L
345.3047 457.8062 L
343.7686 457.8062 L
342.6777 459.4805 L
342.3857 459.9106 342.1406 460.3252 341.8789 460.7705 c
341.8496 460.7705 L
341.6025 460.3105 341.3408 459.9258 341.0664 459.4805 c
339.9902 457.8062 L
338.5 457.8062 L
341.1426 461.6001 L
338.624 465.2407 L
340.1279 465.2407 l
f
*U
U
u
*u
348.4355 467.0215 m
348.4355 465.2407 L
350.3721 465.2407 L
350.3721 464.2109 L
348.4355 464.2109 L
348.4355 460.2021 L
348.4355 459.2808 348.6973 458.7578 349.4502 458.7578 c
349.8184 458.7578 350.0332 458.7891 350.2334 458.8511 c
350.2949 457.8359 L
350.0332 457.7295 349.6182 457.6362 349.0967 457.6362 c
348.4678 457.6362 347.9609 457.853 347.6377 458.2212 c
347.2539 458.6191 347.1162 459.2808 347.1162 460.1553 c
347.1162 464.2109 L
345.9629 464.2109 L
345.9629 465.2407 L
347.1162 465.2407 L
347.1162 466.6064 L
348.4355 467.0215 l
f
*U
*u
355.1455 468.7109 m
356.498 468.7109 L
356.498 464.0728 L
356.5283 464.0728 L
356.7432 464.4575 357.0811 464.7939 357.4961 465.0254 c
357.8965 465.2554 358.3711 465.4087 358.8789 465.4087 c
359.877 465.4087 361.4736 464.7939 361.4736 462.23 c
361.4736 457.8062 L
360.1221 457.8062 L
360.1221 462.0767 L
360.1221 463.2744 359.6768 464.2876 358.4023 464.2876 c
357.5264 464.2876 356.835 463.6729 356.5898 462.9365 c
356.5127 462.7515 356.498 462.5513 356.498 462.2915 c
356.498 457.8062 L
355.1455 457.8062 L
355.1455 468.7109 l
f
*U
*u
364.4209 461.2769 m
364.4512 459.4492 365.6191 458.6978 366.9697 458.6978 c
367.9375 458.6978 368.5215 458.8657 369.0293 459.0811 c
369.2588 458.1128 L
368.7822 457.8979 367.9678 457.6362 366.7871 457.6362 c
364.4971 457.6362 363.1309 459.1572 363.1309 461.3999 c
363.1309 463.6426 364.4512 465.4087 366.6162 465.4087 c
369.0439 465.4087 369.6895 463.2744 369.6895 461.9067 c
369.6895 461.6299 369.6572 461.415 369.6426 461.2769 C
364.4209 461.2769 l
f
1 D
368.3828 462.2446 m
368.3994 463.1045 368.0293 464.4409 366.5098 464.4409 c
365.1426 464.4409 364.5439 463.1812 364.4355 462.2446 C
368.3828 462.2446 l
f
*U
U
u
*u
0 D
371.3604 462.9214 m
371.3604 463.7959 371.3457 464.5493 371.2988 465.2407 c
372.4814 465.2407 L
372.5283 463.7813 L
372.5898 463.7813 L
372.9277 464.7788 373.7412 465.4087 374.6475 465.4087 c
374.8008 465.4087 374.9092 465.394 375.0303 465.3638 c
375.0303 464.0874 L
374.8945 464.1191 374.7559 464.1343 374.5713 464.1343 c
373.6182 464.1343 372.9434 463.4126 372.7578 462.3979 c
372.7285 462.2148 372.6963 462 372.6963 461.7686 c
372.6963 457.8062 L
371.3604 457.8062 L
371.3604 462.9214 l
f
*U
U
u
*u
376.9814 461.2769 m
377.0117 459.4492 378.1797 458.6978 379.5313 458.6978 c
380.499 458.6978 381.082 458.8657 381.5908 459.0811 c
381.8203 458.1128 L
381.3438 457.8979 380.5293 457.6362 379.3477 457.6362 c
377.0586 457.6362 375.6924 459.1572 375.6924 461.3999 c
375.6924 463.6426 377.0117 465.4087 379.1777 465.4087 c
381.6055 465.4087 382.25 463.2744 382.25 461.9067 c
382.25 461.6299 382.2197 461.415 382.2031 461.2769 C
376.9814 461.2769 l
f
1 D
380.9443 462.2446 m
380.9609 463.1045 380.5908 464.4409 379.0713 464.4409 c
377.7031 464.4409 377.1055 463.1812 376.9971 462.2446 C
380.9443 462.2446 l
f
*U
U
u
*u
0 D
109.9863 446.8145 m
111.6143 442.4209 L
111.7832 441.9297 111.9673 441.3462 112.0908 440.9014 c
112.1216 440.9014 L
112.2598 441.3462 112.4131 441.9146 112.5972 442.4526 c
114.0718 446.8145 L
115.5005 446.8145 L
113.4727 441.5146 L
112.5054 438.9653 111.8447 437.6592 110.9233 436.8608 c
110.2627 436.2778 109.6021 436.0464 109.2642 435.9863 c
108.9268 437.1226 L
109.2642 437.2295 109.7095 437.4443 110.1089 437.7822 c
110.4775 438.0742 110.9385 438.5972 111.2461 439.2886 c
111.3076 439.4268 111.3535 439.5337 111.3535 439.6104 c
111.3535 439.687 111.3228 439.7949 111.2607 439.9634 c
108.5117 446.8145 L
109.9863 446.8145 l
f
*U
U
u
*u
123.3013 443.1592 m
123.3013 440.4102 121.396 439.2104 119.5991 439.2104 c
117.5874 439.2104 116.0361 440.6851 116.0361 443.0356 c
116.0361 445.5234 117.6641 446.9829 119.7227 446.9829 c
121.8569 446.9829 123.3013 445.4316 123.3013 443.1592 c
f
1 D
117.4033 443.0825 m
117.4033 441.4531 118.3394 440.2251 119.6606 440.2251 c
120.9512 440.2251 121.9185 441.438 121.9185 443.1123 c
121.9185 444.3721 121.2886 445.9697 119.6914 445.9697 c
118.0938 445.9697 117.4033 444.4951 117.4033 443.0825 c
f
*U
*u
0 D
131.2236 441.4082 m
131.2236 440.6396 131.2397 439.9634 131.2856 439.3804 c
130.0874 439.3804 L
130.0107 440.5933 L
129.98 440.5933 L
129.627 439.9951 128.8428 439.2104 127.5225 439.2104 c
126.3555 439.2104 124.9575 439.8569 124.9575 442.4678 c
124.9575 446.8145 L
126.3086 446.8145 L
126.3086 442.6978 L
126.3086 441.2847 126.7388 440.3315 127.9673 440.3315 c
128.8735 440.3315 129.5034 440.9614 129.7495 441.561 c
129.8262 441.7612 129.8726 442.0059 129.8726 442.2529 c
129.8726 446.8145 L
131.2236 446.8145 L
131.2236 441.4082 l
f
*U
*u
133.4639 444.4951 m
133.4639 445.3701 133.4492 446.123 133.4023 446.8145 c
134.5854 446.8145 L
134.6313 445.355 L
134.6929 445.355 L
135.0308 446.353 135.8447 446.9829 136.7515 446.9829 c
136.9048 446.9829 137.0122 446.9678 137.1353 446.938 c
137.1353 445.6616 L
136.9971 445.6934 136.8589 445.7085 136.6738 445.7085 c
135.7217 445.7085 135.0459 444.9868 134.8618 443.9722 c
134.8311 443.7891 134.8003 443.5737 134.8003 443.3423 c
134.8003 439.3804 L
133.4639 439.3804 L
133.4639 444.4951 l
f
*U
U
u
*u
143.3677 448.5957 m
143.3677 446.8145 L
145.3027 446.8145 L
145.3027 445.7852 L
143.3677 445.7852 L
143.3677 441.7764 L
143.3677 440.855 143.6294 440.3315 144.3813 440.3315 c
144.7505 440.3315 144.9653 440.3633 145.1655 440.4248 c
145.2261 439.4102 L
144.9653 439.3037 144.5508 439.2104 144.0283 439.2104 c
143.3984 439.2104 142.8921 439.4268 142.5693 439.7949 c
142.1855 440.1934 142.0474 440.855 142.0474 441.7295 c
142.0474 445.7852 L
140.895 445.7852 L
140.895 446.8145 L
142.0474 446.8145 L
142.0474 448.1807 L
143.3677 448.5957 l
f
*U
U
u
*u
147.4819 442.8506 m
147.5132 441.0229 148.6812 440.2715 150.0322 440.2715 c
151 440.2715 151.5835 440.4399 152.0908 440.6548 c
152.3208 439.687 L
151.8447 439.4717 151.0303 439.2104 149.8481 439.2104 c
147.5596 439.2104 146.1924 440.7314 146.1924 442.9741 c
146.1924 445.2168 147.5132 446.9829 149.6787 446.9829 c
152.1055 446.9829 152.7505 444.8486 152.7505 443.4805 c
152.7505 443.2041 152.7207 442.9893 152.7046 442.8506 C
147.4819 442.8506 l
f
1 D
151.4453 443.8188 m
151.4609 444.6787 151.0918 446.0146 149.5713 446.0146 c
148.2046 446.0146 147.6055 444.7554 147.498 443.8188 C
151.4453 443.8188 l
f
*U
U
u
*u
0 D
155.0073 446.8145 m
156.0669 445.2168 L
156.3438 444.8018 156.5732 444.4185 156.8203 444.0039 c
156.8657 444.0039 L
157.1118 444.4487 157.3574 444.8335 157.603 445.2319 c
158.6479 446.8145 L
160.1064 446.8145 L
157.5723 443.2207 L
160.1831 439.3804 L
158.6479 439.3804 L
157.5566 441.0547 L
157.2651 441.4844 157.019 441.8994 156.7583 442.3442 c
156.7275 442.3442 L
156.4819 441.8843 156.2202 441.4995 155.9443 441.0547 c
154.8691 439.3804 L
153.3794 439.3804 L
156.021 443.1738 L
153.502 446.8145 L
155.0073 446.8145 l
f
*U
U
u
*u
163.3149 448.5957 m
163.3149 446.8145 L
165.25 446.8145 L
165.25 445.7852 L
163.3149 445.7852 L
163.3149 441.7764 L
163.3149 440.855 163.5762 440.3315 164.3286 440.3315 c
164.6978 440.3315 164.9126 440.3633 165.1123 440.4248 c
165.1733 439.4102 L
164.9126 439.3037 164.4976 439.2104 163.9756 439.2104 c
163.3457 439.2104 162.8389 439.4268 162.5166 439.7949 c
162.1328 440.1934 161.9941 440.855 161.9941 441.7295 c
161.9941 445.7852 L
160.8423 445.7852 L
160.8423 446.8145 L
161.9941 446.8145 L
161.9941 448.1807 L
163.3149 448.5957 l
f
*U
*u
170.0244 450.2852 m
171.3765 450.2852 L
171.3765 445.6465 L
171.4072 445.6465 L
171.6221 446.0317 171.9595 446.3682 172.3745 446.5996 c
172.7744 446.8296 173.25 446.9829 173.7573 446.9829 c
174.7554 446.9829 176.3525 446.3682 176.3525 443.8037 c
176.3525 439.3804 L
175.001 439.3804 L
175.001 443.6504 L
175.001 444.8486 174.5552 445.8613 173.2808 445.8613 c
172.4053 445.8613 171.7139 445.2466 171.4683 444.5103 c
171.3916 444.3252 171.3765 444.1255 171.3765 443.8657 c
171.3765 439.3804 L
170.0244 439.3804 L
170.0244 450.2852 l
f
*U
*u
179.2988 442.8506 m
179.3296 441.0229 180.4971 440.2715 181.8491 440.2715 c
182.8164 440.2715 183.4004 440.4399 183.9077 440.6548 c
184.1372 439.687 L
183.6616 439.4717 182.8472 439.2104 181.665 439.2104 c
179.3755 439.2104 178.0093 440.7314 178.0093 442.9741 c
178.0093 445.2168 179.3296 446.9829 181.4956 446.9829 c
183.9224 446.9829 184.5674 444.8486 184.5674 443.4805 c
184.5674 443.2041 184.5366 442.9893 184.5215 442.8506 C
179.2988 442.8506 l
f
1 D
183.2617 443.8188 m
183.2778 444.6787 182.9087 446.0146 181.3882 446.0146 c
180.021 446.0146 179.4224 444.7554 179.3149 443.8188 C
183.2617 443.8188 l
f
*U
U
u
*u
0 D
186.2393 444.4951 m
186.2393 445.3701 186.2241 446.123 186.1777 446.8145 c
187.3604 446.8145 L
187.4063 445.355 L
187.4683 445.355 L
187.8062 446.353 188.6201 446.9829 189.5264 446.9829 c
189.6797 446.9829 189.7871 446.9678 189.9097 446.938 c
189.9097 445.6616 L
189.7725 445.6934 189.6343 445.7085 189.4492 445.7085 c
188.4971 445.7085 187.8213 444.9868 187.6372 443.9722 c
187.6064 443.7891 187.5757 443.5737 187.5757 443.3423 c
187.5757 439.3804 L
186.2393 439.3804 L
186.2393 444.4951 l
f
*U
U
u
*u
191.8584 442.8506 m
191.8892 441.0229 193.0571 440.2715 194.4082 440.2715 c
195.3765 440.2715 195.9595 440.4399 196.4668 440.6548 c
196.6968 439.687 L
196.2212 439.4717 195.4063 439.2104 194.2241 439.2104 c
191.936 439.2104 190.5688 440.7314 190.5688 442.9741 c
190.5688 445.2168 191.8892 446.9829 194.0552 446.9829 c
196.4819 446.9829 197.127 444.8486 197.127 443.4805 c
197.127 443.2041 197.0967 442.9893 197.0811 442.8506 C
191.8584 442.8506 l
f
1 D
195.8213 443.8188 m
195.8369 444.6787 195.4683 446.0146 193.9478 446.0146 c
192.5806 446.0146 191.9814 444.7554 191.874 443.8188 C
195.8213 443.8188 l
f
*U
U
u
*u
0 D
202.5459 446.8145 m
204.1733 442.4209 L
204.3433 441.9297 204.5264 441.3462 204.6499 440.9014 c
204.6816 440.9014 L
204.8198 441.3462 204.9731 441.9146 205.1563 442.4526 c
206.6309 446.8145 L
208.0605 446.8145 L
206.0327 441.5146 L
205.0645 438.9653 204.4048 437.6592 203.4829 436.8608 c
202.8223 436.2778 202.1616 436.0464 201.8237 435.9863 c
201.4863 437.1226 L
201.8237 437.2295 202.2695 437.4443 202.6685 437.7822 c
203.0376 438.0742 203.498 438.5972 203.8057 439.2886 c
203.8672 439.4268 203.9131 439.5337 203.9131 439.6104 c
203.9131 439.687 203.8823 439.7949 203.8203 439.9634 c
201.0713 446.8145 L
202.5459 446.8145 l
f
*U
U
u
*u
215.8613 443.1592 m
215.8613 440.4102 213.957 439.2104 212.1592 439.2104 c
210.1479 439.2104 208.5972 440.6851 208.5972 443.0356 c
208.5972 445.5234 210.2246 446.9829 212.2822 446.9829 c
214.417 446.9829 215.8613 445.4316 215.8613 443.1592 c
f
1 D
209.9634 443.0825 m
209.9634 441.4531 210.8994 440.2251 212.2207 440.2251 c
213.5122 440.2251 214.4785 441.438 214.4785 443.1123 c
214.4785 444.3721 213.8486 445.9697 212.2524 445.9697 c
210.6548 445.9697 209.9634 444.4951 209.9634 443.0825 c
f
*U
*u
0 D
223.7837 441.4082 m
223.7837 440.6396 223.8008 439.9634 223.8457 439.3804 c
222.6475 439.3804 L
222.5708 440.5933 L
222.541 440.5933 L
222.1875 439.9951 221.4028 439.2104 220.0835 439.2104 c
218.9155 439.2104 217.5176 439.8569 217.5176 442.4678 c
217.5176 446.8145 L
218.8687 446.8145 L
218.8687 442.6978 L
218.8687 441.2847 219.2988 440.3315 220.5283 440.3315 c
221.4346 440.3315 222.0645 440.9614 222.3096 441.561 c
222.3857 441.7612 222.4326 442.0059 222.4326 442.2529 c
222.4326 446.8145 L
223.7837 446.8145 L
223.7837 441.4082 l
f
*U
*u
226.0249 444.4951 m
226.0249 445.3701 226.0098 446.123 225.9634 446.8145 c
227.146 446.8145 L
227.1914 445.355 L
227.2529 445.355 L
227.5908 446.353 228.4058 446.9829 229.312 446.9829 c
229.4653 446.9829 229.5723 446.9678 229.6953 446.938 c
229.6953 445.6616 L
229.5571 445.6934 229.4189 445.7085 229.2339 445.7085 c
228.2827 445.7085 227.606 444.9868 227.4229 443.9722 c
227.3911 443.7891 227.3613 443.5737 227.3613 443.3423 c
227.3613 439.3804 L
226.0249 439.3804 L
226.0249 444.4951 l
f
*U
U
u
*u
235.9282 448.5957 m
235.9282 446.8145 L
237.8647 446.8145 L
237.8647 445.7852 L
235.9282 445.7852 L
235.9282 441.7764 L
235.9282 440.855 236.1899 440.3315 236.9434 440.3315 c
237.3115 440.3315 237.5264 440.3633 237.7261 440.4248 c
237.7881 439.4102 L
237.5264 439.3037 237.1113 439.2104 236.5898 439.2104 c
235.96 439.2104 235.4536 439.4268 235.1304 439.7949 c
234.7471 440.1934 234.6089 440.855 234.6089 441.7295 c
234.6089 445.7852 L
233.4561 445.7852 L
233.4561 446.8145 L
234.6089 446.8145 L
234.6089 448.1807 L
235.9282 448.5957 l
f
*U
U
u
*u
240.0439 442.8506 m
240.0737 441.0229 241.2417 440.2715 242.5933 440.2715 c
243.561 440.2715 244.144 440.4399 244.6523 440.6548 c
244.8823 439.687 L
244.4058 439.4717 243.5913 439.2104 242.4097 439.2104 c
240.1206 439.2104 238.7544 440.7314 238.7544 442.9741 c
238.7544 445.2168 240.0737 446.9829 242.2397 446.9829 c
244.6675 446.9829 245.312 444.8486 245.312 443.4805 c
245.312 443.2041 245.2822 442.9893 245.2656 442.8506 C
240.0439 442.8506 l
f
1 D
244.0059 443.8188 m
244.0225 444.6787 243.6528 446.0146 242.1333 446.0146 c
240.7651 446.0146 240.167 444.7554 240.0586 443.8188 C
244.0059 443.8188 l
f
*U
U
u
*u
0 D
247.5684 446.8145 m
248.6279 445.2168 L
248.9043 444.8018 249.1343 444.4185 249.3809 444.0039 c
249.4277 444.0039 L
249.6724 444.4487 249.9189 444.8335 250.1641 445.2319 c
251.2085 446.8145 L
252.6685 446.8145 L
250.1343 443.2207 L
252.7451 439.3804 L
251.2085 439.3804 L
250.1172 441.0547 L
249.8257 441.4844 249.5811 441.8994 249.3193 442.3442 c
249.2891 442.3442 L
249.043 441.8843 248.7813 441.4995 248.5063 441.0547 c
247.4297 439.3804 L
245.9404 439.3804 L
248.583 443.1738 L
246.0635 446.8145 L
247.5684 446.8145 l
f
*U
U
u
*u
255.874 448.5957 m
255.874 446.8145 L
257.8101 446.8145 L
257.8101 445.7852 L
255.874 445.7852 L
255.874 441.7764 L
255.874 440.855 256.1357 440.3315 256.8887 440.3315 c
257.2568 440.3315 257.4717 440.3633 257.6719 440.4248 c
257.7334 439.4102 L
257.4717 439.3037 257.0571 439.2104 256.5352 439.2104 c
255.9058 439.2104 255.3989 439.4268 255.0757 439.7949 c
254.6929 440.1934 254.5542 440.855 254.5542 441.7295 c
254.5542 445.7852 L
253.4014 445.7852 L
253.4014 446.8145 L
254.5542 446.8145 L
254.5542 448.1807 L
255.874 448.5957 l
f
*U
*u
262.5835 450.2852 m
263.9365 450.2852 L
263.9365 445.6465 L
263.9663 445.6465 L
264.1812 446.0317 264.5195 446.3682 264.9346 446.5996 c
265.3345 446.8296 265.8091 446.9829 266.3174 446.9829 c
267.3154 446.9829 268.9116 446.3682 268.9116 443.8037 c
268.9116 439.3804 L
267.5605 439.3804 L
267.5605 443.6504 L
267.5605 444.8486 267.1152 445.8613 265.8408 445.8613 c
264.9644 445.8613 264.2729 445.2466 264.0283 444.5103 c
263.9517 444.3252 263.9365 444.1255 263.9365 443.8657 c
263.9365 439.3804 L
262.5835 439.3804 L
262.5835 450.2852 l
f
*U
*u
271.8594 442.8506 m
271.8892 441.0229 273.0571 440.2715 274.4087 440.2715 c
275.3765 440.2715 275.96 440.4399 276.4678 440.6548 c
276.6978 439.687 L
276.2212 439.4717 275.4067 439.2104 274.2256 439.2104 c
271.936 439.2104 270.5693 440.7314 270.5693 442.9741 c
270.5693 445.2168 271.8892 446.9829 274.0552 446.9829 c
276.4829 446.9829 277.1279 444.8486 277.1279 443.4805 c
277.1279 443.2041 277.0962 442.9893 277.0811 442.8506 C
271.8594 442.8506 l
f
1 D
275.8213 443.8188 m
275.8384 444.6787 275.4683 446.0146 273.9487 446.0146 c
272.5811 446.0146 271.9829 444.7554 271.8745 443.8188 C
275.8213 443.8188 l
f
*U
U
u
*u
0 D
278.8008 444.4951 m
278.8008 445.3701 278.7837 446.123 278.7388 446.8145 c
279.9219 446.8145 L
279.9668 445.355 L
280.0283 445.355 L
280.3667 446.353 281.1816 446.9829 282.0879 446.9829 c
282.2412 446.9829 282.3477 446.9678 282.4712 446.938 c
282.4712 445.6616 L
282.333 445.6934 282.1943 445.7085 282.0098 445.7085 c
281.0581 445.7085 280.3818 444.9868 280.1982 443.9722 c
280.167 443.7891 280.1367 443.5737 280.1367 443.3423 c
280.1367 439.3804 L
278.8008 439.3804 L
278.8008 444.4951 l
f
*U
U
u
*u
284.4204 442.8506 m
284.4507 441.0229 285.6187 440.2715 286.9697 440.2715 c
287.9375 440.2715 288.521 440.4399 289.0293 440.6548 c
289.2588 439.687 L
288.7822 439.4717 287.9678 439.2104 286.7866 439.2104 c
284.4971 439.2104 283.1309 440.7314 283.1309 442.9741 c
283.1309 445.2168 284.4507 446.9829 286.6167 446.9829 c
289.0439 446.9829 289.689 444.8486 289.689 443.4805 c
289.689 443.2041 289.6587 442.9893 289.6421 442.8506 C
284.4204 442.8506 l
f
1 D
288.3828 443.8188 m
288.3994 444.6787 288.0293 446.0146 286.5098 446.0146 c
285.1421 446.0146 284.5439 444.7554 284.4355 443.8188 C
288.3828 443.8188 l
f
*U
U
u
*u
0 D
295.1074 446.8145 m
296.7349 442.4209 L
296.9048 441.9297 297.0884 441.3462 297.2114 440.9014 c
297.2432 440.9014 L
297.3813 441.3462 297.5347 441.9146 297.7183 442.4526 c
299.1924 446.8145 L
300.6221 446.8145 L
298.5942 441.5146 L
297.6265 438.9653 296.9668 437.6592 296.0454 436.8608 c
295.3838 436.2778 294.7241 436.0464 294.3857 435.9863 c
294.0474 437.1226 L
294.3857 437.2295 294.8306 437.4443 295.2305 437.7822 c
295.5986 438.0742 296.0601 438.5972 296.3667 439.2886 c
296.4282 439.4268 296.4751 439.5337 296.4751 439.6104 c
296.4751 439.687 296.4434 439.7949 296.3818 439.9634 c
293.6328 446.8145 L
295.1074 446.8145 l
f
*U
U
u
*u
308.4229 443.1592 m
308.4229 440.4102 306.5186 439.2104 304.7207 439.2104 c
302.71 439.2104 301.1582 440.6851 301.1582 443.0356 c
301.1582 445.5234 302.7861 446.9829 304.8438 446.9829 c
306.9785 446.9829 308.4229 445.4316 308.4229 443.1592 c
f
1 D
302.5244 443.0825 m
302.5244 441.4531 303.4609 440.2251 304.7822 440.2251 c
306.0742 440.2251 307.04 441.438 307.04 443.1123 c
307.04 444.3721 306.4102 445.9697 304.8145 445.9697 c
303.2168 445.9697 302.5244 444.4951 302.5244 443.0825 c
f
*U
*u
0 D
316.3457 441.4082 m
316.3457 440.6396 316.3623 439.9634 316.4072 439.3804 c
315.209 439.3804 L
315.1328 440.5933 L
315.1025 440.5933 L
314.749 439.9951 313.9648 439.2104 312.6455 439.2104 c
311.4775 439.2104 310.0791 439.8569 310.0791 442.4678 c
310.0791 446.8145 L
311.4307 446.8145 L
311.4307 442.6978 L
311.4307 441.2847 311.8604 440.3315 313.0898 440.3315 c
313.9961 440.3315 314.626 440.9614 314.8711 441.561 c
314.9473 441.7612 314.9941 442.0059 314.9941 442.2529 c
314.9941 446.8145 L
316.3457 446.8145 L
316.3457 441.4082 l
f
*U
*u
318.5869 444.4951 m
318.5869 445.3701 318.5713 446.123 318.5254 446.8145 c
319.708 446.8145 L
319.7529 445.355 L
319.8145 445.355 L
320.1523 446.353 320.9678 446.9829 321.874 446.9829 c
322.0273 446.9829 322.1338 446.9678 322.2568 446.938 c
322.2568 445.6616 L
322.1191 445.6934 321.9805 445.7085 321.7959 445.7085 c
320.8438 445.7085 320.168 444.9868 319.9844 443.9722 c
319.9531 443.7891 319.9229 443.5737 319.9229 443.3423 c
319.9229 439.3804 L
318.5869 439.3804 L
318.5869 444.4951 l
f
*U
U
u
*u
328.4902 448.5957 m
328.4902 446.8145 L
330.4248 446.8145 L
330.4248 445.7852 L
328.4902 445.7852 L
328.4902 441.7764 L
328.4902 440.855 328.752 440.3315 329.5029 440.3315 c
329.873 440.3315 330.0879 440.3633 330.2861 440.4248 c
330.3477 439.4102 L
330.0879 439.3037 329.6729 439.2104 329.1504 439.2104 c
328.5205 439.2104 328.0137 439.4268 327.6924 439.7949 c
327.3076 440.1934 327.1689 440.855 327.1689 441.7295 c
327.1689 445.7852 L
326.0176 445.7852 L
326.0176 446.8145 L
327.1689 446.8145 L
327.1689 448.1807 L
328.4902 448.5957 l
f
*U
U
u
*u
332.6055 442.8506 m
332.6357 441.0229 333.8037 440.2715 335.1543 440.2715 c
336.123 440.2715 336.7061 440.4399 337.2139 440.6548 c
337.4443 439.687 L
336.9678 439.4717 336.1523 439.2104 334.9717 439.2104 c
332.6826 439.2104 331.3164 440.7314 331.3164 442.9741 c
331.3164 445.2168 332.6357 446.9829 334.8018 446.9829 c
337.2295 446.9829 337.874 444.8486 337.874 443.4805 c
337.874 443.2041 337.8438 442.9893 337.8271 442.8506 C
332.6055 442.8506 l
f
1 D
336.5674 443.8188 m
336.584 444.6787 336.2148 446.0146 334.6953 446.0146 c
333.3271 446.0146 332.7285 444.7554 332.6201 443.8188 C
336.5674 443.8188 l
f
*U
U
u
*u
0 D
340.1279 446.8145 m
341.1875 445.2168 L
341.4648 444.8018 341.6943 444.4185 341.9414 444.0039 c
341.9873 444.0039 L
342.2324 444.4487 342.4795 444.8335 342.7236 445.2319 c
343.7686 446.8145 L
345.2285 446.8145 L
342.6943 443.2207 L
345.3047 439.3804 L
343.7686 439.3804 L
342.6777 441.0547 L
342.3857 441.4844 342.1406 441.8994 341.8789 442.3442 c
341.8496 442.3442 L
341.6025 441.8843 341.3408 441.4995 341.0664 441.0547 c
339.9902 439.3804 L
338.5 439.3804 L
341.1426 443.1738 L
338.624 446.8145 L
340.1279 446.8145 l
f
*U
U
u
*u
348.4355 448.5957 m
348.4355 446.8145 L
350.3721 446.8145 L
350.3721 445.7852 L
348.4355 445.7852 L
348.4355 441.7764 L
348.4355 440.855 348.6973 440.3315 349.4502 440.3315 c
349.8184 440.3315 350.0332 440.3633 350.2334 440.4248 c
350.2949 439.4102 L
350.0332 439.3037 349.6182 439.2104 349.0967 439.2104 c
348.4678 439.2104 347.9609 439.4268 347.6377 439.7949 c
347.2539 440.1934 347.1162 440.855 347.1162 441.7295 c
347.1162 445.7852 L
345.9629 445.7852 L
345.9629 446.8145 L
347.1162 446.8145 L
347.1162 448.1807 L
348.4355 448.5957 l
f
*U
*u
355.1455 450.2852 m
356.498 450.2852 L
356.498 445.6465 L
356.5283 445.6465 L
356.7432 446.0317 357.0811 446.3682 357.4961 446.5996 c
357.8965 446.8296 358.3711 446.9829 358.8789 446.9829 c
359.877 446.9829 361.4736 446.3682 361.4736 443.8037 c
361.4736 439.3804 L
360.1221 439.3804 L
360.1221 443.6504 L
360.1221 444.8486 359.6768 445.8613 358.4023 445.8613 c
357.5264 445.8613 356.835 445.2466 356.5898 444.5103 c
356.5127 444.3252 356.498 444.1255 356.498 443.8657 c
356.498 439.3804 L
355.1455 439.3804 L
355.1455 450.2852 l
f
*U
*u
364.4209 442.8506 m
364.4512 441.0229 365.6191 440.2715 366.9697 440.2715 c
367.9375 440.2715 368.5215 440.4399 369.0293 440.6548 c
369.2588 439.687 L
368.7822 439.4717 367.9678 439.2104 366.7871 439.2104 c
364.4971 439.2104 363.1309 440.7314 363.1309 442.9741 c
363.1309 445.2168 364.4512 446.9829 366.6162 446.9829 c
369.0439 446.9829 369.6895 444.8486 369.6895 443.4805 c
369.6895 443.2041 369.6572 442.9893 369.6426 442.8506 C
364.4209 442.8506 l
f
1 D
368.3828 443.8188 m
368.3994 444.6787 368.0293 446.0146 366.5098 446.0146 c
365.1426 446.0146 364.5439 444.7554 364.4355 443.8188 C
368.3828 443.8188 l
f
*U
U
u
*u
0 D
371.3604 444.4951 m
371.3604 445.3701 371.3457 446.123 371.2988 446.8145 c
372.4814 446.8145 L
372.5283 445.355 L
372.5898 445.355 L
372.9277 446.353 373.7412 446.9829 374.6475 446.9829 c
374.8008 446.9829 374.9092 446.9678 375.0303 446.938 c
375.0303 445.6616 L
374.8945 445.6934 374.7559 445.7085 374.5713 445.7085 c
373.6182 445.7085 372.9434 444.9868 372.7578 443.9722 c
372.7285 443.7891 372.6963 443.5737 372.6963 443.3423 c
372.6963 439.3804 L
371.3604 439.3804 L
371.3604 444.4951 l
f
*U
U
u
*u
376.9814 442.8506 m
377.0117 441.0229 378.1797 440.2715 379.5313 440.2715 c
380.499 440.2715 381.082 440.4399 381.5908 440.6548 c
381.8203 439.687 L
381.3438 439.4717 380.5293 439.2104 379.3477 439.2104 c
377.0586 439.2104 375.6924 440.7314 375.6924 442.9741 c
375.6924 445.2168 377.0117 446.9829 379.1777 446.9829 c
381.6055 446.9829 382.25 444.8486 382.25 443.4805 c
382.25 443.2041 382.2197 442.9893 382.2031 442.8506 C
376.9814 442.8506 l
f
1 D
380.9443 443.8188 m
380.9609 444.6787 380.5908 446.0146 379.0713 446.0146 c
377.7031 446.0146 377.1055 444.7554 376.9971 443.8188 C
380.9443 443.8188 l
f
*U
U
u
*u
0 D
109.9863 428.3887 m
111.6143 423.9951 L
111.7832 423.5034 111.9673 422.9204 112.0908 422.4736 c
112.1216 422.4736 L
112.2598 422.9204 112.4131 423.4883 112.5972 424.0249 c
114.0718 428.3887 L
115.5005 428.3887 L
113.4727 423.0889 L
112.5054 420.5396 111.8447 419.2334 110.9233 418.4355 c
110.2627 417.8506 109.6021 417.6201 109.2642 417.5586 c
108.9268 418.6953 L
109.2642 418.8037 109.7095 419.0186 110.1089 419.3564 c
110.4775 419.6484 110.9385 420.1694 111.2461 420.8608 c
111.3076 420.999 111.3535 421.1074 111.3535 421.1841 c
111.3535 421.2607 111.3228 421.3691 111.2607 421.5376 c
108.5117 428.3887 L
109.9863 428.3887 l
f
*U
U
u
*u
123.3013 424.7314 m
123.3013 421.9824 121.396 420.7842 119.5991 420.7842 c
117.5874 420.7842 116.0361 422.2588 116.0361 424.6099 c
116.0361 427.0972 117.6641 428.5571 119.7227 428.5571 c
121.8569 428.5571 123.3013 427.0059 123.3013 424.7314 c
f
1 D
117.4033 424.6548 m
117.4033 423.0269 118.3394 421.7988 119.6606 421.7988 c
120.9512 421.7988 121.9185 423.0122 121.9185 424.6865 c
121.9185 425.9463 121.2886 427.542 119.6914 427.542 c
118.0938 427.542 117.4033 426.0679 117.4033 424.6548 c
f
*U
*u
0 D
131.2236 422.9819 m
131.2236 422.2139 131.2397 421.5376 131.2856 420.9541 c
130.0874 420.9541 L
130.0107 422.167 L
129.98 422.167 L
129.627 421.5674 128.8428 420.7842 127.5225 420.7842 c
126.3555 420.7842 124.9575 421.4292 124.9575 424.0415 c
124.9575 428.3887 L
126.3086 428.3887 L
126.3086 424.2715 L
126.3086 422.8589 126.7388 421.9058 127.9673 421.9058 c
128.8735 421.9058 129.5034 422.5356 129.7495 423.1353 c
129.8262 423.3354 129.8726 423.5801 129.8726 423.8267 c
129.8726 428.3887 L
131.2236 428.3887 L
131.2236 422.9819 l
f
*U
*u
133.4639 426.0679 m
133.4639 426.9443 133.4492 427.6973 133.4023 428.3887 c
134.5854 428.3887 L
134.6313 426.9292 L
134.6929 426.9292 L
135.0308 427.9272 135.8447 428.5571 136.7515 428.5571 c
136.9048 428.5571 137.0122 428.542 137.1353 428.5103 c
137.1353 427.2358 L
136.9971 427.2676 136.8589 427.2822 136.6738 427.2822 c
135.7217 427.2822 135.0459 426.5591 134.8618 425.5464 c
134.8311 425.3613 134.8003 425.1465 134.8003 424.9165 c
134.8003 420.9541 L
133.4639 420.9541 L
133.4639 426.0679 l
f
*U
U
u
*u
143.3677 430.1699 m
143.3677 428.3887 L
145.3027 428.3887 L
145.3027 427.3589 L
143.3677 427.3589 L
143.3677 423.3501 L
143.3677 422.4287 143.6294 421.9058 144.3813 421.9058 c
144.7505 421.9058 144.9653 421.9375 145.1655 421.999 c
145.2261 420.9844 L
144.9653 420.8774 144.5508 420.7842 144.0283 420.7842 c
143.3984 420.7842 142.8921 420.999 142.5693 421.3691 c
142.1855 421.7676 142.0474 422.4287 142.0474 423.3037 c
142.0474 427.3589 L
140.895 427.3589 L
140.895 428.3887 L
142.0474 428.3887 L
142.0474 429.7549 L
143.3677 430.1699 l
f
*U
U
u
*u
147.4819 424.4248 m
147.5132 422.5972 148.6812 421.8442 150.0322 421.8442 c
151 421.8442 151.5835 422.0142 152.0908 422.229 c
152.3208 421.2607 L
151.8447 421.0459 151.0303 420.7842 149.8481 420.7842 c
147.5596 420.7842 146.1924 422.3057 146.1924 424.5483 c
146.1924 426.791 147.5132 428.5571 149.6787 428.5571 c
152.1055 428.5571 152.7505 426.4229 152.7505 425.0547 c
152.7505 424.7783 152.7207 424.563 152.7046 424.4248 C
147.4819 424.4248 l
f
1 D
151.4453 425.3931 m
151.4609 426.2524 151.0918 427.5889 149.5713 427.5889 c
148.2046 427.5889 147.6055 426.3291 147.498 425.3931 C
151.4453 425.3931 l
f
*U
U
u
*u
0 D
155.0073 428.3887 m
156.0669 426.791 L
156.3438 426.376 156.5732 425.9912 156.8203 425.5762 c
156.8657 425.5762 L
157.1118 426.0229 157.3574 426.4058 157.603 426.8057 c
158.6479 428.3887 L
160.1064 428.3887 L
157.5723 424.793 L
160.1831 420.9541 L
158.6479 420.9541 L
157.5566 422.627 L
157.2651 423.0586 157.019 423.4736 156.7583 423.9185 c
156.7275 423.9185 L
156.4819 423.457 156.2202 423.0737 155.9443 422.627 c
154.8691 420.9541 L
153.3794 420.9541 L
156.021 424.748 L
153.502 428.3887 L
155.0073 428.3887 l
f
*U
U
u
*u
163.3149 430.1699 m
163.3149 428.3887 L
165.25 428.3887 L
165.25 427.3589 L
163.3149 427.3589 L
163.3149 423.3501 L
163.3149 422.4287 163.5762 421.9058 164.3286 421.9058 c
164.6978 421.9058 164.9126 421.9375 165.1123 421.999 c
165.1733 420.9844 L
164.9126 420.8774 164.4976 420.7842 163.9756 420.7842 c
163.3457 420.7842 162.8389 420.999 162.5166 421.3691 c
162.1328 421.7676 161.9941 422.4287 161.9941 423.3037 c
161.9941 427.3589 L
160.8423 427.3589 L
160.8423 428.3887 L
161.9941 428.3887 L
161.9941 429.7549 L
163.3149 430.1699 l
f
*U
*u
170.0244 431.8594 m
171.3765 431.8594 L
171.3765 427.2207 L
171.4072 427.2207 L
171.6221 427.604 171.9595 427.9424 172.3745 428.1719 c
172.7744 428.4038 173.25 428.5571 173.7573 428.5571 c
174.7554 428.5571 176.3525 427.9424 176.3525 425.3779 c
176.3525 420.9541 L
175.001 420.9541 L
175.001 425.2231 L
175.001 426.4229 174.5552 427.4355 173.2808 427.4355 c
172.4053 427.4355 171.7139 426.8208 171.4683 426.0845 c
171.3916 425.8994 171.3765 425.6997 171.3765 425.4395 c
171.3765 420.9541 L
170.0244 420.9541 L
170.0244 431.8594 l
f
*U
*u
179.2988 424.4248 m
179.3296 422.5972 180.4971 421.8442 181.8491 421.8442 c
182.8164 421.8442 183.4004 422.0142 183.9077 422.229 c
184.1372 421.2607 L
183.6616 421.0459 182.8472 420.7842 181.665 420.7842 c
179.3755 420.7842 178.0093 422.3057 178.0093 424.5483 c
178.0093 426.791 179.3296 428.5571 181.4956 428.5571 c
183.9224 428.5571 184.5674 426.4229 184.5674 425.0547 c
184.5674 424.7783 184.5366 424.563 184.5215 424.4248 C
179.2988 424.4248 l
f
1 D
183.2617 425.3931 m
183.2778 426.2524 182.9087 427.5889 181.3882 427.5889 c
180.021 427.5889 179.4224 426.3291 179.3149 425.3931 C
183.2617 425.3931 l
f
*U
U
u
*u
0 D
186.2393 426.0679 m
186.2393 426.9443 186.2241 427.6973 186.1777 428.3887 c
187.3604 428.3887 L
187.4063 426.9292 L
187.4683 426.9292 L
187.8062 427.9272 188.6201 428.5571 189.5264 428.5571 c
189.6797 428.5571 189.7871 428.542 189.9097 428.5103 c
189.9097 427.2358 L
189.7725 427.2676 189.6343 427.2822 189.4492 427.2822 c
188.4971 427.2822 187.8213 426.5591 187.6372 425.5464 c
187.6064 425.3613 187.5757 425.1465 187.5757 424.9165 c
187.5757 420.9541 L
186.2393 420.9541 L
186.2393 426.0679 l
f
*U
U
u
*u
191.8584 424.4248 m
191.8892 422.5972 193.0571 421.8442 194.4082 421.8442 c
195.3765 421.8442 195.9595 422.0142 196.4668 422.229 c
196.6968 421.2607 L
196.2212 421.0459 195.4063 420.7842 194.2241 420.7842 c
191.936 420.7842 190.5688 422.3057 190.5688 424.5483 c
190.5688 426.791 191.8892 428.5571 194.0552 428.5571 c
196.4819 428.5571 197.127 426.4229 197.127 425.0547 c
197.127 424.7783 197.0967 424.563 197.0811 424.4248 C
191.8584 424.4248 l
f
1 D
195.8213 425.3931 m
195.8369 426.2524 195.4683 427.5889 193.9478 427.5889 c
192.5806 427.5889 191.9814 426.3291 191.874 425.3931 C
195.8213 425.3931 l
f
*U
U
u
*u
0 D
202.5459 428.3887 m
204.1733 423.9951 L
204.3433 423.5034 204.5264 422.9204 204.6499 422.4736 c
204.6816 422.4736 L
204.8198 422.9204 204.9731 423.4883 205.1563 424.0249 c
206.6309 428.3887 L
208.0605 428.3887 L
206.0327 423.0889 L
205.0645 420.5396 204.4048 419.2334 203.4829 418.4355 c
202.8223 417.8506 202.1616 417.6201 201.8237 417.5586 c
201.4863 418.6953 L
201.8237 418.8037 202.2695 419.0186 202.6685 419.3564 c
203.0376 419.6484 203.498 420.1694 203.8057 420.8608 c
203.8672 420.999 203.9131 421.1074 203.9131 421.1841 c
203.9131 421.2607 203.8823 421.3691 203.8203 421.5376 c
201.0713 428.3887 L
202.5459 428.3887 l
f
*U
U
u
*u
215.8613 424.7314 m
215.8613 421.9824 213.957 420.7842 212.1592 420.7842 c
210.1479 420.7842 208.5972 422.2588 208.5972 424.6099 c
208.5972 427.0972 210.2246 428.5571 212.2822 428.5571 c
214.417 428.5571 215.8613 427.0059 215.8613 424.7314 c
f
1 D
209.9634 424.6548 m
209.9634 423.0269 210.8994 421.7988 212.2207 421.7988 c
213.5122 421.7988 214.4785 423.0122 214.4785 424.6865 c
214.4785 425.9463 213.8486 427.542 212.2524 427.542 c
210.6548 427.542 209.9634 426.0679 209.9634 424.6548 c
f
*U
*u
0 D
223.7837 422.9819 m
223.7837 422.2139 223.8008 421.5376 223.8457 420.9541 c
222.6475 420.9541 L
222.5708 422.167 L
222.541 422.167 L
222.1875 421.5674 221.4028 420.7842 220.0835 420.7842 c
218.9155 420.7842 217.5176 421.4292 217.5176 424.0415 c
217.5176 428.3887 L
218.8687 428.3887 L
218.8687 424.2715 L
218.8687 422.8589 219.2988 421.9058 220.5283 421.9058 c
221.4346 421.9058 222.0645 422.5356 222.3096 423.1353 c
222.3857 423.3354 222.4326 423.5801 222.4326 423.8267 c
222.4326 428.3887 L
223.7837 428.3887 L
223.7837 422.9819 l
f
*U
*u
226.0249 426.0679 m
226.0249 426.9443 226.0098 427.6973 225.9634 428.3887 c
227.146 428.3887 L
227.1914 426.9292 L
227.2529 426.9292 L
227.5908 427.9272 228.4058 428.5571 229.312 428.5571 c
229.4653 428.5571 229.5723 428.542 229.6953 428.5103 c
229.6953 427.2358 L
229.5571 427.2676 229.4189 427.2822 229.2339 427.2822 c
228.2827 427.2822 227.606 426.5591 227.4229 425.5464 c
227.3911 425.3613 227.3613 425.1465 227.3613 424.9165 c
227.3613 420.9541 L
226.0249 420.9541 L
226.0249 426.0679 l
f
*U
U
u
*u
235.9282 430.1699 m
235.9282 428.3887 L
237.8647 428.3887 L
237.8647 427.3589 L
235.9282 427.3589 L
235.9282 423.3501 L
235.9282 422.4287 236.1899 421.9058 236.9434 421.9058 c
237.3115 421.9058 237.5264 421.9375 237.7261 421.999 c
237.7881 420.9844 L
237.5264 420.8774 237.1113 420.7842 236.5898 420.7842 c
235.96 420.7842 235.4536 420.999 235.1304 421.3691 c
234.7471 421.7676 234.6089 422.4287 234.6089 423.3037 c
234.6089 427.3589 L
233.4561 427.3589 L
233.4561 428.3887 L
234.6089 428.3887 L
234.6089 429.7549 L
235.9282 430.1699 l
f
*U
U
u
*u
240.0439 424.4248 m
240.0737 422.5972 241.2417 421.8442 242.5933 421.8442 c
243.561 421.8442 244.144 422.0142 244.6523 422.229 c
244.8823 421.2607 L
244.4058 421.0459 243.5913 420.7842 242.4097 420.7842 c
240.1206 420.7842 238.7544 422.3057 238.7544 424.5483 c
238.7544 426.791 240.0737 428.5571 242.2397 428.5571 c
244.6675 428.5571 245.312 426.4229 245.312 425.0547 c
245.312 424.7783 245.2822 424.563 245.2656 424.4248 C
240.0439 424.4248 l
f
1 D
244.0059 425.3931 m
244.0225 426.2524 243.6528 427.5889 242.1333 427.5889 c
240.7651 427.5889 240.167 426.3291 240.0586 425.3931 C
244.0059 425.3931 l
f
*U
U
u
*u
0 D
247.5684 428.3887 m
248.6279 426.791 L
248.9043 426.376 249.1343 425.9912 249.3809 425.5762 c
249.4277 425.5762 L
249.6724 426.0229 249.9189 426.4058 250.1641 426.8057 c
251.2085 428.3887 L
252.6685 428.3887 L
250.1343 424.793 L
252.7451 420.9541 L
251.2085 420.9541 L
250.1172 422.627 L
249.8257 423.0586 249.5811 423.4736 249.3193 423.9185 c
249.2891 423.9185 L
249.043 423.457 248.7813 423.0737 248.5063 422.627 c
247.4297 420.9541 L
245.9404 420.9541 L
248.583 424.748 L
246.0635 428.3887 L
247.5684 428.3887 l
f
*U
U
u
*u
255.874 430.1699 m
255.874 428.3887 L
257.8101 428.3887 L
257.8101 427.3589 L
255.874 427.3589 L
255.874 423.3501 L
255.874 422.4287 256.1357 421.9058 256.8887 421.9058 c
257.2568 421.9058 257.4717 421.9375 257.6719 421.999 c
257.7334 420.9844 L
257.4717 420.8774 257.0571 420.7842 256.5352 420.7842 c
255.9058 420.7842 255.3989 420.999 255.0757 421.3691 c
254.6929 421.7676 254.5542 422.4287 254.5542 423.3037 c
254.5542 427.3589 L
253.4014 427.3589 L
253.4014 428.3887 L
254.5542 428.3887 L
254.5542 429.7549 L
255.874 430.1699 l
f
*U
*u
262.5835 431.8594 m
263.9365 431.8594 L
263.9365 427.2207 L
263.9663 427.2207 L
264.1812 427.604 264.5195 427.9424 264.9346 428.1719 c
265.3345 428.4038 265.8091 428.5571 266.3174 428.5571 c
267.3154 428.5571 268.9116 427.9424 268.9116 425.3779 c
268.9116 420.9541 L
267.5605 420.9541 L
267.5605 425.2231 L
267.5605 426.4229 267.1152 427.4355 265.8408 427.4355 c
264.9644 427.4355 264.2729 426.8208 264.0283 426.0845 c
263.9517 425.8994 263.9365 425.6997 263.9365 425.4395 c
263.9365 420.9541 L
262.5835 420.9541 L
262.5835 431.8594 l
f
*U
*u
271.8594 424.4248 m
271.8892 422.5972 273.0571 421.8442 274.4087 421.8442 c
275.3765 421.8442 275.96 422.0142 276.4678 422.229 c
276.6978 421.2607 L
276.2212 421.0459 275.4067 420.7842 274.2256 420.7842 c
271.936 420.7842 270.5693 422.3057 270.5693 424.5483 c
270.5693 426.791 271.8892 428.5571 274.0552 428.5571 c
276.4829 428.5571 277.1279 426.4229 277.1279 425.0547 c
277.1279 424.7783 277.0962 424.563 277.0811 424.4248 C
271.8594 424.4248 l
f
1 D
275.8213 425.3931 m
275.8384 426.2524 275.4683 427.5889 273.9487 427.5889 c
272.5811 427.5889 271.9829 426.3291 271.8745 425.3931 C
275.8213 425.3931 l
f
*U
U
u
*u
0 D
278.8008 426.0679 m
278.8008 426.9443 278.7837 427.6973 278.7388 428.3887 c
279.9219 428.3887 L
279.9668 426.9292 L
280.0283 426.9292 L
280.3667 427.9272 281.1816 428.5571 282.0879 428.5571 c
282.2412 428.5571 282.3477 428.542 282.4712 428.5103 c
282.4712 427.2358 L
282.333 427.2676 282.1943 427.2822 282.0098 427.2822 c
281.0581 427.2822 280.3818 426.5591 280.1982 425.5464 c
280.167 425.3613 280.1367 425.1465 280.1367 424.9165 c
280.1367 420.9541 L
278.8008 420.9541 L
278.8008 426.0679 l
f
*U
U
u
*u
284.4204 424.4248 m
284.4507 422.5972 285.6187 421.8442 286.9697 421.8442 c
287.9375 421.8442 288.521 422.0142 289.0293 422.229 c
289.2588 421.2607 L
288.7822 421.0459 287.9678 420.7842 286.7866 420.7842 c
284.4971 420.7842 283.1309 422.3057 283.1309 424.5483 c
283.1309 426.791 284.4507 428.5571 286.6167 428.5571 c
289.0439 428.5571 289.689 426.4229 289.689 425.0547 c
289.689 424.7783 289.6587 424.563 289.6421 424.4248 C
284.4204 424.4248 l
f
1 D
288.3828 425.3931 m
288.3994 426.2524 288.0293 427.5889 286.5098 427.5889 c
285.1421 427.5889 284.5439 426.3291 284.4355 425.3931 C
288.3828 425.3931 l
f
*U
U
u
*u
0 D
295.1074 428.3887 m
296.7349 423.9951 L
296.9048 423.5034 297.0884 422.9204 297.2114 422.4736 c
297.2432 422.4736 L
297.3813 422.9204 297.5347 423.4883 297.7183 424.0249 c
299.1924 428.3887 L
300.6221 428.3887 L
298.5942 423.0889 L
297.6265 420.5396 296.9668 419.2334 296.0454 418.4355 c
295.3838 417.8506 294.7241 417.6201 294.3857 417.5586 c
294.0474 418.6953 L
294.3857 418.8037 294.8306 419.0186 295.2305 419.3564 c
295.5986 419.6484 296.0601 420.1694 296.3667 420.8608 c
296.4282 420.999 296.4751 421.1074 296.4751 421.1841 c
296.4751 421.2607 296.4434 421.3691 296.3818 421.5376 c
293.6328 428.3887 L
295.1074 428.3887 l
f
*U
U
u
*u
308.4229 424.7314 m
308.4229 421.9824 306.5186 420.7842 304.7207 420.7842 c
302.71 420.7842 301.1582 422.2588 301.1582 424.6099 c
301.1582 427.0972 302.7861 428.5571 304.8438 428.5571 c
306.9785 428.5571 308.4229 427.0059 308.4229 424.7314 c
f
1 D
302.5244 424.6548 m
302.5244 423.0269 303.4609 421.7988 304.7822 421.7988 c
306.0742 421.7988 307.04 423.0122 307.04 424.6865 c
307.04 425.9463 306.4102 427.542 304.8145 427.542 c
303.2168 427.542 302.5244 426.0679 302.5244 424.6548 c
f
*U
*u
0 D
316.3457 422.9819 m
316.3457 422.2139 316.3623 421.5376 316.4072 420.9541 c
315.209 420.9541 L
315.1328 422.167 L
315.1025 422.167 L
314.749 421.5674 313.9648 420.7842 312.6455 420.7842 c
311.4775 420.7842 310.0791 421.4292 310.0791 424.0415 c
310.0791 428.3887 L
311.4307 428.3887 L
311.4307 424.2715 L
311.4307 422.8589 311.8604 421.9058 313.0898 421.9058 c
313.9961 421.9058 314.626 422.5356 314.8711 423.1353 c
314.9473 423.3354 314.9941 423.5801 314.9941 423.8267 c
314.9941 428.3887 L
316.3457 428.3887 L
316.3457 422.9819 l
f
*U
*u
318.5869 426.0679 m
318.5869 426.9443 318.5713 427.6973 318.5254 428.3887 c
319.708 428.3887 L
319.7529 426.9292 L
319.8145 426.9292 L
320.1523 427.9272 320.9678 428.5571 321.874 428.5571 c
322.0273 428.5571 322.1338 428.542 322.2568 428.5103 c
322.2568 427.2358 L
322.1191 427.2676 321.9805 427.2822 321.7959 427.2822 c
320.8438 427.2822 320.168 426.5591 319.9844 425.5464 c
319.9531 425.3613 319.9229 425.1465 319.9229 424.9165 c
319.9229 420.9541 L
318.5869 420.9541 L
318.5869 426.0679 l
f
*U
U
u
*u
328.4902 430.1699 m
328.4902 428.3887 L
330.4248 428.3887 L
330.4248 427.3589 L
328.4902 427.3589 L
328.4902 423.3501 L
328.4902 422.4287 328.752 421.9058 329.5029 421.9058 c
329.873 421.9058 330.0879 421.9375 330.2861 421.999 c
330.3477 420.9844 L
330.0879 420.8774 329.6729 420.7842 329.1504 420.7842 c
328.5205 420.7842 328.0137 420.999 327.6924 421.3691 c
327.3076 421.7676 327.1689 422.4287 327.1689 423.3037 c
327.1689 427.3589 L
326.0176 427.3589 L
326.0176 428.3887 L
327.1689 428.3887 L
327.1689 429.7549 L
328.4902 430.1699 l
f
*U
U
u
*u
332.6055 424.4248 m
332.6357 422.5972 333.8037 421.8442 335.1543 421.8442 c
336.123 421.8442 336.7061 422.0142 337.2139 422.229 c
337.4443 421.2607 L
336.9678 421.0459 336.1523 420.7842 334.9717 420.7842 c
332.6826 420.7842 331.3164 422.3057 331.3164 424.5483 c
331.3164 426.791 332.6357 428.5571 334.8018 428.5571 c
337.2295 428.5571 337.874 426.4229 337.874 425.0547 c
337.874 424.7783 337.8438 424.563 337.8271 424.4248 C
332.6055 424.4248 l
f
1 D
336.5674 425.3931 m
336.584 426.2524 336.2148 427.5889 334.6953 427.5889 c
333.3271 427.5889 332.7285 426.3291 332.6201 425.3931 C
336.5674 425.3931 l
f
*U
U
u
*u
0 D
340.1279 428.3887 m
341.1875 426.791 L
341.4648 426.376 341.6943 425.9912 341.9414 425.5762 c
341.9873 425.5762 L
342.2324 426.0229 342.4795 426.4058 342.7236 426.8057 c
343.7686 428.3887 L
345.2285 428.3887 L
342.6943 424.793 L
345.3047 420.9541 L
343.7686 420.9541 L
342.6777 422.627 L
342.3857 423.0586 342.1406 423.4736 341.8789 423.9185 c
341.8496 423.9185 L
341.6025 423.457 341.3408 423.0737 341.0664 422.627 c
339.9902 420.9541 L
338.5 420.9541 L
341.1426 424.748 L
338.624 428.3887 L
340.1279 428.3887 l
f
*U
U
u
*u
348.4355 430.1699 m
348.4355 428.3887 L
350.3721 428.3887 L
350.3721 427.3589 L
348.4355 427.3589 L
348.4355 423.3501 L
348.4355 422.4287 348.6973 421.9058 349.4502 421.9058 c
349.8184 421.9058 350.0332 421.9375 350.2334 421.999 c
350.2949 420.9844 L
350.0332 420.8774 349.6182 420.7842 349.0967 420.7842 c
348.4678 420.7842 347.9609 420.999 347.6377 421.3691 c
347.2539 421.7676 347.1162 422.4287 347.1162 423.3037 c
347.1162 427.3589 L
345.9629 427.3589 L
345.9629 428.3887 L
347.1162 428.3887 L
347.1162 429.7549 L
348.4355 430.1699 l
f
*U
*u
355.1455 431.8594 m
356.498 431.8594 L
356.498 427.2207 L
356.5283 427.2207 L
356.7432 427.604 357.0811 427.9424 357.4961 428.1719 c
357.8965 428.4038 358.3711 428.5571 358.8789 428.5571 c
359.877 428.5571 361.4736 427.9424 361.4736 425.3779 c
361.4736 420.9541 L
360.1221 420.9541 L
360.1221 425.2231 L
360.1221 426.4229 359.6768 427.4355 358.4023 427.4355 c
357.5264 427.4355 356.835 426.8208 356.5898 426.0845 c
356.5127 425.8994 356.498 425.6997 356.498 425.4395 c
356.498 420.9541 L
355.1455 420.9541 L
355.1455 431.8594 l
f
*U
*u
364.4209 424.4248 m
364.4512 422.5972 365.6191 421.8442 366.9697 421.8442 c
367.9375 421.8442 368.5215 422.0142 369.0293 422.229 c
369.2588 421.2607 L
368.7822 421.0459 367.9678 420.7842 366.7871 420.7842 c
364.4971 420.7842 363.1309 422.3057 363.1309 424.5483 c
363.1309 426.791 364.4512 428.5571 366.6162 428.5571 c
369.0439 428.5571 369.6895 426.4229 369.6895 425.0547 c
369.6895 424.7783 369.6572 424.563 369.6426 424.4248 C
364.4209 424.4248 l
f
1 D
368.3828 425.3931 m
368.3994 426.2524 368.0293 427.5889 366.5098 427.5889 c
365.1426 427.5889 364.5439 426.3291 364.4355 425.3931 C
368.3828 425.3931 l
f
*U
U
u
*u
0 D
371.3604 426.0679 m
371.3604 426.9443 371.3457 427.6973 371.2988 428.3887 c
372.4814 428.3887 L
372.5283 426.9292 L
372.5898 426.9292 L
372.9277 427.9272 373.7412 428.5571 374.6475 428.5571 c
374.8008 428.5571 374.9092 428.542 375.0303 428.5103 c
375.0303 427.2358 L
374.8945 427.2676 374.7559 427.2822 374.5713 427.2822 c
373.6182 427.2822 372.9434 426.5591 372.7578 425.5464 c
372.7285 425.3613 372.6963 425.1465 372.6963 424.9165 c
372.6963 420.9541 L
371.3604 420.9541 L
371.3604 426.0679 l
f
*U
U
u
*u
376.9814 424.4248 m
377.0117 422.5972 378.1797 421.8442 379.5313 421.8442 c
380.499 421.8442 381.082 422.0142 381.5908 422.229 c
381.8203 421.2607 L
381.3438 421.0459 380.5293 420.7842 379.3477 420.7842 c
377.0586 420.7842 375.6924 422.3057 375.6924 424.5483 c
375.6924 426.791 377.0117 428.5571 379.1777 428.5571 c
381.6055 428.5571 382.25 426.4229 382.25 425.0547 c
382.25 424.7783 382.2197 424.563 382.2031 424.4248 C
376.9814 424.4248 l
f
1 D
380.9443 425.3931 m
380.9609 426.2524 380.5908 427.5889 379.0713 427.5889 c
377.7031 427.5889 377.1055 426.3291 376.9971 425.3931 C
380.9443 425.3931 l
f
*U
U
u
*u
0 D
109.9863 409.9609 m
111.6143 405.5693 L
111.7832 405.0771 111.9673 404.4932 112.0908 404.0479 c
112.1216 404.0479 L
112.2598 404.4932 112.4131 405.0605 112.5972 405.5986 c
114.0718 409.9609 L
115.5005 409.9609 L
113.4727 404.6631 L
112.5054 402.1123 111.8447 400.8076 110.9233 400.0088 c
110.2627 399.4248 109.6021 399.1943 109.2642 399.1328 c
108.9268 400.2686 L
109.2642 400.377 109.7095 400.5928 110.1089 400.9307 c
110.4775 401.2217 110.9385 401.7432 111.2461 402.4346 c
111.3076 402.5732 111.3535 402.6816 111.3535 402.7578 c
111.3535 402.835 111.3228 402.9414 111.2607 403.1113 c
108.5117 409.9609 L
109.9863 409.9609 l
f
*U
U
u
*u
123.3013 406.3057 m
123.3013 403.5566 121.396 402.3584 119.5991 402.3584 c
117.5874 402.3584 116.0361 403.833 116.0361 406.1826 c
116.0361 408.6719 117.6641 410.1309 119.7227 410.1309 c
121.8569 410.1309 123.3013 408.5801 123.3013 406.3057 c
f
1 D
117.4033 406.2285 m
117.4033 404.6006 118.3394 403.3711 119.6606 403.3711 c
120.9512 403.3711 121.9185 404.5859 121.9185 406.2607 c
121.9185 407.5186 121.2886 409.1162 119.6914 409.1162 c
118.0938 409.1162 117.4033 407.6416 117.4033 406.2285 c
f
*U
*u
0 D
131.2236 404.5547 m
131.2236 403.7861 131.2397 403.1113 131.2856 402.5264 c
130.0874 402.5264 L
130.0107 403.7412 L
129.98 403.7412 L
129.627 403.1416 128.8428 402.3584 127.5225 402.3584 c
126.3555 402.3584 124.9575 403.0029 124.9575 405.6143 c
124.9575 409.9609 L
126.3086 409.9609 L
126.3086 405.8457 L
126.3086 404.4326 126.7388 403.4795 127.9673 403.4795 c
128.8735 403.4795 129.5034 404.1094 129.7495 404.708 c
129.8262 404.9072 129.8726 405.1543 129.8726 405.3994 c
129.8726 409.9609 L
131.2236 409.9609 L
131.2236 404.5547 l
f
*U
*u
133.4639 407.6416 m
133.4639 408.5186 133.4492 409.2695 133.4023 409.9609 c
134.5854 409.9609 L
134.6313 408.502 L
134.6929 408.502 L
135.0308 409.501 135.8447 410.1309 136.7515 410.1309 c
136.9048 410.1309 137.0122 410.1143 137.1353 410.084 c
137.1353 408.8096 L
136.9971 408.8398 136.8589 408.8564 136.6738 408.8564 c
135.7217 408.8564 135.0459 408.1328 134.8618 407.1201 c
134.8311 406.9355 134.8003 406.7207 134.8003 406.4902 c
134.8003 402.5264 L
133.4639 402.5264 L
133.4639 407.6416 l
f
*U
U
u
*u
143.3677 411.7441 m
143.3677 409.9609 L
145.3027 409.9609 L
145.3027 408.9326 L
143.3677 408.9326 L
143.3677 404.9238 L
143.3677 404.001 143.6294 403.4795 144.3813 403.4795 c
144.7505 403.4795 144.9653 403.5098 145.1655 403.5713 c
145.2261 402.5586 L
144.9653 402.4502 144.5508 402.3584 144.0283 402.3584 c
143.3984 402.3584 142.8921 402.5732 142.5693 402.9414 c
142.1855 403.3418 142.0474 404.001 142.0474 404.8779 c
142.0474 408.9326 L
140.895 408.9326 L
140.895 409.9609 L
142.0474 409.9609 L
142.0474 411.3291 L
143.3677 411.7441 l
f
*U
U
u
*u
147.4819 405.999 m
147.5132 404.1709 148.6812 403.418 150.0322 403.418 c
151 403.418 151.5835 403.5859 152.0908 403.8027 c
152.3208 402.835 L
151.8447 402.6201 151.0303 402.3584 149.8481 402.3584 c
147.5596 402.3584 146.1924 403.8799 146.1924 406.1221 c
146.1924 408.3652 147.5132 410.1309 149.6787 410.1309 c
152.1055 410.1309 152.7505 407.9951 152.7505 406.6289 c
152.7505 406.3525 152.7207 406.1377 152.7046 405.999 C
147.4819 405.999 l
f
1 D
151.4453 406.9668 m
151.4609 407.8271 151.0918 409.1631 149.5713 409.1631 c
148.2046 409.1631 147.6055 407.9033 147.498 406.9668 C
151.4453 406.9668 l
f
*U
U
u
*u
0 D
155.0073 409.9609 m
156.0669 408.3652 L
156.3438 407.9502 156.5732 407.5654 156.8203 407.1504 c
156.8657 407.1504 L
157.1118 407.5967 157.3574 407.9795 157.603 408.3799 c
158.6479 409.9609 L
160.1064 409.9609 L
157.5723 406.3672 L
160.1831 402.5264 L
158.6479 402.5264 L
157.5566 404.2012 L
157.2651 404.6309 157.019 405.0459 156.7583 405.4922 c
156.7275 405.4922 L
156.4819 405.0313 156.2202 404.6475 155.9443 404.2012 c
154.8691 402.5264 L
153.3794 402.5264 L
156.021 406.3203 L
153.502 409.9609 L
155.0073 409.9609 l
f
*U
U
u
*u
163.3149 411.7441 m
163.3149 409.9609 L
165.25 409.9609 L
165.25 408.9326 L
163.3149 408.9326 L
163.3149 404.9238 L
163.3149 404.001 163.5762 403.4795 164.3286 403.4795 c
164.6978 403.4795 164.9126 403.5098 165.1123 403.5713 c
165.1733 402.5586 L
164.9126 402.4502 164.4976 402.3584 163.9756 402.3584 c
163.3457 402.3584 162.8389 402.5732 162.5166 402.9414 c
162.1328 403.3418 161.9941 404.001 161.9941 404.8779 c
161.9941 408.9326 L
160.8423 408.9326 L
160.8423 409.9609 L
161.9941 409.9609 L
161.9941 411.3291 L
163.3149 411.7441 l
f
*U
*u
170.0244 413.4336 m
171.3765 413.4336 L
171.3765 408.7949 L
171.4072 408.7949 L
171.6221 409.1777 171.9595 409.5166 172.3745 409.7461 c
172.7744 409.9756 173.25 410.1309 173.7573 410.1309 c
174.7554 410.1309 176.3525 409.5166 176.3525 406.9502 c
176.3525 402.5264 L
175.001 402.5264 L
175.001 406.7969 L
175.001 407.9951 174.5552 409.0098 173.2808 409.0098 c
172.4053 409.0098 171.7139 408.3945 171.4683 407.6572 c
171.3916 407.4736 171.3765 407.2734 171.3765 407.0117 c
171.3765 402.5264 L
170.0244 402.5264 L
170.0244 413.4336 l
f
*U
*u
179.2988 405.999 m
179.3296 404.1709 180.4971 403.418 181.8491 403.418 c
182.8164 403.418 183.4004 403.5859 183.9077 403.8027 c
184.1372 402.835 L
183.6616 402.6201 182.8472 402.3584 181.665 402.3584 c
179.3755 402.3584 178.0093 403.8799 178.0093 406.1221 c
178.0093 408.3652 179.3296 410.1309 181.4956 410.1309 c
183.9224 410.1309 184.5674 407.9951 184.5674 406.6289 c
184.5674 406.3525 184.5366 406.1377 184.5215 405.999 C
179.2988 405.999 l
f
1 D
183.2617 406.9668 m
183.2778 407.8271 182.9087 409.1631 181.3882 409.1631 c
180.021 409.1631 179.4224 407.9033 179.3149 406.9668 C
183.2617 406.9668 l
f
*U
U
u
*u
0 D
186.2393 407.6416 m
186.2393 408.5186 186.2241 409.2695 186.1777 409.9609 c
187.3604 409.9609 L
187.4063 408.502 L
187.4683 408.502 L
187.8062 409.501 188.6201 410.1309 189.5264 410.1309 c
189.6797 410.1309 189.7871 410.1143 189.9097 410.084 c
189.9097 408.8096 L
189.7725 408.8398 189.6343 408.8564 189.4492 408.8564 c
188.4971 408.8564 187.8213 408.1328 187.6372 407.1201 c
187.6064 406.9355 187.5757 406.7207 187.5757 406.4902 c
187.5757 402.5264 L
186.2393 402.5264 L
186.2393 407.6416 l
f
*U
U
u
*u
191.8584 405.999 m
191.8892 404.1709 193.0571 403.418 194.4082 403.418 c
195.3765 403.418 195.9595 403.5859 196.4668 403.8027 c
196.6968 402.835 L
196.2212 402.6201 195.4063 402.3584 194.2241 402.3584 c
191.936 402.3584 190.5688 403.8799 190.5688 406.1221 c
190.5688 408.3652 191.8892 410.1309 194.0552 410.1309 c
196.4819 410.1309 197.127 407.9951 197.127 406.6289 c
197.127 406.3525 197.0967 406.1377 197.0811 405.999 C
191.8584 405.999 l
f
1 D
195.8213 406.9668 m
195.8369 407.8271 195.4683 409.1631 193.9478 409.1631 c
192.5806 409.1631 191.9814 407.9033 191.874 406.9668 C
195.8213 406.9668 l
f
*U
U
u
*u
0 D
202.5459 409.9609 m
204.1733 405.5693 L
204.3433 405.0771 204.5264 404.4932 204.6499 404.0479 c
204.6816 404.0479 L
204.8198 404.4932 204.9731 405.0605 205.1563 405.5986 c
206.6309 409.9609 L
208.0605 409.9609 L
206.0327 404.6631 L
205.0645 402.1123 204.4048 400.8076 203.4829 400.0088 c
202.8223 399.4248 202.1616 399.1943 201.8237 399.1328 c
201.4863 400.2686 L
201.8237 400.377 202.2695 400.5928 202.6685 400.9307 c
203.0376 401.2217 203.498 401.7432 203.8057 402.4346 c
203.8672 402.5732 203.9131 402.6816 203.9131 402.7578 c
203.9131 402.835 203.8823 402.9414 203.8203 403.1113 c
201.0713 409.9609 L
202.5459 409.9609 l
f
*U
U
u
*u
215.8613 406.3057 m
215.8613 403.5566 213.957 402.3584 212.1592 402.3584 c
210.1479 402.3584 208.5972 403.833 208.5972 406.1826 c
208.5972 408.6719 210.2246 410.1309 212.2822 410.1309 c
214.417 410.1309 215.8613 408.5801 215.8613 406.3057 c
f
1 D
209.9634 406.2285 m
209.9634 404.6006 210.8994 403.3711 212.2207 403.3711 c
213.5122 403.3711 214.4785 404.5859 214.4785 406.2607 c
214.4785 407.5186 213.8486 409.1162 212.2524 409.1162 c
210.6548 409.1162 209.9634 407.6416 209.9634 406.2285 c
f
*U
*u
0 D
223.7837 404.5547 m
223.7837 403.7861 223.8008 403.1113 223.8457 402.5264 c
222.6475 402.5264 L
222.5708 403.7412 L
222.541 403.7412 L
222.1875 403.1416 221.4028 402.3584 220.0835 402.3584 c
218.9155 402.3584 217.5176 403.0029 217.5176 405.6143 c
217.5176 409.9609 L
218.8687 409.9609 L
218.8687 405.8457 L
218.8687 404.4326 219.2988 403.4795 220.5283 403.4795 c
221.4346 403.4795 222.0645 404.1094 222.3096 404.708 c
222.3857 404.9072 222.4326 405.1543 222.4326 405.3994 c
222.4326 409.9609 L
223.7837 409.9609 L
223.7837 404.5547 l
f
*U
*u
226.0249 407.6416 m
226.0249 408.5186 226.0098 409.2695 225.9634 409.9609 c
227.146 409.9609 L
227.1914 408.502 L
227.2529 408.502 L
227.5908 409.501 228.4058 410.1309 229.312 410.1309 c
229.4653 410.1309 229.5723 410.1143 229.6953 410.084 c
229.6953 408.8096 L
229.5571 408.8398 229.4189 408.8564 229.2339 408.8564 c
228.2827 408.8564 227.606 408.1328 227.4229 407.1201 c
227.3911 406.9355 227.3613 406.7207 227.3613 406.4902 c
227.3613 402.5264 L
226.0249 402.5264 L
226.0249 407.6416 l
f
*U
U
u
*u
235.9282 411.7441 m
235.9282 409.9609 L
237.8647 409.9609 L
237.8647 408.9326 L
235.9282 408.9326 L
235.9282 404.9238 L
235.9282 404.001 236.1899 403.4795 236.9434 403.4795 c
237.3115 403.4795 237.5264 403.5098 237.7261 403.5713 c
237.7881 402.5586 L
237.5264 402.4502 237.1113 402.3584 236.5898 402.3584 c
235.96 402.3584 235.4536 402.5732 235.1304 402.9414 c
234.7471 403.3418 234.6089 404.001 234.6089 404.8779 c
234.6089 408.9326 L
233.4561 408.9326 L
233.4561 409.9609 L
234.6089 409.9609 L
234.6089 411.3291 L
235.9282 411.7441 l
f
*U
U
u
*u
240.0439 405.999 m
240.0737 404.1709 241.2417 403.418 242.5933 403.418 c
243.561 403.418 244.144 403.5859 244.6523 403.8027 c
244.8823 402.835 L
244.4058 402.6201 243.5913 402.3584 242.4097 402.3584 c
240.1206 402.3584 238.7544 403.8799 238.7544 406.1221 c
238.7544 408.3652 240.0737 410.1309 242.2397 410.1309 c
244.6675 410.1309 245.312 407.9951 245.312 406.6289 c
245.312 406.3525 245.2822 406.1377 245.2656 405.999 C
240.0439 405.999 l
f
1 D
244.0059 406.9668 m
244.0225 407.8271 243.6528 409.1631 242.1333 409.1631 c
240.7651 409.1631 240.167 407.9033 240.0586 406.9668 C
244.0059 406.9668 l
f
*U
U
u
*u
0 D
247.5684 409.9609 m
248.6279 408.3652 L
248.9043 407.9502 249.1343 407.5654 249.3809 407.1504 c
249.4277 407.1504 L
249.6724 407.5967 249.9189 407.9795 250.1641 408.3799 c
251.2085 409.9609 L
252.6685 409.9609 L
250.1343 406.3672 L
252.7451 402.5264 L
251.2085 402.5264 L
250.1172 404.2012 L
249.8257 404.6309 249.5811 405.0459 249.3193 405.4922 c
249.2891 405.4922 L
249.043 405.0313 248.7813 404.6475 248.5063 404.2012 c
247.4297 402.5264 L
245.9404 402.5264 L
248.583 406.3203 L
246.0635 409.9609 L
247.5684 409.9609 l
f
*U
U
u
*u
255.874 411.7441 m
255.874 409.9609 L
257.8101 409.9609 L
257.8101 408.9326 L
255.874 408.9326 L
255.874 404.9238 L
255.874 404.001 256.1357 403.4795 256.8887 403.4795 c
257.2568 403.4795 257.4717 403.5098 257.6719 403.5713 c
257.7334 402.5586 L
257.4717 402.4502 257.0571 402.3584 256.5352 402.3584 c
255.9058 402.3584 255.3989 402.5732 255.0757 402.9414 c
254.6929 403.3418 254.5542 404.001 254.5542 404.8779 c
254.5542 408.9326 L
253.4014 408.9326 L
253.4014 409.9609 L
254.5542 409.9609 L
254.5542 411.3291 L
255.874 411.7441 l
f
*U
*u
262.5835 413.4336 m
263.9365 413.4336 L
263.9365 408.7949 L
263.9663 408.7949 L
264.1812 409.1777 264.5195 409.5166 264.9346 409.7461 c
265.3345 409.9756 265.8091 410.1309 266.3174 410.1309 c
267.3154 410.1309 268.9116 409.5166 268.9116 406.9502 c
268.9116 402.5264 L
267.5605 402.5264 L
267.5605 406.7969 L
267.5605 407.9951 267.1152 409.0098 265.8408 409.0098 c
264.9644 409.0098 264.2729 408.3945 264.0283 407.6572 c
263.9517 407.4736 263.9365 407.2734 263.9365 407.0117 c
263.9365 402.5264 L
262.5835 402.5264 L
262.5835 413.4336 l
f
*U
*u
271.8594 405.999 m
271.8892 404.1709 273.0571 403.418 274.4087 403.418 c
275.3765 403.418 275.96 403.5859 276.4678 403.8027 c
276.6978 402.835 L
276.2212 402.6201 275.4067 402.3584 274.2256 402.3584 c
271.936 402.3584 270.5693 403.8799 270.5693 406.1221 c
270.5693 408.3652 271.8892 410.1309 274.0552 410.1309 c
276.4829 410.1309 277.1279 407.9951 277.1279 406.6289 c
277.1279 406.3525 277.0962 406.1377 277.0811 405.999 C
271.8594 405.999 l
f
1 D
275.8213 406.9668 m
275.8384 407.8271 275.4683 409.1631 273.9487 409.1631 c
272.5811 409.1631 271.9829 407.9033 271.8745 406.9668 C
275.8213 406.9668 l
f
*U
U
u
*u
0 D
278.8008 407.6416 m
278.8008 408.5186 278.7837 409.2695 278.7388 409.9609 c
279.9219 409.9609 L
279.9668 408.502 L
280.0283 408.502 L
280.3667 409.501 281.1816 410.1309 282.0879 410.1309 c
282.2412 410.1309 282.3477 410.1143 282.4712 410.084 c
282.4712 408.8096 L
282.333 408.8398 282.1943 408.8564 282.0098 408.8564 c
281.0581 408.8564 280.3818 408.1328 280.1982 407.1201 c
280.167 406.9355 280.1367 406.7207 280.1367 406.4902 c
280.1367 402.5264 L
278.8008 402.5264 L
278.8008 407.6416 l
f
*U
U
u
*u
284.4204 405.999 m
284.4507 404.1709 285.6187 403.418 286.9697 403.418 c
287.9375 403.418 288.521 403.5859 289.0293 403.8027 c
289.2588 402.835 L
288.7822 402.6201 287.9678 402.3584 286.7866 402.3584 c
284.4971 402.3584 283.1309 403.8799 283.1309 406.1221 c
283.1309 408.3652 284.4507 410.1309 286.6167 410.1309 c
289.0439 410.1309 289.689 407.9951 289.689 406.6289 c
289.689 406.3525 289.6587 406.1377 289.6421 405.999 C
284.4204 405.999 l
f
1 D
288.3828 406.9668 m
288.3994 407.8271 288.0293 409.1631 286.5098 409.1631 c
285.1421 409.1631 284.5439 407.9033 284.4355 406.9668 C
288.3828 406.9668 l
f
*U
U
u
*u
0 D
295.1074 409.9609 m
296.7349 405.5693 L
296.9048 405.0771 297.0884 404.4932 297.2114 404.0479 c
297.2432 404.0479 L
297.3813 404.4932 297.5347 405.0605 297.7183 405.5986 c
299.1924 409.9609 L
300.6221 409.9609 L
298.5942 404.6631 L
297.6265 402.1123 296.9668 400.8076 296.0454 400.0088 c
295.3838 399.4248 294.7241 399.1943 294.3857 399.1328 c
294.0474 400.2686 L
294.3857 400.377 294.8306 400.5928 295.2305 400.9307 c
295.5986 401.2217 296.0601 401.7432 296.3667 402.4346 c
296.4282 402.5732 296.4751 402.6816 296.4751 402.7578 c
296.4751 402.835 296.4434 402.9414 296.3818 403.1113 c
293.6328 409.9609 L
295.1074 409.9609 l
f
*U
U
u
*u
308.4229 406.3057 m
308.4229 403.5566 306.5186 402.3584 304.7207 402.3584 c
302.71 402.3584 301.1582 403.833 301.1582 406.1826 c
301.1582 408.6719 302.7861 410.1309 304.8438 410.1309 c
306.9785 410.1309 308.4229 408.5801 308.4229 406.3057 c
f
1 D
302.5244 406.2285 m
302.5244 404.6006 303.4609 403.3711 304.7822 403.3711 c
306.0742 403.3711 307.04 404.5859 307.04 406.2607 c
307.04 407.5186 306.4102 409.1162 304.8145 409.1162 c
303.2168 409.1162 302.5244 407.6416 302.5244 406.2285 c
f
*U
*u
0 D
316.3457 404.5547 m
316.3457 403.7861 316.3623 403.1113 316.4072 402.5264 c
315.209 402.5264 L
315.1328 403.7412 L
315.1025 403.7412 L
314.749 403.1416 313.9648 402.3584 312.6455 402.3584 c
311.4775 402.3584 310.0791 403.0029 310.0791 405.6143 c
310.0791 409.9609 L
311.4307 409.9609 L
311.4307 405.8457 L
311.4307 404.4326 311.8604 403.4795 313.0898 403.4795 c
313.9961 403.4795 314.626 404.1094 314.8711 404.708 c
314.9473 404.9072 314.9941 405.1543 314.9941 405.3994 c
314.9941 409.9609 L
316.3457 409.9609 L
316.3457 404.5547 l
f
*U
*u
318.5869 407.6416 m
318.5869 408.5186 318.5713 409.2695 318.5254 409.9609 c
319.708 409.9609 L
319.7529 408.502 L
319.8145 408.502 L
320.1523 409.501 320.9678 410.1309 321.874 410.1309 c
322.0273 410.1309 322.1338 410.1143 322.2568 410.084 c
322.2568 408.8096 L
322.1191 408.8398 321.9805 408.8564 321.7959 408.8564 c
320.8438 408.8564 320.168 408.1328 319.9844 407.1201 c
319.9531 406.9355 319.9229 406.7207 319.9229 406.4902 c
319.9229 402.5264 L
318.5869 402.5264 L
318.5869 407.6416 l
f
*U
U
u
*u
328.4902 411.7441 m
328.4902 409.9609 L
330.4248 409.9609 L
330.4248 408.9326 L
328.4902 408.9326 L
328.4902 404.9238 L
328.4902 404.001 328.752 403.4795 329.5029 403.4795 c
329.873 403.4795 330.0879 403.5098 330.2861 403.5713 c
330.3477 402.5586 L
330.0879 402.4502 329.6729 402.3584 329.1504 402.3584 c
328.5205 402.3584 328.0137 402.5732 327.6924 402.9414 c
327.3076 403.3418 327.1689 404.001 327.1689 404.8779 c
327.1689 408.9326 L
326.0176 408.9326 L
326.0176 409.9609 L
327.1689 409.9609 L
327.1689 411.3291 L
328.4902 411.7441 l
f
*U
U
u
*u
332.6055 405.999 m
332.6357 404.1709 333.8037 403.418 335.1543 403.418 c
336.123 403.418 336.7061 403.5859 337.2139 403.8027 c
337.4443 402.835 L
336.9678 402.6201 336.1523 402.3584 334.9717 402.3584 c
332.6826 402.3584 331.3164 403.8799 331.3164 406.1221 c
331.3164 408.3652 332.6357 410.1309 334.8018 410.1309 c
337.2295 410.1309 337.874 407.9951 337.874 406.6289 c
337.874 406.3525 337.8438 406.1377 337.8271 405.999 C
332.6055 405.999 l
f
1 D
336.5674 406.9668 m
336.584 407.8271 336.2148 409.1631 334.6953 409.1631 c
333.3271 409.1631 332.7285 407.9033 332.6201 406.9668 C
336.5674 406.9668 l
f
*U
U
u
*u
0 D
340.1279 409.9609 m
341.1875 408.3652 L
341.4648 407.9502 341.6943 407.5654 341.9414 407.1504 c
341.9873 407.1504 L
342.2324 407.5967 342.4795 407.9795 342.7236 408.3799 c
343.7686 409.9609 L
345.2285 409.9609 L
342.6943 406.3672 L
345.3047 402.5264 L
343.7686 402.5264 L
342.6777 404.2012 L
342.3857 404.6309 342.1406 405.0459 341.8789 405.4922 c
341.8496 405.4922 L
341.6025 405.0313 341.3408 404.6475 341.0664 404.2012 c
339.9902 402.5264 L
338.5 402.5264 L
341.1426 406.3203 L
338.624 409.9609 L
340.1279 409.9609 l
f
*U
U
u
*u
348.4355 411.7441 m
348.4355 409.9609 L
350.3721 409.9609 L
350.3721 408.9326 L
348.4355 408.9326 L
348.4355 404.9238 L
348.4355 404.001 348.6973 403.4795 349.4502 403.4795 c
349.8184 403.4795 350.0332 403.5098 350.2334 403.5713 c
350.2949 402.5586 L
350.0332 402.4502 349.6182 402.3584 349.0967 402.3584 c
348.4678 402.3584 347.9609 402.5732 347.6377 402.9414 c
347.2539 403.3418 347.1162 404.001 347.1162 404.8779 c
347.1162 408.9326 L
345.9629 408.9326 L
345.9629 409.9609 L
347.1162 409.9609 L
347.1162 411.3291 L
348.4355 411.7441 l
f
*U
*u
355.1455 413.4336 m
356.498 413.4336 L
356.498 408.7949 L
356.5283 408.7949 L
356.7432 409.1777 357.0811 409.5166 357.4961 409.7461 c
357.8965 409.9756 358.3711 410.1309 358.8789 410.1309 c
359.877 410.1309 361.4736 409.5166 361.4736 406.9502 c
361.4736 402.5264 L
360.1221 402.5264 L
360.1221 406.7969 L
360.1221 407.9951 359.6768 409.0098 358.4023 409.0098 c
357.5264 409.0098 356.835 408.3945 356.5898 407.6572 c
356.5127 407.4736 356.498 407.2734 356.498 407.0117 c
356.498 402.5264 L
355.1455 402.5264 L
355.1455 413.4336 l
f
*U
*u
364.4209 405.999 m
364.4512 404.1709 365.6191 403.418 366.9697 403.418 c
367.9375 403.418 368.5215 403.5859 369.0293 403.8027 c
369.2588 402.835 L
368.7822 402.6201 367.9678 402.3584 366.7871 402.3584 c
364.4971 402.3584 363.1309 403.8799 363.1309 406.1221 c
363.1309 408.3652 364.4512 410.1309 366.6162 410.1309 c
369.0439 410.1309 369.6895 407.9951 369.6895 406.6289 c
369.6895 406.3525 369.6572 406.1377 369.6426 405.999 C
364.4209 405.999 l
f
1 D
368.3828 406.9668 m
368.3994 407.8271 368.0293 409.1631 366.5098 409.1631 c
365.1426 409.1631 364.5439 407.9033 364.4355 406.9668 C
368.3828 406.9668 l
f
*U
U
u
*u
0 D
371.3604 407.6416 m
371.3604 408.5186 371.3457 409.2695 371.2988 409.9609 c
372.4814 409.9609 L
372.5283 408.502 L
372.5898 408.502 L
372.9277 409.501 373.7412 410.1309 374.6475 410.1309 c
374.8008 410.1309 374.9092 410.1143 375.0303 410.084 c
375.0303 408.8096 L
374.8945 408.8398 374.7559 408.8564 374.5713 408.8564 c
373.6182 408.8564 372.9434 408.1328 372.7578 407.1201 c
372.7285 406.9355 372.6963 406.7207 372.6963 406.4902 c
372.6963 402.5264 L
371.3604 402.5264 L
371.3604 407.6416 l
f
*U
U
u
*u
376.9814 405.999 m
377.0117 404.1709 378.1797 403.418 379.5313 403.418 c
380.499 403.418 381.082 403.5859 381.5908 403.8027 c
381.8203 402.835 L
381.3438 402.6201 380.5293 402.3584 379.3477 402.3584 c
377.0586 402.3584 375.6924 403.8799 375.6924 406.1221 c
375.6924 408.3652 377.0117 410.1309 379.1777 410.1309 c
381.6055 410.1309 382.25 407.9951 382.25 406.6289 c
382.25 406.3525 382.2197 406.1377 382.2031 405.999 C
376.9814 405.999 l
f
1 D
380.9443 406.9668 m
380.9609 407.8271 380.5908 409.1631 379.0713 409.1631 c
377.7031 409.1631 377.1055 407.9033 376.9971 406.9668 C
380.9443 406.9668 l
f
*U
U
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
